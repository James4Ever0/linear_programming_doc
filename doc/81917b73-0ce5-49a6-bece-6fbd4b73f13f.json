{
    "summary": "This code demonstrates defining arrays, parameters and variables in Pyomo, setting bounds and constraints, creating an objective function, and solving with CPLEX.",
    "details": [
        {
            "comment": "This code demonstrates how to define arrays and variables in Pyomo using Python lists, NumPy arrays, and Pyomo components. It shows how to create an array with 10 elements, define a parameter, and set the bounds for variables. It also illustrates defining a set of variables based on a variable group, assigning initial values, and setting domain constraints. Lastly, it defines a constant parameter and creates an objective function.",
            "location": "\"/media/root/Prima/works/generated_docs/linear_programming_doc/src/pyomo_define_array_list.py\":0-34",
            "content": "##\u5728Pyomo\u4e2d\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u65b9\u5f0f\u5b9a\u4e49\u6570\u7ec4\u548c\u53d8\u91cf\u7ec4\uff1a\n##1. \u5b9a\u4e49\u6570\u7ec4\uff1a\u53ef\u4ee5\u4f7f\u7528Python\u4e2d\u7684\u5217\u8868\uff08list\uff09\u6216Numpy\u4e2d\u7684\u6570\u7ec4\uff08array\uff09\u5b9a\u4e49\u6570\u7ec4\uff0c\u7136\u540e\u4f7f\u7528pyomo.environ.Param\u7ec4\u4ef6\u5b9a\u4e49Pyomo\u4e2d\u7684\u53c2\u6570\u3002\u4f8b\u5982\uff0c\u5b9a\u4e49\u4e00\u4e2a\u5305\u542b10\u4e2a\u5143\u7d20\u7684\u6570\u7ec4\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a\nimport numpy as np\nfrom pyomo.environ import *\n# \u5b9a\u4e49\u6570\u7ec4\narr = np.arange(10)\n# \u5b9a\u4e49\u53c2\u6570\nmodel = ConcreteModel()\n# model.A = Param(range(10), initialize={i: arr[i] for i in range(10)}) # index: 0 to 9\n##2. \u5b9a\u4e49\u53d8\u91cf\u7ec4\uff1a\u53ef\u4ee5\u4f7f\u7528pyomo.environ.Set\u7ec4\u4ef6\u5b9a\u4e49\u53d8\u91cf\u7ec4\uff0c\u5e76\u4f7f\u7528pyomo.environ.Var\u7ec4\u4ef6\u5b9a\u4e49\u53d8\u91cf\u3002\u4f8b\u5982\uff0c\u5b9a\u4e49\u4e00\u4e2a\u5305\u542b10\u4e2a\u53d8\u91cf\u7684\u53d8\u91cf\u7ec4\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u4ee3\u7801\uff1a\n# \u5b9a\u4e49\u53d8\u91cf\u7ec4\n# model.I = Set(initialize  = [0,0])\n# model.I = Set(initialize=range(10)) # index: 1 to 10\n# \u5b9a\u4e49\u53d8\u91cf\n# variables must be assigned to model as attribute\nmodel.x = Var([0, 1], bounds=(-10, 10))  # indexes, other keywords\n# model.x = Var(model.I, initialize=0, domain=(-10,10)) # index from 0 to 1\n##\u5728\u4e0a\u8ff0\u4ee3\u7801\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cf\u7ec4I\uff0c\u5176\u4e2d\u5305\u542b10\u4e2a\u53d8\u91cf\uff0c\u7136\u540e\u4f7f\u7528pyomo.environ.Var\u7ec4\u4ef6\u5b9a\u4e49\u4e86\u4e00\u4e2a\u53d8\u91cfx\uff0c\u5b83\u662f\u53d8\u91cf\u7ec4I\u4e2d\u7684\u6bcf\u4e2a\u53d8\u91cf\u3002\n# breakpoint()\n# model.Y = Var()\n# Constraint(model.I[1] == 2*model.x)\n# Constraint(model.I[2] == 2*model.y)\nmodel.p = Param(initialize=2) # shall be constant.\n# breakpoint()\ndef objective(self):\n    # return sum(model.I[i] * model.A[j] for i in range(1,11) for j in range(10))"
        },
        {
            "comment": "This code defines an objective function using Pyomo, solves the problem with CPLEX solver, and displays the objective value and variable values.",
            "location": "\"/media/root/Prima/works/generated_docs/linear_programming_doc/src/pyomo_define_array_list.py\":35-43",
            "content": "    return (model.x[0] - model.x[1]) * model.p\nmodel.OBJ = Objective(rule=objective, sense=minimize)\nsolver = SolverFactory(\"cplex\")\nresults = solver.solve(model)\n# model.I.display()\nmodel.OBJ.display()\nmodel.x.display()"
        }
    ]
}