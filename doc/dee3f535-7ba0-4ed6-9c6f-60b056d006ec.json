{
    "summary": "This code imports device parameters, sets up prompts for auto-questions, and logs output. It runs on a CPU without GPU access, uses Termbin for compatibility, generates questions, and saves user answers in a file.",
    "details": [
        {
            "comment": "This code imports device parameters from a JSON file, defines a prompt template for generating auto-questions related to the device, and sets up output logging. The code is being run on a machine without GPU access, so it uses a CPU for RWKV model execution. The imported data may come from Termbin due to compatibility issues between two computers.",
            "location": "\"/media/root/Prima/works/generated_docs/linear_programming_doc/src/auto_question_device_params.py\":0-50",
            "content": "# %%\n# import data from dataset, or from termbin?\n# termbin instead? since we are running on two computers.\n# first let's spin up some RWKV model on CPU.\n# !curl -o device_params.json https://termbin.com/766n\n# you cannot use gpu on this machine.\n# cpu is too damn slow.\n# %%\nimport json\nwith open('device_params.json', 'r', encoding='utf-8') as f:\n    data = json.loads(f.read())\n# %%\n# you can use other models as well. as long as you like.\n# but first let's define the prompt.\nprompt_template = lambda device_type, device_name, device_params: f\"\"\"\n\u4e3a\u4e86\u5efa\u6a21\u9700\u8981\uff0c\u5bf9\u8bbe\u5907\u53c2\u6570\u8fdb\u884c\u786e\u5b9a\u3002\n\u8bbe\u5907\u7c7b\u578b: {device_type}\n\u8bbe\u5907\u540d\u79f0: {device_name}\n\u8bbe\u5907\u53c2\u6570: \n{device_params}\n\u6839\u636e\u53c2\u6570\u5185\u5bb9\u63d0\u51fa\u4f60\u7684\u8d28\u7591\uff0c\u53ef\u4ee5\u8d28\u7591\u5176\u4e2d\u53c2\u6570\u7684\u5355\u4f4d\uff0c\u63d0\u51fa\u5bf9\u4e8e\u975e\u5fc5\u586b\u53c2\u6570\u5982\u4f55\u53c2\u4e0e\u8ba1\u7b97\u7684\u8d28\u7591\uff08\u5982\u4f55\u5728\u4e0d\u586b\u5199\u975e\u5fc5\u586b\u53c2\u6570\u548c\u586b\u5199\u975e\u5fc5\u586b\u53c2\u6570\u7684\u4e24\u79cd\u60c5\u51b5\u4e0b\u8ba1\u7b97\u51fa\u7ed3\u679c\uff09\uff0c\u63d0\u51fa\u662f\u4e0d\u662f\u5e94\u8be5\u5220\u9664\u5176\u4e2d\u7684\u67d0\u4e9b\u53c2\u6570\uff0c\u589e\u52a0\u65b0\u7684\u53c2\u6570\uff0c\u4ee5\u53ca\u5bf9\u53c2\u6570\u589e\u52a0\u548c\u5220\u9664\u5408\u7406\u6027\u7684\u8d28\u7591\u3002\n\"\"\"\n# %%\n# IGNORE EXAMPLE DATA, WHICH IS THE SECOND ELEM.\n# import os\noutput_path = \"output_auto_questions.log\"\n# since it is slow we don't overwrite.\n# if os.path.exists(output_path):\n#     os.remove(output_path)\ndef fprint(f, content):\n    f.write(content)\n    f.write('\\n')\n    print(content)"
        },
        {
            "comment": "This code reads data from 'data' dictionary, and for each device type-device name pair, it generates a question using the prompt template. The generated question is then printed to the file along with a header and copied to clipboard. After displaying a \"CONTINUE?\" prompt, the user pastes an answer which is also saved in the file.",
            "location": "\"/media/root/Prima/works/generated_docs/linear_programming_doc/src/auto_question_device_params.py\":52-73",
            "content": "import pyperclip\nwith open(output_path,'a+', encoding='utf-8') as f:\n    for device_type, devices in data.items():\n        for device_name, device_param_list in devices.items():\n            device_params = []\n            for a, _, c in device_param_list:\n                if c is None:\n                    c = \"\"\n                device_params.append(f\"    {a} {c}\")\n            device_params = \"\\n\".join(device_params)\n            question = prompt_template(device_type,device_name,device_params)\n            fprint(f,\"*\"*20+\"QUESTION\"+\"*\"*20)\n            fprint(f,question)\n            pyperclip.copy(question)\n            fprint(f,\"*\"*20+\"ANSWER\"+\"*\"*20)\n            input(\"CONTINUE?\")\n            answer = pyperclip.paste()\n            fprint(f, answer)\n    #         answer = evaluate(get_request(question), *invokeParams[0])\n    #         print(answer)\n    # SHALL BE ANSWER HERE."
        }
    ]
}