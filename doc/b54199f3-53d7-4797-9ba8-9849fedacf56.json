{
    "summary": "The code imports docplex library and defines a Value class to handle variable values. It checks the type of input and returns corresponding value or raises a \"type error\" if not recognized.",
    "details": [
        {
            "comment": "The code imports docplex library and defines a Value class to handle variable values. It checks the type of input and returns corresponding value or raises a \"type error\" if not recognized.",
            "location": "\"/media/root/Prima/works/generated_docs/linear_programming_doc/src/result_processlib.py\":0-29",
            "content": "# import docplex_test\nimport docplex\n# from docplex.mp.model import Model\nimport numpy\nclass Value(object):\n    def __init__(self, sol):\n        self.sol = sol\n    def value(self, x):\n        if isinstance(x, int):\n            return x\n        elif isinstance(x, float):\n            print('float')\n            return x\n        elif isinstance(x, list) and isinstance(x[0], docplex.mp.dvar.Var):\n            return self.sol.get_values(x)\n        elif isinstance(x, docplex.mp.dvar.Var):\n            return self.sol.get_value(x)\n        elif isinstance(x, list) and isinstance(x[0], int):\n            return x\n        elif isinstance(x, list) and isinstance(x[0], float):\n            return x\n        elif isinstance(x, numpy.ndarray):\n            return x\n        else:\n            print('type error')\n            return None"
        }
    ]
}