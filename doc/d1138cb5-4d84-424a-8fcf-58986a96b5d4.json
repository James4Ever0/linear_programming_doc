{
    "summary": "Class \"ConflictRefinerParams\" defines parameters for conflict resolution, including model file path, output file path, resolution method (cplex or docplex), and timeout. The output path must be a non-existing file and not a directory.",
    "details": [
        {
            "comment": "Class \"ConflictRefinerParams\" defines parameters for conflict resolution, including model file path, output file path, resolution method (cplex or docplex), and timeout. The output path must be a non-existing file and not a directory.",
            "location": "\"/media/root/Prima/works/generated_docs/linear_programming_doc/src/microgrid_base/shared_datamodels.py\":0-29",
            "content": "from log_utils import logger_print\nfrom pydantic import Field, BaseModel, validator\ntry:\n    from typing import Literal\nexcept:\n    from typing_extensions import Literal\nimport os\nclass ConflictRefinerParams(BaseModel):\n    model_path: str = Field(title=\"'.lp' model file path\")\n    output: str = Field(title=\"conflict analysis output file path\")\n    config: Literal[\"cplex\", \"docplex\"] = Field(\n        default=\"cplex\",\n        title=\"conflict resolution method, can be one of ['cplex', 'docplex']\",\n    )\n    timeout: float = Field(default=5, title=\"timeout in seconds, default is 5 seconds\")\n    @validator(\"output\")\n    def validate_output(cls, val):\n        dirname = os.path.dirname(val)\n        assert os.path.isdir(\n            dirname\n        ), f\"output directory does not exist!\\noutput path: {val}\"\n        assert not os.path.isdir(\n            val\n        ), f\"output path shall not be an existing directory!\\noutput path: {val}\"\n        return val"
        }
    ]
}