{
    "url": {
        "full": "https://github.com/YuPan4188/jubilant-adventure",
        "partial": "YuPan4188/jubilant-adventure"
    },
    "file_mapping": {
        "0": {
            "filepath": "/README.md",
            "entry_id": 0,
            "language_id": "plain-text"
        },
        "1": {
            "filepath": "/auto_question_device_params.py",
            "entry_id": 8,
            "language_id": "python"
        },
        "2": {
            "filepath": "/celery_client_test.py",
            "entry_id": 14,
            "language_id": "python"
        },
        "3": {
            "filepath": "/celery_fastapi_test.py",
            "entry_id": 20,
            "language_id": "python"
        },
        "4": {
            "filepath": "/celery_test.py",
            "entry_id": 30,
            "language_id": "python"
        },
        "5": {
            "filepath": "/check_non_convex_quadratic_constraint_in_model.py",
            "entry_id": 38,
            "language_id": "python"
        },
        "6": {
            "filepath": "/cloudpss_config2.py",
            "entry_id": 42,
            "language_id": "python"
        },
        "7": {
            "filepath": "/cloudpss_config_curl_get.py",
            "entry_id": 50,
            "language_id": "python"
        },
        "8": {
            "filepath": "/cloudpss_download_component_ports.py",
            "entry_id": 62,
            "language_id": "python"
        },
        "9": {
            "filepath": "/cloudpss_extract_component_ports.py",
            "entry_id": 66,
            "language_id": "python"
        },
        "10": {
            "filepath": "/cloudpss_jinja_code_generator.py",
            "entry_id": 72,
            "language_id": "python"
        },
        "11": {
            "filepath": "/cloudpss_model_revised.py",
            "entry_id": 90,
            "language_id": "python"
        },
        "12": {
            "filepath": "/cloudpss_model_template.py.j2",
            "entry_id": 100,
            "language_id": "jinja"
        },
        "13": {
            "filepath": "/cloudpss_port_get.sh",
            "entry_id": 112,
            "language_id": "shell"
        },
        "14": {
            "filepath": "/cloudpss_sdk_demo.py",
            "entry_id": 118,
            "language_id": "python"
        },
        "15": {
            "filepath": "/cloudpss_unit_conversions_test.py",
            "entry_id": 122,
            "language_id": "python"
        },
        "16": {
            "filepath": "/cloudpss_unit_create_convert_compatible.py",
            "entry_id": 130,
            "language_id": "python"
        },
        "17": {
            "filepath": "/cmd_startup.cmd",
            "entry_id": 134,
            "language_id": "text"
        },
        "18": {
            "filepath": "/cmd_startup.reg",
            "entry_id": 138,
            "language_id": "text"
        },
        "19": {
            "filepath": "/commit.py",
            "entry_id": 142,
            "language_id": "python"
        },
        "20": {
            "filepath": "/config.py",
            "entry_id": 166,
            "language_id": "python"
        },
        "21": {
            "filepath": "/create_shim_for_ipopt.ps1",
            "entry_id": 170,
            "language_id": "powershell"
        },
        "22": {
            "filepath": "/create_shim_for_nodejs.ps1",
            "entry_id": 174,
            "language_id": "powershell"
        },
        "23": {
            "filepath": "/create_shim_for_shot.ps1",
            "entry_id": 180,
            "language_id": "powershell"
        },
        "24": {
            "filepath": "/curl_component_get.py",
            "entry_id": 184,
            "language_id": "python"
        },
        "25": {
            "filepath": "/curl_optim_component_get.sh.j2",
            "entry_id": 190,
            "language_id": "jinja"
        },
        "26": {
            "filepath": "/curl_simu_component_get.sh.j2",
            "entry_id": 196,
            "language_id": "jinja"
        },
        "27": {
            "filepath": "/data_visualize_utils.py",
            "entry_id": 202,
            "language_id": "python"
        },
        "28": {
            "filepath": "/demo_utils.py",
            "entry_id": 212,
            "language_id": "python"
        },
        "29": {
            "filepath": "/docplex_test.py",
            "entry_id": 246,
            "language_id": "python"
        },
        "30": {
            "filepath": "/draw_sankey_diagram.py",
            "entry_id": 250,
            "language_id": "python"
        },
        "31": {
            "filepath": "/dump_pydantic_to_json.py",
            "entry_id": 260,
            "language_id": "python"
        },
        "32": {
            "filepath": "/example.py",
            "entry_id": 264,
            "language_id": "python"
        },
        "33": {
            "filepath": "/example_docstring.py",
            "entry_id": 272,
            "language_id": "python"
        },
        "34": {
            "filepath": "/export_pdf_word_pdoc.ps1",
            "entry_id": 278,
            "language_id": "powershell"
        },
        "35": {
            "filepath": "/fastapi_celery_client_test.py",
            "entry_id": 282,
            "language_id": "python"
        },
        "36": {
            "filepath": "/fastapi_celery_server.py",
            "entry_id": 288,
            "language_id": "python"
        },
        "37": {
            "filepath": "/fastapi_client_generated_test.py",
            "entry_id": 294,
            "language_id": "python"
        },
        "38": {
            "filepath": "/fastapi_client_generator.py",
            "entry_id": 300,
            "language_id": "python"
        },
        "39": {
            "filepath": "/fastapi_client_test.py",
            "entry_id": 304,
            "language_id": "python"
        },
        "40": {
            "filepath": "/fastapi_datamodel_template.py",
            "entry_id": 308,
            "language_id": "python"
        },
        "41": {
            "filepath": "/fastapi_generate_nodejs_client_typescript.cmd",
            "entry_id": 322,
            "language_id": "text"
        },
        "42": {
            "filepath": "/fastapi_server_template.py",
            "entry_id": 326,
            "language_id": "python"
        },
        "43": {
            "filepath": "/fastapi_server_with_doc.py",
            "entry_id": 344,
            "language_id": "python"
        },
        "44": {
            "filepath": "/generate_call_graph.cmd",
            "entry_id": 358,
            "language_id": "text"
        },
        "45": {
            "filepath": "/generate_document.cmd",
            "entry_id": 362,
            "language_id": "text"
        },
        "46": {
            "filepath": "/get_class_name.py",
            "entry_id": 366,
            "language_id": "python"
        },
        "47": {
            "filepath": "/get_requirements.cmd",
            "entry_id": 370,
            "language_id": "text"
        },
        "48": {
            "filepath": "/host_document.cmd",
            "entry_id": 374,
            "language_id": "text"
        },
        "49": {
            "filepath": "/install_gsudo.ps1",
            "entry_id": 378,
            "language_id": "powershell"
        },
        "50": {
            "filepath": "/jinja_test.j2",
            "entry_id": 384,
            "language_id": "jinja"
        },
        "51": {
            "filepath": "/linearization_config.py",
            "entry_id": 388,
            "language_id": "python"
        },
        "52": {
            "filepath": "/matlab_code/matlab_to_python_howto.md",
            "entry_id": 392,
            "language_id": "markdown"
        },
        "53": {
            "filepath": "/microgrid_base/Dockerfile_backup",
            "entry_id": 396,
            "language_id": "text"
        },
        "54": {
            "filepath": "/microgrid_base/Dockerfile_init",
            "entry_id": 402,
            "language_id": "text"
        },
        "55": {
            "filepath": "/microgrid_base/Dockerfile_main",
            "entry_id": 408,
            "language_id": "text"
        },
        "56": {
            "filepath": "/microgrid_base/Dockerfile_patch",
            "entry_id": 414,
            "language_id": "text"
        },
        "57": {
            "filepath": "/microgrid_base/Dockerfile_update",
            "entry_id": 418,
            "language_id": "text"
        },
        "58": {
            "filepath": "/microgrid_base/Dockerfile_update_self",
            "entry_id": 422,
            "language_id": "text"
        },
        "59": {
            "filepath": "/microgrid_base/HOW_TO_DEBUG.md",
            "entry_id": 426,
            "language_id": "markdown"
        },
        "60": {
            "filepath": "/microgrid_base/Makefile",
            "entry_id": 434,
            "language_id": "makefile"
        },
        "61": {
            "filepath": "/microgrid_base/Makefile.j2",
            "entry_id": 458,
            "language_id": "jinja"
        },
        "62": {
            "filepath": "/microgrid_base/README.md",
            "entry_id": 462,
            "language_id": "markdown"
        },
        "63": {
            "filepath": "/microgrid_base/__init__.py",
            "entry_id": 480,
            "language_id": "python"
        },
        "64": {
            "filepath": "/microgrid_base/adaptive_sampling/test.py",
            "entry_id": 484,
            "language_id": "python"
        },
        "65": {
            "filepath": "/microgrid_base/adaptive_sampling/test_adaptive_piecewise_approximation.py",
            "entry_id": 488,
            "language_id": "python"
        },
        "66": {
            "filepath": "/microgrid_base/adaptive_sampling/test_bisect.py",
            "entry_id": 494,
            "language_id": "python"
        },
        "67": {
            "filepath": "/microgrid_base/adaptive_sampling/test_decision_tree_linear_regression.py",
            "entry_id": 502,
            "language_id": "python"
        },
        "68": {
            "filepath": "/microgrid_base/adaptive_sampling/test_get_breakpoints.py",
            "entry_id": 510,
            "language_id": "python"
        },
        "69": {
            "filepath": "/microgrid_base/adaptive_sampling/test_mlinsights.py",
            "entry_id": 520,
            "language_id": "python"
        },
        "70": {
            "filepath": "/microgrid_base/adaptive_sampling/test_np_piecewise_curve_fit.py",
            "entry_id": 526,
            "language_id": "python"
        },
        "71": {
            "filepath": "/microgrid_base/adaptive_sampling/test_piecewise_regression.py",
            "entry_id": 530,
            "language_id": "python"
        },
        "72": {
            "filepath": "/microgrid_base/adaptive_sampling/test_shift.py",
            "entry_id": 534,
            "language_id": "python"
        },
        "73": {
            "filepath": "/microgrid_base/adaptive_sampling/test_torchpwl.py",
            "entry_id": 544,
            "language_id": "python"
        },
        "74": {
            "filepath": "/microgrid_base/arbitrary_topology_generation.py",
            "entry_id": 548,
            "language_id": "python"
        },
        "75": {
            "filepath": "/microgrid_base/celery_test.py",
            "entry_id": 556,
            "language_id": "python"
        },
        "76": {
            "filepath": "/microgrid_base/chatgpt_convert_latex_to_python/README.md",
            "entry_id": 562,
            "language_id": "markdown"
        },
        "77": {
            "filepath": "/microgrid_base/chatgpt_convert_latex_to_python/convert_code_to_webpage.cmd",
            "entry_id": 566,
            "language_id": "text"
        },
        "78": {
            "filepath": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md",
            "entry_id": 570,
            "language_id": "markdown"
        },
        "79": {
            "filepath": "/microgrid_base/chatgpt_convert_latex_to_python/extract_line_range_from_html.py",
            "entry_id": 622,
            "language_id": "python"
        },
        "80": {
            "filepath": "/microgrid_base/chatgpt_convert_latex_to_python/highlight_html.py",
            "entry_id": 626,
            "language_id": "python"
        },
        "81": {
            "filepath": "/microgrid_base/chatgpt_convert_latex_to_python/highlight_line.css",
            "entry_id": 632,
            "language_id": "css"
        },
        "82": {
            "filepath": "/microgrid_base/chatgpt_convert_latex_to_python/jump_to_line.md",
            "entry_id": 636,
            "language_id": "markdown"
        },
        "83": {
            "filepath": "/microgrid_base/chatgpt_convert_latex_to_python/render_markdown_to_html.cmd",
            "entry_id": 642,
            "language_id": "text"
        },
        "84": {
            "filepath": "/microgrid_base/chatgpt_convert_latex_to_python/render_markdown_with_latex.py",
            "entry_id": 646,
            "language_id": "python"
        },
        "85": {
            "filepath": "/microgrid_base/chatgpt_convert_latex_to_python/test_code.py",
            "entry_id": 650,
            "language_id": "python"
        },
        "86": {
            "filepath": "/microgrid_base/code_checker.py",
            "entry_id": 656,
            "language_id": "python"
        },
        "87": {
            "filepath": "/microgrid_base/conda_init.sh",
            "entry_id": 674,
            "language_id": "shell"
        },
        "88": {
            "filepath": "/microgrid_base/config.py",
            "entry_id": 678,
            "language_id": "python"
        },
        "89": {
            "filepath": "/microgrid_base/config_dataclasses.py",
            "entry_id": 682,
            "language_id": "python"
        },
        "90": {
            "filepath": "/microgrid_base/conflict_utils.py",
            "entry_id": 696,
            "language_id": "python"
        },
        "91": {
            "filepath": "/microgrid_base/constants.py",
            "entry_id": 708,
            "language_id": "python"
        },
        "92": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/README.md",
            "entry_id": 728,
            "language_id": "markdown"
        },
        "93": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py",
            "entry_id": 732,
            "language_id": "python"
        },
        "94": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/arithmatic_prolog.pro",
            "entry_id": 760,
            "language_id": "text"
        },
        "95": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/associativity_attr_model.py",
            "entry_id": 766,
            "language_id": "python"
        },
        "96": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/cbc_persistent.py",
            "entry_id": 772,
            "language_id": "python"
        },
        "97": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/chatgpt_typesys_bat_smiple.pro",
            "entry_id": 776,
            "language_id": "text"
        },
        "98": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/chatgpt_typesys_examaple.pro",
            "entry_id": 782,
            "language_id": "text"
        },
        "99": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py",
            "entry_id": 786,
            "language_id": "python"
        },
        "100": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model.py",
            "entry_id": 818,
            "language_id": "python"
        },
        "101": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model_import_external.py",
            "entry_id": 834,
            "language_id": "python"
        },
        "102": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/conjugate_load_combinations_reduce.py",
            "entry_id": 838,
            "language_id": "python"
        },
        "103": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/coptampl_test.py",
            "entry_id": 842,
            "language_id": "python"
        },
        "104": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/cplex_persistent.py",
            "entry_id": 846,
            "language_id": "python"
        },
        "105": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/dill_pickle_model.py",
            "entry_id": 850,
            "language_id": "python"
        },
        "106": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_conflict_refiner.py",
            "entry_id": 854,
            "language_id": "python"
        },
        "107": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_feasopt.cmd",
            "entry_id": 868,
            "language_id": "text"
        },
        "108": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_feasopt.py",
            "entry_id": 872,
            "language_id": "python"
        },
        "109": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/get_feasopt_sol.cmd",
            "entry_id": 882,
            "language_id": "text"
        },
        "110": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/get_iis_cplex.cmd",
            "entry_id": 886,
            "language_id": "text"
        },
        "111": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/highspy_solve.py",
            "entry_id": 890,
            "language_id": "python"
        },
        "112": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/init.sh",
            "entry_id": 894,
            "language_id": "shell"
        },
        "113": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/ipopt_persistent.py",
            "entry_id": 898,
            "language_id": "python"
        },
        "114": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/load_feasopt_sol.py",
            "entry_id": 902,
            "language_id": "python"
        },
        "115": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/logical_constraint_demo.py",
            "entry_id": 906,
            "language_id": "python"
        },
        "116": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/lp_to_mps.py",
            "entry_id": 912,
            "language_id": "python"
        },
        "117": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/mps_analyze.cmd",
            "entry_id": 916,
            "language_id": "text"
        },
        "118": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/or_tools_cp_sat.py",
            "entry_id": 920,
            "language_id": "python"
        },
        "119": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/or_tools_load_custom_model.py",
            "entry_id": 924,
            "language_id": "python"
        },
        "120": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/or_tools_solver.py",
            "entry_id": 928,
            "language_id": "python"
        },
        "121": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/override_method_by_copy.py",
            "entry_id": 934,
            "language_id": "python"
        },
        "122": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/parse_scip_solution.py",
            "entry_id": 938,
            "language_id": "python"
        },
        "123": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/print_all_transformation_documentation.py",
            "entry_id": 942,
            "language_id": "python"
        },
        "124": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro",
            "entry_id": 946,
            "language_id": "text"
        },
        "125": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro.j2",
            "entry_id": 954,
            "language_id": "jinja"
        },
        "126": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.py",
            "entry_id": 962,
            "language_id": "python"
        },
        "127": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py",
            "entry_id": 968,
            "language_id": "python"
        },
        "128": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/python_mip_conflict.py",
            "entry_id": 996,
            "language_id": "python"
        },
        "129": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/read_lp_and_solve_copt.cmd",
            "entry_id": 1000,
            "language_id": "text"
        },
        "130": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/resolve_task_dependency.py",
            "entry_id": 1004,
            "language_id": "python"
        },
        "131": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/rewrite_prolog_as_python.py",
            "entry_id": 1012,
            "language_id": "python"
        },
        "132": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/run_docplex.cmd",
            "entry_id": 1022,
            "language_id": "text"
        },
        "133": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/sample_prolog.pro",
            "entry_id": 1026,
            "language_id": "text"
        },
        "134": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/scip_get_relaxed_sol.cmd",
            "entry_id": 1036,
            "language_id": "text"
        },
        "135": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/scip_persistent.py",
            "entry_id": 1040,
            "language_id": "python"
        },
        "136": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_as_simplex.py",
            "entry_id": 1056,
            "language_id": "python"
        },
        "137": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_miniature_ies_system.py",
            "entry_id": 1066,
            "language_id": "python"
        },
        "138": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/task_queue.py",
            "entry_id": 1072,
            "language_id": "python"
        },
        "139": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/task_queue_test.py",
            "entry_id": 1078,
            "language_id": "python"
        },
        "140": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/task_queue_worker.cmd",
            "entry_id": 1082,
            "language_id": "text"
        },
        "141": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_arithmatic_prolog.py",
            "entry_id": 1086,
            "language_id": "python"
        },
        "142": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_iterative_query.pro",
            "entry_id": 1090,
            "language_id": "text"
        },
        "143": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_iterative_query_prolog.py",
            "entry_id": 1094,
            "language_id": "python"
        },
        "144": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_method_registry.py",
            "entry_id": 1098,
            "language_id": "python"
        },
        "145": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_prolog.pro",
            "entry_id": 1106,
            "language_id": "text"
        },
        "146": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_prolog_advanced.pro",
            "entry_id": 1114,
            "language_id": "text"
        },
        "147": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_stepwise.py",
            "entry_id": 1118,
            "language_id": "python"
        },
        "148": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/transform_tests.py",
            "entry_id": 1126,
            "language_id": "python"
        },
        "149": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/translate_model_var_name_unicode.py",
            "entry_id": 1130,
            "language_id": "python"
        },
        "150": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/visualize_decomposition_pygcgopt.py",
            "entry_id": 1144,
            "language_id": "python"
        },
        "151": {
            "filepath": "/microgrid_base/cplex_abnormal_exit_condition_debug/word_counter.py",
            "entry_id": 1152,
            "language_id": "python"
        },
        "152": {
            "filepath": "/microgrid_base/cplex_test.sh",
            "entry_id": 1156,
            "language_id": "shell"
        },
        "153": {
            "filepath": "/microgrid_base/csv_utils.py",
            "entry_id": 1160,
            "language_id": "python"
        },
        "154": {
            "filepath": "/microgrid_base/debug_utils.py",
            "entry_id": 1164,
            "language_id": "python"
        },
        "155": {
            "filepath": "/microgrid_base/det_failsafe_reload.sh",
            "entry_id": 1218,
            "language_id": "shell"
        },
        "156": {
            "filepath": "/microgrid_base/det_synth_mock_reload.sh",
            "entry_id": 1222,
            "language_id": "shell"
        },
        "157": {
            "filepath": "/microgrid_base/device_whitelist.py",
            "entry_id": 1226,
            "language_id": "python"
        },
        "158": {
            "filepath": "/microgrid_base/diesel_topo_check.py",
            "entry_id": 1230,
            "language_id": "python"
        },
        "159": {
            "filepath": "/microgrid_base/docker_launch.py",
            "entry_id": 1240,
            "language_id": "python"
        },
        "160": {
            "filepath": "/microgrid_base/download_openapi_json.sh",
            "entry_id": 1282,
            "language_id": "shell"
        },
        "161": {
            "filepath": "/microgrid_base/dsl_parser/Makefile",
            "entry_id": 1286,
            "language_id": "makefile"
        },
        "162": {
            "filepath": "/microgrid_base/dsl_parser/README.md",
            "entry_id": 1290,
            "language_id": "plain-text"
        },
        "163": {
            "filepath": "/microgrid_base/dsl_parser/ast_utils.py",
            "entry_id": 1294,
            "language_id": "python"
        },
        "164": {
            "filepath": "/microgrid_base/dsl_parser/erglang_test/mytest.er",
            "entry_id": 1298,
            "language_id": "text"
        },
        "165": {
            "filepath": "/microgrid_base/dsl_parser/erglang_test/sample_external_func.d.er",
            "entry_id": 1302,
            "language_id": "text"
        },
        "166": {
            "filepath": "/microgrid_base/dsl_parser/erglang_test/sample_external_func.py",
            "entry_id": 1306,
            "language_id": "python"
        },
        "167": {
            "filepath": "/microgrid_base/dsl_parser/functional_base.py.j2",
            "entry_id": 1310,
            "language_id": "jinja"
        },
        "168": {
            "filepath": "/microgrid_base/dsl_parser/generate_code.py",
            "entry_id": 1316,
            "language_id": "python"
        },
        "169": {
            "filepath": "/microgrid_base/dsl_parser/grammar.tx",
            "entry_id": 1320,
            "language_id": "text"
        },
        "170": {
            "filepath": "/microgrid_base/dsl_parser/lex_yacc.py",
            "entry_id": 1328,
            "language_id": "python"
        },
        "171": {
            "filepath": "/microgrid_base/dsl_parser/mylang.ies",
            "entry_id": 1334,
            "language_id": "text"
        },
        "172": {
            "filepath": "/microgrid_base/dsl_parser/pyomo_reduce_inequalities.py",
            "entry_id": 1344,
            "language_id": "python"
        },
        "173": {
            "filepath": "/microgrid_base/dsl_parser/sample.ies",
            "entry_id": 1352,
            "language_id": "text"
        },
        "174": {
            "filepath": "/microgrid_base/dsl_parser/suppress_strict_inequalities.py",
            "entry_id": 1356,
            "language_id": "python"
        },
        "175": {
            "filepath": "/microgrid_base/dsl_parser/test/test_dsl.py",
            "entry_id": 1360,
            "language_id": "python"
        },
        "176": {
            "filepath": "/microgrid_base/dsl_parser/textx_syntax.py",
            "entry_id": 1366,
            "language_id": "python"
        },
        "177": {
            "filepath": "/microgrid_base/dsl_parser/yacc_init.py",
            "entry_id": 1370,
            "language_id": "python"
        },
        "178": {
            "filepath": "/microgrid_base/dsl_parser/your_model_name.lp",
            "entry_id": 1374,
            "language_id": "text"
        },
        "179": {
            "filepath": "/microgrid_base/dsl_parser/柴油.ies",
            "entry_id": 1378,
            "language_id": "text"
        },
        "180": {
            "filepath": "/microgrid_base/enum_class_as_literal_type.py",
            "entry_id": 1382,
            "language_id": "python"
        },
        "181": {
            "filepath": "/microgrid_base/enumerate_possible_states.py",
            "entry_id": 1386,
            "language_id": "python"
        },
        "182": {
            "filepath": "/microgrid_base/export_format_units.py",
            "entry_id": 1394,
            "language_id": "python"
        },
        "183": {
            "filepath": "/microgrid_base/export_format_units.py.j2",
            "entry_id": 1400,
            "language_id": "jinja"
        },
        "184": {
            "filepath": "/microgrid_base/export_format_validate.py",
            "entry_id": 1404,
            "language_id": "python"
        },
        "185": {
            "filepath": "/microgrid_base/export_format_validate.py.j2",
            "entry_id": 1446,
            "language_id": "jinja"
        },
        "186": {
            "filepath": "/microgrid_base/expr_utils.py",
            "entry_id": 1472,
            "language_id": "python"
        },
        "187": {
            "filepath": "/microgrid_base/extra_models.py",
            "entry_id": 1488,
            "language_id": "python"
        },
        "188": {
            "filepath": "/microgrid_base/failsafe_reload.sh",
            "entry_id": 1492,
            "language_id": "shell"
        },
        "189": {
            "filepath": "/microgrid_base/failsafe_synth_mock_reload.sh",
            "entry_id": 1496,
            "language_id": "shell"
        },
        "190": {
            "filepath": "/microgrid_base/failsafe_utils.py",
            "entry_id": 1500,
            "language_id": "python"
        },
        "191": {
            "filepath": "/microgrid_base/fastapi_celery_functions.py",
            "entry_id": 1532,
            "language_id": "python"
        },
        "192": {
            "filepath": "/microgrid_base/fastapi_celery_server.py",
            "entry_id": 1540,
            "language_id": "python"
        },
        "193": {
            "filepath": "/microgrid_base/fastapi_datamodel_template.py",
            "entry_id": 1550,
            "language_id": "python"
        },
        "194": {
            "filepath": "/microgrid_base/fastapi_server_template.py",
            "entry_id": 1568,
            "language_id": "python"
        },
        "195": {
            "filepath": "/microgrid_base/fastapi_terminate_service.sh",
            "entry_id": 1598,
            "language_id": "shell"
        },
        "196": {
            "filepath": "/microgrid_base/fastapi_tmuxp.sh",
            "entry_id": 1602,
            "language_id": "shell"
        },
        "197": {
            "filepath": "/microgrid_base/fastapi_tmuxp.yml",
            "entry_id": 1606,
            "language_id": "yaml"
        },
        "198": {
            "filepath": "/microgrid_base/financial/financial_calc.py",
            "entry_id": 1610,
            "language_id": "python"
        },
        "199": {
            "filepath": "/microgrid_base/financial/financial_equation_solve.py",
            "entry_id": 1614,
            "language_id": "python"
        },
        "200": {
            "filepath": "/microgrid_base/generate_basic_params.sh",
            "entry_id": 1622,
            "language_id": "shell"
        },
        "201": {
            "filepath": "/microgrid_base/generate_makefile.py",
            "entry_id": 1626,
            "language_id": "python"
        },
        "202": {
            "filepath": "/microgrid_base/generate_microgrid_device_names.py",
            "entry_id": 1634,
            "language_id": "python"
        },
        "203": {
            "filepath": "/microgrid_base/get_poly_degree_decompose_expression.py",
            "entry_id": 1638,
            "language_id": "python"
        },
        "204": {
            "filepath": "/microgrid_base/heatpump_code_reference/Machine_para_fit2.py",
            "entry_id": 1642,
            "language_id": "python"
        },
        "205": {
            "filepath": "/microgrid_base/heatpump_code_reference/SoilSource_new.py",
            "entry_id": 1658,
            "language_id": "python"
        },
        "206": {
            "filepath": "/microgrid_base/heatpump_code_reference/chained_submodel.py",
            "entry_id": 1676,
            "language_id": "python"
        },
        "207": {
            "filepath": "/microgrid_base/heatpump_code_reference/example.py",
            "entry_id": 1682,
            "language_id": "python"
        },
        "208": {
            "filepath": "/microgrid_base/heatpump_code_reference/plot_arr.py",
            "entry_id": 1690,
            "language_id": "python"
        },
        "209": {
            "filepath": "/microgrid_base/heatpump_code_reference/print_profile.py",
            "entry_id": 1696,
            "language_id": "python"
        },
        "210": {
            "filepath": "/microgrid_base/heatpump_code_reference/profile_code.py",
            "entry_id": 1700,
            "language_id": "python"
        },
        "211": {
            "filepath": "/microgrid_base/heatpump_code_reference/pyomo_piecewise_set.py",
            "entry_id": 1706,
            "language_id": "python"
        },
        "212": {
            "filepath": "/microgrid_base/heatpump_code_reference/pyomo_piecewise_set_concrete.py",
            "entry_id": 1712,
            "language_id": "python"
        },
        "213": {
            "filepath": "/microgrid_base/heatpump_code_reference/result_processlib.py",
            "entry_id": 1716,
            "language_id": "python"
        },
        "214": {
            "filepath": "/microgrid_base/heatpump_code_reference/run_profile.cmd",
            "entry_id": 1720,
            "language_id": "text"
        },
        "215": {
            "filepath": "/microgrid_base/heatpump_code_reference/self_contained_class_which_trace_the_caller.py",
            "entry_id": 1724,
            "language_id": "python"
        },
        "216": {
            "filepath": "/microgrid_base/ies_optim.py",
            "entry_id": 1732,
            "language_id": "python"
        },
        "217": {
            "filepath": "/microgrid_base/ies_optim_legacy.py.j2",
            "entry_id": 1736,
            "language_id": "jinja"
        },
        "218": {
            "filepath": "/microgrid_base/init.sh",
            "entry_id": 1986,
            "language_id": "shell"
        },
        "219": {
            "filepath": "/microgrid_base/init_apt_environ.sh",
            "entry_id": 1990,
            "language_id": "shell"
        },
        "220": {
            "filepath": "/microgrid_base/init_docker_launch.sh",
            "entry_id": 1994,
            "language_id": "shell"
        },
        "221": {
            "filepath": "/microgrid_base/init_solver.sh",
            "entry_id": 1998,
            "language_id": "shell"
        },
        "222": {
            "filepath": "/microgrid_base/init_update_conda.sh",
            "entry_id": 2002,
            "language_id": "shell"
        },
        "223": {
            "filepath": "/microgrid_base/init_update_conda_cplex.sh",
            "entry_id": 2006,
            "language_id": "shell"
        },
        "224": {
            "filepath": "/microgrid_base/init_update_conda_docplex.sh",
            "entry_id": 2010,
            "language_id": "shell"
        },
        "225": {
            "filepath": "/microgrid_base/install_cplex.sh",
            "entry_id": 2014,
            "language_id": "shell"
        },
        "226": {
            "filepath": "/microgrid_base/install_docker.sh",
            "entry_id": 2018,
            "language_id": "shell"
        },
        "227": {
            "filepath": "/microgrid_base/jinja_template_model_generator.py",
            "entry_id": 2022,
            "language_id": "python"
        },
        "228": {
            "filepath": "/microgrid_base/jinja_utils.py",
            "entry_id": 2032,
            "language_id": "python"
        },
        "229": {
            "filepath": "/microgrid_base/json_utils.py",
            "entry_id": 2050,
            "language_id": "python"
        },
        "230": {
            "filepath": "/microgrid_base/lib_parse_params.py",
            "entry_id": 2062,
            "language_id": "python"
        },
        "231": {
            "filepath": "/microgrid_base/log_infeasible.py",
            "entry_id": 2082,
            "language_id": "python"
        },
        "232": {
            "filepath": "/microgrid_base/log_infeasible.sh",
            "entry_id": 2088,
            "language_id": "shell"
        },
        "233": {
            "filepath": "/microgrid_base/macro_test.j2",
            "entry_id": 2092,
            "language_id": "jinja"
        },
        "234": {
            "filepath": "/microgrid_base/macro_test.py",
            "entry_id": 2096,
            "language_id": "python"
        },
        "235": {
            "filepath": "/microgrid_base/makefile_ninja_pytest_incremental_test/Makefile.j2",
            "entry_id": 2100,
            "language_id": "makefile"
        },
        "236": {
            "filepath": "/microgrid_base/makefile_ninja_pytest_incremental_test/construct_ninja_file.py",
            "entry_id": 2104,
            "language_id": "python"
        },
        "237": {
            "filepath": "/microgrid_base/makefile_ninja_pytest_incremental_test/dodo.py",
            "entry_id": 2108,
            "language_id": "python"
        },
        "238": {
            "filepath": "/microgrid_base/makefile_ninja_pytest_incremental_test/generic.py",
            "entry_id": 2112,
            "language_id": "python"
        },
        "239": {
            "filepath": "/microgrid_base/makefile_ninja_pytest_incremental_test/lfnf.py",
            "entry_id": 2116,
            "language_id": "python"
        },
        "240": {
            "filepath": "/microgrid_base/makefile_ninja_pytest_incremental_test/mytest.py",
            "entry_id": 2120,
            "language_id": "python"
        },
        "241": {
            "filepath": "/microgrid_base/makefile_ninja_pytest_incremental_test/platform_detect_makefile/Makefile",
            "entry_id": 2124,
            "language_id": "makefile"
        },
        "242": {
            "filepath": "/microgrid_base/makefile_ninja_pytest_incremental_test/test_buffer.py",
            "entry_id": 2128,
            "language_id": "python"
        },
        "243": {
            "filepath": "/microgrid_base/makefile_ninja_pytest_incremental_test/type_check.py",
            "entry_id": 2132,
            "language_id": "python"
        },
        "244": {
            "filepath": "/microgrid_base/makefile_ninja_pytest_incremental_test/typecheck.py",
            "entry_id": 2140,
            "language_id": "python"
        },
        "245": {
            "filepath": "/microgrid_base/metaclass_field_verification.py",
            "entry_id": 2144,
            "language_id": "python"
        },
        "246": {
            "filepath": "/microgrid_base/microgrid_topo_check.py",
            "entry_id": 2158,
            "language_id": "python"
        },
        "247": {
            "filepath": "/microgrid_base/mock_data_test.py",
            "entry_id": 2182,
            "language_id": "python"
        },
        "248": {
            "filepath": "/microgrid_base/mock_reload.sh",
            "entry_id": 2196,
            "language_id": "shell"
        },
        "249": {
            "filepath": "/microgrid_base/mock_utils.py",
            "entry_id": 2200,
            "language_id": "python"
        },
        "250": {
            "filepath": "/microgrid_base/modify_bashrc_for_mamba.py",
            "entry_id": 2218,
            "language_id": "python"
        },
        "251": {
            "filepath": "/microgrid_base/natural_gas_generator_template.py",
            "entry_id": 2222,
            "language_id": "python"
        },
        "252": {
            "filepath": "/microgrid_base/packup_type_system.sh",
            "entry_id": 2226,
            "language_id": "shell"
        },
        "253": {
            "filepath": "/microgrid_base/param_base.py",
            "entry_id": 2230,
            "language_id": "python"
        },
        "254": {
            "filepath": "/microgrid_base/parse_export_format.py",
            "entry_id": 2238,
            "language_id": "python"
        },
        "255": {
            "filepath": "/microgrid_base/parse_frontend_sim_param_translation.py",
            "entry_id": 2262,
            "language_id": "python"
        },
        "256": {
            "filepath": "/microgrid_base/parse_optim_constraints.py",
            "entry_id": 2266,
            "language_id": "python"
        },
        "257": {
            "filepath": "/microgrid_base/parse_params.py",
            "entry_id": 2272,
            "language_id": "python"
        },
        "258": {
            "filepath": "/microgrid_base/parse_units_and_names.py",
            "entry_id": 2280,
            "language_id": "python"
        },
        "259": {
            "filepath": "/microgrid_base/passwords_template.py",
            "entry_id": 2322,
            "language_id": "python"
        },
        "260": {
            "filepath": "/microgrid_base/plot_utils.py",
            "entry_id": 2326,
            "language_id": "python"
        },
        "261": {
            "filepath": "/microgrid_base/prolog_gen.pro.j2",
            "entry_id": 2334,
            "language_id": "jinja"
        },
        "262": {
            "filepath": "/microgrid_base/pyomo_environ.py",
            "entry_id": 2342,
            "language_id": "python"
        },
        "263": {
            "filepath": "/microgrid_base/pyomo_patch.py",
            "entry_id": 2346,
            "language_id": "python"
        },
        "264": {
            "filepath": "/microgrid_base/pyright_utils.py",
            "entry_id": 2358,
            "language_id": "python"
        },
        "265": {
            "filepath": "/microgrid_base/reduce_demo_data_size.py",
            "entry_id": 2366,
            "language_id": "python"
        },
        "266": {
            "filepath": "/microgrid_base/reload.sh",
            "entry_id": 2370,
            "language_id": "shell"
        },
        "267": {
            "filepath": "/microgrid_base/render_and_packup_report.py",
            "entry_id": 2374,
            "language_id": "python"
        },
        "268": {
            "filepath": "/microgrid_base/render_type_utils.py",
            "entry_id": 2380,
            "language_id": "python"
        },
        "269": {
            "filepath": "/microgrid_base/report_template.md.j2",
            "entry_id": 2416,
            "language_id": "jinja"
        },
        "270": {
            "filepath": "/microgrid_base/setup_docker.sh",
            "entry_id": 2420,
            "language_id": "shell"
        },
        "271": {
            "filepath": "/microgrid_base/shared_datamodels.py",
            "entry_id": 2424,
            "language_id": "python"
        },
        "272": {
            "filepath": "/microgrid_base/solve_model.py",
            "entry_id": 2428,
            "language_id": "python"
        },
        "273": {
            "filepath": "/microgrid_base/synth_mock_reload.sh",
            "entry_id": 2486,
            "language_id": "shell"
        },
        "274": {
            "filepath": "/microgrid_base/test/Makefile",
            "entry_id": 2490,
            "language_id": "makefile"
        },
        "275": {
            "filepath": "/microgrid_base/test/circular_import_a.py",
            "entry_id": 2496,
            "language_id": "python"
        },
        "276": {
            "filepath": "/microgrid_base/test/circular_import_b.py",
            "entry_id": 2500,
            "language_id": "python"
        },
        "277": {
            "filepath": "/microgrid_base/test/common_fixtures.py.j2",
            "entry_id": 2504,
            "language_id": "jinja"
        },
        "278": {
            "filepath": "/microgrid_base/test/conic_problem.py",
            "entry_id": 2512,
            "language_id": "python"
        },
        "279": {
            "filepath": "/microgrid_base/test/dev_info_tmp_gen.py",
            "entry_id": 2516,
            "language_id": "python"
        },
        "280": {
            "filepath": "/microgrid_base/test/generate_test_model.py",
            "entry_id": 2524,
            "language_id": "python"
        },
        "281": {
            "filepath": "/microgrid_base/test/mapping_relationship_in_enum_classes.py",
            "entry_id": 2528,
            "language_id": "python"
        },
        "282": {
            "filepath": "/microgrid_base/test/read_yaml.py",
            "entry_id": 2532,
            "language_id": "python"
        },
        "283": {
            "filepath": "/microgrid_base/test/run_test.sh",
            "entry_id": 2536,
            "language_id": "shell"
        },
        "284": {
            "filepath": "/microgrid_base/test/runtime_override_stepwise.py",
            "entry_id": 2540,
            "language_id": "python"
        },
        "285": {
            "filepath": "/microgrid_base/test/test_common_fixtures.py",
            "entry_id": 2570,
            "language_id": "python"
        },
        "286": {
            "filepath": "/microgrid_base/test/test_dict_fallback.py",
            "entry_id": 2574,
            "language_id": "python"
        },
        "287": {
            "filepath": "/microgrid_base/test/test_export.py.j2",
            "entry_id": 2578,
            "language_id": "jinja"
        },
        "288": {
            "filepath": "/microgrid_base/test/test_failsafe.py",
            "entry_id": 2582,
            "language_id": "python"
        },
        "289": {
            "filepath": "/microgrid_base/test/test_getter_setter_dynamic_property.py",
            "entry_id": 2590,
            "language_id": "python"
        },
        "290": {
            "filepath": "/microgrid_base/test/test_model.py.j2",
            "entry_id": 2594,
            "language_id": "jinja"
        },
        "291": {
            "filepath": "/microgrid_base/test/test_model_info.py",
            "entry_id": 2640,
            "language_id": "python"
        },
        "292": {
            "filepath": "/microgrid_base/test/test_pwire_select.py",
            "entry_id": 2644,
            "language_id": "python"
        },
        "293": {
            "filepath": "/microgrid_base/test/test_setting_calculated_value.py",
            "entry_id": 2648,
            "language_id": "python"
        },
        "294": {
            "filepath": "/microgrid_base/test/test_use_fixture.py",
            "entry_id": 2652,
            "language_id": "python"
        },
        "295": {
            "filepath": "/microgrid_base/test_class.py",
            "entry_id": 2656,
            "language_id": "python"
        },
        "296": {
            "filepath": "/microgrid_base/test_json_input_format.py",
            "entry_id": 2662,
            "language_id": "python"
        },
        "297": {
            "filepath": "/microgrid_base/test_neverundefined/template.j2",
            "entry_id": 2668,
            "language_id": "jinja"
        },
        "298": {
            "filepath": "/microgrid_base/test_neverundefined/test.py",
            "entry_id": 2672,
            "language_id": "python"
        },
        "299": {
            "filepath": "/microgrid_base/test_neverundefined/test_strict.py",
            "entry_id": 2676,
            "language_id": "python"
        },
        "300": {
            "filepath": "/microgrid_base/test_replace_logger.py.j2",
            "entry_id": 2680,
            "language_id": "jinja"
        },
        "301": {
            "filepath": "/microgrid_base/test_replace_logger_no_template.py",
            "entry_id": 2684,
            "language_id": "python"
        },
        "302": {
            "filepath": "/microgrid_base/test_topo_check.py",
            "entry_id": 2688,
            "language_id": "python"
        },
        "303": {
            "filepath": "/microgrid_base/test_wrapper.py",
            "entry_id": 2708,
            "language_id": "python"
        },
        "304": {
            "filepath": "/microgrid_base/test_wrapper_celery.py",
            "entry_id": 2714,
            "language_id": "python"
        },
        "305": {
            "filepath": "/microgrid_base/topo_check.py",
            "entry_id": 2718,
            "language_id": "python"
        },
        "306": {
            "filepath": "/microgrid_base/topo_check_v1.py.j2",
            "entry_id": 2722,
            "language_id": "jinja"
        },
        "307": {
            "filepath": "/microgrid_base/topo_check_v2.py.j2",
            "entry_id": 2750,
            "language_id": "jinja"
        },
        "308": {
            "filepath": "/microgrid_base/type_def.py",
            "entry_id": 2780,
            "language_id": "python"
        },
        "309": {
            "filepath": "/microgrid_base/type_system.md",
            "entry_id": 2786,
            "language_id": "markdown"
        },
        "310": {
            "filepath": "/microgrid_base/type_system.py",
            "entry_id": 2792,
            "language_id": "python"
        },
        "311": {
            "filepath": "/microgrid_base/type_system_v2.py",
            "entry_id": 2824,
            "language_id": "python"
        },
        "312": {
            "filepath": "/microgrid_base/type_utils.py.j2",
            "entry_id": 2862,
            "language_id": "jinja"
        },
        "313": {
            "filepath": "/microgrid_base/typical_day_calc.py",
            "entry_id": 2912,
            "language_id": "python"
        },
        "314": {
            "filepath": "/microgrid_base/unit_utils.py",
            "entry_id": 2918,
            "language_id": "python"
        },
        "315": {
            "filepath": "/microgrid_base/violation_utils.py",
            "entry_id": 2932,
            "language_id": "python"
        },
        "316": {
            "filepath": "/mini_data_log_utils.py",
            "entry_id": 2966,
            "language_id": "python"
        },
        "317": {
            "filepath": "/mini_heat_system.py",
            "entry_id": 2976,
            "language_id": "python"
        },
        "318": {
            "filepath": "/mini_ies_test.py",
            "entry_id": 2992,
            "language_id": "python"
        },
        "319": {
            "filepath": "/mini_ies_topology.py",
            "entry_id": 3006,
            "language_id": "python"
        },
        "320": {
            "filepath": "/mini_refrigeration_system.py",
            "entry_id": 3010,
            "language_id": "python"
        },
        "321": {
            "filepath": "/network_visualize_packup.cmd",
            "entry_id": 3020,
            "language_id": "text"
        },
        "322": {
            "filepath": "/neural_network_demo.py",
            "entry_id": 3024,
            "language_id": "python"
        },
        "323": {
            "filepath": "/neural_network_linearize_nonlinear_function_test.py",
            "entry_id": 3028,
            "language_id": "python"
        },
        "324": {
            "filepath": "/neural_network_loading_convert_to_numpy_matrix.py",
            "entry_id": 3034,
            "language_id": "python"
        },
        "325": {
            "filepath": "/output_pdf/convert_utf8.py",
            "entry_id": 3040,
            "language_id": "python"
        },
        "326": {
            "filepath": "/output_pdf/docx_concat/concat_index_with_article.py",
            "entry_id": 3044,
            "language_id": "python"
        },
        "327": {
            "filepath": "/output_pdf/docx_reference_convert/test_convert.sh",
            "entry_id": 3048,
            "language_id": "shell"
        },
        "328": {
            "filepath": "/output_pdf/export_docx.ps1",
            "entry_id": 3052,
            "language_id": "powershell"
        },
        "329": {
            "filepath": "/output_pdf/export_pdf.ps1",
            "entry_id": 3056,
            "language_id": "powershell"
        },
        "330": {
            "filepath": "/output_pdf/generate_html.ps1",
            "entry_id": 3060,
            "language_id": "powershell"
        },
        "331": {
            "filepath": "/output_pdf/generate_html.sh",
            "entry_id": 3064,
            "language_id": "shell"
        },
        "332": {
            "filepath": "/output_pdf/html/process_output_html.py",
            "entry_id": 3068,
            "language_id": "python"
        },
        "333": {
            "filepath": "/output_pdf/html_to_pdf.sh",
            "entry_id": 3074,
            "language_id": "shell"
        },
        "334": {
            "filepath": "/output_pdf/original_html_to_docx.sh",
            "entry_id": 3078,
            "language_id": "shell"
        },
        "335": {
            "filepath": "/output_pdf/pdf_to_docx.sh",
            "entry_id": 3082,
            "language_id": "shell"
        },
        "336": {
            "filepath": "/packup.sh",
            "entry_id": 3086,
            "language_id": "shell"
        },
        "337": {
            "filepath": "/parse_device_parameters_excel.py",
            "entry_id": 3090,
            "language_id": "python"
        },
        "338": {
            "filepath": "/parse_device_parameters_excel_v2.py",
            "entry_id": 3098,
            "language_id": "python"
        },
        "339": {
            "filepath": "/pendulum.jl",
            "entry_id": 3106,
            "language_id": "text"
        },
        "340": {
            "filepath": "/pendulum.py",
            "entry_id": 3112,
            "language_id": "python"
        },
        "341": {
            "filepath": "/pendulum_finite_differentiate.py",
            "entry_id": 3116,
            "language_id": "python"
        },
        "342": {
            "filepath": "/piecewise_approximation_test.py",
            "entry_id": 3122,
            "language_id": "python"
        },
        "343": {
            "filepath": "/pint_convert_units.py",
            "entry_id": 3128,
            "language_id": "python"
        },
        "344": {
            "filepath": "/pint_merge_units.py",
            "entry_id": 3134,
            "language_id": "python"
        },
        "345": {
            "filepath": "/plot_arr.py",
            "entry_id": 3140,
            "language_id": "python"
        },
        "346": {
            "filepath": "/pydantic_validator_test.py",
            "entry_id": 3146,
            "language_id": "python"
        },
        "347": {
            "filepath": "/pyomo_define_array_list.py",
            "entry_id": 3150,
            "language_id": "python"
        },
        "348": {
            "filepath": "/pyomo_shot_test.py",
            "entry_id": 3156,
            "language_id": "python"
        },
        "349": {
            "filepath": "/pyomo_test_solve_nonlinear_cplex.py",
            "entry_id": 3160,
            "language_id": "python"
        },
        "350": {
            "filepath": "/pyomo_triangulate_multivariate_linearization.py",
            "entry_id": 3166,
            "language_id": "python"
        },
        "351": {
            "filepath": "/questions.md",
            "entry_id": 3170,
            "language_id": "markdown"
        },
        "352": {
            "filepath": "/questions_packup.cmd",
            "entry_id": 3182,
            "language_id": "text"
        },
        "353": {
            "filepath": "/regex_extract_bracket.py",
            "entry_id": 3186,
            "language_id": "python"
        },
        "354": {
            "filepath": "/reset_codepage.reg",
            "entry_id": 3190,
            "language_id": "text"
        },
        "355": {
            "filepath": "/result_processlib.py",
            "entry_id": 3194,
            "language_id": "python"
        },
        "356": {
            "filepath": "/runhide.vbs",
            "entry_id": 3198,
            "language_id": "text"
        },
        "357": {
            "filepath": "/schedule_update.cmd",
            "entry_id": 3204,
            "language_id": "text"
        },
        "358": {
            "filepath": "/scheduled_commit.cmd",
            "entry_id": 3208,
            "language_id": "text"
        },
        "359": {
            "filepath": "/script.sh",
            "entry_id": 3212,
            "language_id": "shell"
        },
        "360": {
            "filepath": "/serve_pydoc.ps1",
            "entry_id": 3218,
            "language_id": "powershell"
        },
        "361": {
            "filepath": "/setup_gptcommit.cmd",
            "entry_id": 3222,
            "language_id": "text"
        },
        "362": {
            "filepath": "/setup_gptcommit.sh",
            "entry_id": 3226,
            "language_id": "shell"
        },
        "363": {
            "filepath": "/subversion_sync.cmd",
            "entry_id": 3230,
            "language_id": "text"
        },
        "364": {
            "filepath": "/symlinks/create_symlink.cmd",
            "entry_id": 3234,
            "language_id": "text"
        },
        "365": {
            "filepath": "/system_topology_utils.py",
            "entry_id": 3238,
            "language_id": "python"
        },
        "366": {
            "filepath": "/taylor_series_expansion_approximation_nonlinear_function_piecewise.py",
            "entry_id": 3246,
            "language_id": "python"
        },
        "367": {
            "filepath": "/test_add_lower_and_upper_bounds.py",
            "entry_id": 3254,
            "language_id": "python"
        },
        "368": {
            "filepath": "/test_class_create.py",
            "entry_id": 3258,
            "language_id": "python"
        },
        "369": {
            "filepath": "/test_client.py",
            "entry_id": 3262,
            "language_id": "python"
        },
        "370": {
            "filepath": "/test_cpexample.cmd",
            "entry_id": 3266,
            "language_id": "text"
        },
        "371": {
            "filepath": "/test_cpexample.ps1",
            "entry_id": 3272,
            "language_id": "powershell"
        },
        "372": {
            "filepath": "/test_decorate_class_method.py",
            "entry_id": 3276,
            "language_id": "python"
        },
        "373": {
            "filepath": "/test_linearization_max_zeros.py",
            "entry_id": 3280,
            "language_id": "python"
        },
        "374": {
            "filepath": "/test_loading_light_intensity_data.py",
            "entry_id": 3288,
            "language_id": "python"
        },
        "375": {
            "filepath": "/test_plot.jl",
            "entry_id": 3292,
            "language_id": "text"
        },
        "376": {
            "filepath": "/test_server.py",
            "entry_id": 3296,
            "language_id": "python"
        },
        "377": {
            "filepath": "/test_server_client_configs.py",
            "entry_id": 3306,
            "language_id": "python"
        },
        "378": {
            "filepath": "/test_timedelta.py",
            "entry_id": 3310,
            "language_id": "python"
        },
        "379": {
            "filepath": "/test_undefined.py",
            "entry_id": 3314,
            "language_id": "python"
        },
        "380": {
            "filepath": "/topology_conversion.py",
            "entry_id": 3318,
            "language_id": "python"
        },
        "381": {
            "filepath": "/validity_check.py",
            "entry_id": 3322,
            "language_id": "python"
        }
    },
    "project_name": "jubilant-adventure",
    "split_count": 34
}