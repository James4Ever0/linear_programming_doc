{"_default": {"1": {"path": "/README.md", "hash": "ac06ea2406b200d1116629d5f2a4271a", "title": "Linear Approximation Tool for Energy Systems"}, "2": {"path": "/README.md:1-43", "hash": "5f79b14b73731efa572aaff595b2453b", "title": "Linearizing Nonlinear Functions: IES Modeling Framework"}, "3": {"path": "/README.md:44-63", "hash": "b0bfaf73fc8cd968ab28324231406505", "title": "Execute Test Cases for Energy System, Warm Water Heating, and Cold Water Cooling"}, "4": {"path": "/README.md:64-64", "hash": "a7ef7df6d7b5f28df04be38ff3614650", "title": "Copy and Overwrite File Snippet"}, "5": {"path": "/auto_question_device_params.py", "hash": "e42f161f0a257fa751ace0755b98fc73", "title": "Auto-Question Device Parameters Logger"}, "6": {"path": "/auto_question_device_params.py:1-51", "hash": "3112d660861440c7d3924e989e102cd7", "title": "Auto-Question Device Params Setup"}, "7": {"path": "/auto_question_device_params.py:53-74", "hash": "a54855365d45044672d53e824605dfaa", "title": "Auto Question: Device Params"}, "8": {"path": "/celery_client_test.py", "hash": "66d4192304bb9f6b9b2e58392e2e7c39", "title": "Celery Client Status Checker"}, "9": {"path": "/celery_client_test.py:1-47", "hash": "b2ac4e9aaab66e884a129832cf7f0725", "title": "Revoking Celery Tasks Periodically"}, "10": {"path": "/celery_client_test.py:48-53", "hash": "48ac6d8b15f7cf124cc0b965f2969169", "title": "Revoke or Success: Data Retrieval"}, "11": {"path": "/celery_fastapi_test.py", "hash": "e96462c7ca454fa7c9aa0345e214bad6", "title": "Celery FastAPI Task Manager"}, "12": {"path": "/celery_fastapi_test.py:1-44", "hash": "ddabd13cf12086cc023f7261ee20bb77", "title": "FastAPI & Celery Task Management"}, "13": {"path": "/celery_fastapi_test.py:45-72", "hash": "dd3d55aade24b1f0ec55326b450a8a65", "title": "Celery Task Result Retriever"}, "14": {"path": "/celery_fastapi_test.py:75-100", "hash": "37b99541d79a18a603a213fc6166f659", "title": "Creating Pending Celery Task with ID"}, "15": {"path": "/celery_fastapi_test.py:101-139", "hash": "e4eadbeb1388138d5c6c8e93374e7cdb", "title": "FastAPI-Celery Task Manager"}, "16": {"path": "/celery_test.py", "hash": "379c9a4339525065c6d8cf8509f6de9d", "title": "Setting Up Celery App with Concurrency Management"}, "17": {"path": "/celery_test.py:1-52", "hash": "2f5e9c33b779159f5c3d8be48055d6b8", "title": "Celery Concurrency Management with Redis Lock"}, "18": {"path": "/celery_test.py:53-87", "hash": "31593fa95379f7dd880369077d63b3e4", "title": "Ineffective Lock Mechanism in Celery Task"}, "19": {"path": "/celery_test.py:90-116", "hash": "a9386182110ec82603ee8c8b048a72b0", "title": "Optimize Celery Task Configuration"}, "20": {"path": "/check_non_convex_quadratic_constraint_in_model.py", "hash": "8745ba58a376211dba8101bf23f34b91", "title": "Checking Non-Convex Quadratic Constraint in Model"}, "21": {"path": "/cloudpss_config2.py", "hash": "8ad16c6bb8b1e51f70e631a5978a6f4c", "title": "JSON Prefix Table Generator"}, "22": {"path": "/cloudpss_config2.py:1-30", "hash": "2a560efcbb6f31aecc3dd58e3ee99887", "title": "Unique Prefix Extractor"}, "23": {"path": "/cloudpss_config2.py:31-54", "hash": "859070541d8d37de70a5f2acb8cbc02a", "title": "Markdown Table Generator for Device Parameters"}, "24": {"path": "/cloudpss_config2.py:55-55", "hash": "847d34ae3db3d4db5f59e281d5000552", "title": "JSON Data Saved to 'f3'"}, "25": {"path": "/cloudpss_config_curl_get.py", "hash": "dd16eb484c6a61f021bf88ce64066370", "title": "Multilingual Electrical Device Optimization with Python JSON"}, "26": {"path": "/cloudpss_config_curl_get.py:1-68", "hash": "0efdf3caa83ed0ac562a7100dc3e2524", "title": "Cloud-Based PSS Configuration: Python Script"}, "27": {"path": "/cloudpss_config_curl_get.py:71-112", "hash": "3ed76990c56ebbc1fe098775fcf1cee2", "title": "JSON to Markdown Table Converter"}, "28": {"path": "/cloudpss_config_curl_get.py:113-142", "hash": "a08b5419d71b44be7f61425affba4937", "title": "Pin Definition and Parameter Filling Code"}, "29": {"path": "/cloudpss_config_curl_get.py:143-166", "hash": "4f530bc9710422aa28a025f82c4b979e", "title": "Input Parameters to DataFrame Conversion"}, "30": {"path": "/cloudpss_config_curl_get.py:167-188", "hash": "0dafc8a8f30bb14a45d180fef8d1e1f1", "title": "Translating Parameter Names Table Formatter"}, "31": {"path": "/cloudpss_download_component_ports.py", "hash": "7f57af54e788dbf37ac08897bcf17768", "title": "Lambda Functions for Component Port Downloads"}, "32": {"path": "/cloudpss_extract_component_ports.py", "hash": "88122b40e2b3bbad3abe0dae94df0de8", "title": "CloudPS Extract Component Ports"}, "33": {"path": "/cloudpss_extract_component_ports.py:1-26", "hash": "0310f3dce38dcd244c0b172bc599f4fa", "title": "Extracting Component Ports with Python"}, "34": {"path": "/cloudpss_extract_component_ports.py:27-44", "hash": "ea18ab51d9f6d7aec8f9c783e995358c", "title": "Extract Component Ports Code Analysis"}, "35": {"path": "/cloudpss_jinja_code_generator.py", "hash": "6db8e006c25886d322bd59a79e61514e", "title": "Jinja Template Generator from Code"}, "36": {"path": "/cloudpss_jinja_code_generator.py:1-49", "hash": "14e240ca842231e1741be9e6e1b43abe", "title": "Cloud PSS Simulation Code Generator"}, "37": {"path": "/cloudpss_jinja_code_generator.py:50-91", "hash": "f372056d925ceff5a3e9926d70bb4293", "title": "Units Conversion and Registry"}, "38": {"path": "/cloudpss_jinja_code_generator.py:92-124", "hash": "25847283a3964b5bc7971aa141ee7eb5", "title": "Unit Conversion and Jinja Template Generation"}, "39": {"path": "/cloudpss_jinja_code_generator.py:125-145", "hash": "ac63e467f75071d514ab89ba3c7de826", "title": "Checking String Pattern and Formatting Unit"}, "40": {"path": "/cloudpss_jinja_code_generator.py:146-164", "hash": "c121ef8593d651ea22150a8ccda7b232", "title": "Unit Conversion and Extraction"}, "41": {"path": "/cloudpss_jinja_code_generator.py:165-200", "hash": "d80a145729bd1a7ce7d02dce81163f9d", "title": "Jinja2 Template Generator for Python"}, "42": {"path": "/cloudpss_jinja_code_generator.py:202-224", "hash": "2024421d42725a730c59d84e01631d43", "title": "Jinja Code Generator: Rendering and Outputting Templates"}, "43": {"path": "/cloudpss_jinja_code_generator.py:225-229", "hash": "fada252214c11f71710851bcd0e7ea2b", "title": "Main Guard in Python Script"}, "44": {"path": "/cloudpss_model_revised.py", "hash": "606f604fce3322eef18ba6b3a62eb72a", "title": "Pyomo-Based PV Device Modeling"}, "45": {"path": "/cloudpss_model_revised.py:1-54", "hash": "f443eea06098ecb22aeddcfcdfe64ba1", "title": "Device Performance Simulation Model"}, "46": {"path": "/cloudpss_model_revised.py:55-88", "hash": "96c3f4106d8ac3c11db777d6dbcd8203", "title": "CloudPSS Model Revision: Initialization and Power Lists"}, "47": {"path": "/cloudpss_model_revised.py:89-130", "hash": "767d39d74610bcf08c027d69d9b11659", "title": "PV Device Class Definition"}, "48": {"path": "/cloudpss_model_revised.py:131-157", "hash": "d559c40baabe58f42b0482face28209a", "title": "Efficient Solar Power Model Initialization"}, "49": {"path": "/cloudpss_model_template.py.j2", "hash": "25f6241280de5e3d16151268d681ebcf", "title": "Power System Simulation Model Template"}, "50": {"path": "/cloudpss_model_template.py.j2:1-43", "hash": "340465879fc260a82eed772bac8d1baa", "title": "Pydantic Models for Environment and Simulation"}, "51": {"path": "/cloudpss_model_template.py.j2:45-85", "hash": "72b998d7dd978e9720cb60152d55779e", "title": "Device Class for Simulation Configuration"}, "52": {"path": "/cloudpss_model_template.py.j2:86-116", "hash": "32d22f2a7bc6c069e3e69d9c47af2aa9", "title": "Model Power Variables Initialization"}, "53": {"path": "/cloudpss_model_template.py.j2:117-154", "hash": "b575f121d9976a250f3251b39a659cd2", "title": "Customizable ConcreteModel Class Template"}, "54": {"path": "/cloudpss_model_template.py.j2:156-159", "hash": "78b3e1f3b6884bbf87d00a5eb0a065a0", "title": "Looping Economic Constraints in Function"}, "55": {"path": "/cloudpss_port_get.sh", "hash": "acc518ecfd8ef3dd68fb9ff73abaacda", "title": "CloudPSS Get Request Script"}, "56": {"path": "/cloudpss_port_get.sh:1-7", "hash": "46a476304e9a54093ef9c42f81003ab9", "title": "CloudPSS GET Request with Authentication and Session Cookies"}, "57": {"path": "/cloudpss_port_get.sh:8-14", "hash": "3ded0ab8e6b3f74ab9e5f3428bf306f3", "title": "CORS Headers for Browser Detection"}, "58": {"path": "/cloudpss_sdk_demo.py", "hash": "1efaf896d3be76aa824c74d423e86c46", "title": "CloudPSS SDK Demo: API Design and Implementation"}, "59": {"path": "/cloudpss_unit_conversions_test.py", "hash": "d235de1fb475475e8fb1f6f2797b3974", "title": "Pint-Based Unit Conversion Test"}, "60": {"path": "/cloudpss_unit_conversions_test.py:1-38", "hash": "d173ab04c1f97c6d8b44cfb64de0aea6", "title": "Pint Unit Conversions and Custom Units"}, "61": {"path": "/cloudpss_unit_conversions_test.py:39-76", "hash": "19fa5a7cb893fec0b6d63eb733c65851", "title": "Pint-based Unit Conversion and System Definition"}, "62": {"path": "/cloudpss_unit_conversions_test.py:77-87", "hash": "bebc6052c444ecd21e3e30d3d718eec4", "title": "Unit Conversion and Compatibility Test"}, "63": {"path": "/cloudpss_unit_create_convert_compatible.py", "hash": "2851067dd9e994f502a88eff308f5059", "title": "Unit Conversion and Compatibility"}, "64": {"path": "/cmd_startup.cmd", "hash": "c27e71ec3fe99654eef26a7a5e99e136", "title": "Autorun Script in CMD"}, "65": {"path": "/cmd_startup.reg", "hash": "3ced32e4e096b05b27feeaf58306ced7", "title": "StartupCMD Registry Script"}, "66": {"path": "/commit.py", "hash": "e5db2c05754f4ed76623363b5db5c09f", "title": "MD5 Checksums, Exceptions and Git Commits"}, "67": {"path": "/commit.py:1-33", "hash": "7c189a2fe4c297c6828aa398c0c7ef4b", "title": "Background MD5 Checksum Calculation"}, "68": {"path": "/commit.py:35-68", "hash": "6ae195016d89a190d2756439656aaec5", "title": "Process Initialization in Python Script"}, "69": {"path": "/commit.py:69-105", "hash": "f3895ceaee2d7eba18245ad127b8606e", "title": "Exception Handling for Commit Process"}, "70": {"path": "/commit.py:106-140", "hash": "4f1a8e95163fcf04473bebfda97bbe47", "title": "Cross-Platform Toast Notifications"}, "71": {"path": "/commit.py:143-179", "hash": "115fa01aed450c3c997900c5b7c611f2", "title": "Custom Exception Handling for Git Commits"}, "72": {"path": "/commit.py:180-215", "hash": "ac76ad4494e92528fbf906b9e039e487", "title": "Script Commit Validation Process"}, "73": {"path": "/commit.py:217-245", "hash": "bb1e0d5a2f762816e13262e739ce84ac", "title": "Automated Commit Checker"}, "74": {"path": "/commit.py:247-272", "hash": "af8d685234b5ef3101ed3fbc626f3b4a", "title": "Verify and Set Up Commit Hook"}, "75": {"path": "/commit.py:273-311", "hash": "944378b4a23ac5a79318bce5305cc13a", "title": "GPTcommit Setup and Commit Check"}, "76": {"path": "/commit.py:312-344", "hash": "13d4e013b34b24a4bb028688f5afb3d2", "title": "Commit Validation and Execution Functions"}, "77": {"path": "/commit.py:345-355", "hash": "ca8a07f48a7cd518ac8d5f1c6be9c16f", "title": "Last Commit Time Saving"}, "78": {"path": "/config.py", "hash": "117642fc03e86af1e7d80f56b1465419", "title": "Simulation Parameters Configuration"}, "79": {"path": "/create_shim_for_ipopt.ps1", "hash": "89cbfc2d1d62205a06e87e11f90a1f7d", "title": "Create Shim for IPOPT"}, "80": {"path": "/create_shim_for_nodejs.ps1", "hash": "d8d85195b02c2a0c7ad3db424db952c6", "title": "Create Node.js Shim with NPX Script"}, "81": {"path": "/create_shim_for_nodejs.ps1:1-17", "hash": "1def9a518324a7f757c28f92ea1416af", "title": "Create Node.js Shims Script"}, "82": {"path": "/create_shim_for_nodejs.ps1:18-18", "hash": "cda50f9c5b9711e02a44d7e7b011b702", "title": "Creating Node.js Shim 'npx' Sh script"}, "83": {"path": "/create_shim_for_shot.ps1", "hash": "9a16ff0dfb073eccfb9a4d3ae1b37e0d", "title": "Create SHOT Shim with Script"}, "84": {"path": "/curl_component_get.py", "hash": "b797890d0372b874a7dfde6c35901866", "title": "Jinja2 Template Generator"}, "85": {"path": "/curl_component_get.py:1-40", "hash": "0c447aa67b57fc0f520e7750acb0111b", "title": "Jinja2 Generator with JSON"}, "86": {"path": "/curl_component_get.py:41-50", "hash": "f87e11a0cdb9ea10bb45a15dee589f12", "title": "Automated Template Renderer"}, "87": {"path": "/curl_optim_component_get.sh.j2", "hash": "13e431aafa56681b5146b555aa284241", "title": "Optimized Curl Component Get Script"}, "88": {"path": "/curl_optim_component_get.sh.j2:1-7", "hash": "6d58f67c6e138bb5e29e4cbaa7bcf020", "title": "Optimized CURL Component Retrieval"}, "89": {"path": "/curl_optim_component_get.sh.j2:8-14", "hash": "5a189bf5c5473cb44e0c48c6c06c1d97", "title": "Curl HTTP Headers Script"}, "90": {"path": "/curl_simu_component_get.sh.j2", "hash": "ed6db3661abaf1fb2ed7db15af94bac2", "title": "Curl Simulates Component GET Request"}, "91": {"path": "/curl_simu_component_get.sh.j2:1-7", "hash": "afe5306cd491871aacd3a6fd28dff54e", "title": "Curling HTTP Request with Cookies"}, "92": {"path": "/curl_simu_component_get.sh.j2:8-14", "hash": "b993e1b140703c504cfd5e72ef583164", "title": "Curl Command with Headers and Redirect"}, "93": {"path": "/data_visualize_utils.py", "hash": "a7e487f44eb6acb25a85cfd74f264cfa", "title": "Data Visualization Utility with Matplotlib"}, "94": {"path": "/data_visualize_utils.py:1-38", "hash": "fb15668f3f2e33bcee0e61e9e0ac9921", "title": "Data Visualization Utility for Energy Systems"}, "95": {"path": "/data_visualize_utils.py:39-64", "hash": "877d7639d27c89fb584a6cbdd0aba2bb", "title": "Visualize IntegratedEnergySystem Device Counts"}, "96": {"path": "/data_visualize_utils.py:65-96", "hash": "d0d1f76c4289c5f60d4df3f08ce83e56", "title": "Printing All Decision Variables"}, "97": {"path": "/data_visualize_utils.py:97-104", "hash": "8ec483639b8d483d2e83746f840dc099", "title": "Binary Variables Printing Utility"}, "98": {"path": "/demo_utils.py", "hash": "31bc5ad33af34318276dd233c4d29a8c", "title": "Energy System Setup with NumPy Load Retrieval"}, "99": {"path": "/demo_utils.py:1-54", "hash": "b3606ac0c9baf254187cc41a4e39e726", "title": "LoadGet Class for Hourly Load Data"}, "100": {"path": "/demo_utils.py:55-92", "hash": "a1fee32fef746ed629986fa2bc9c301a", "title": "Hourly Steam Load and Energy Data Retrieval"}, "101": {"path": "/demo_utils.py:93-126", "hash": "36a7277e5e467a620377375a40801c16", "title": "Energy Price Retriever"}, "102": {"path": "/demo_utils.py:127-171", "hash": "efbca3a23d3f70051e04060184b74b5c", "title": "Utility Load and Price Functions"}, "103": {"path": "/demo_utils.py:172-212", "hash": "039a666e5f3f6ec102b898935796145a", "title": "Retrieve Resource Prices and Illumination"}, "104": {"path": "/demo_utils.py:213-265", "hash": "1c86902ee8ad7f37ce38041f2033dfe7", "title": "Electric System Device Registration"}, "105": {"path": "/demo_utils.py:266-302", "hash": "0391a47996a9315f34dbcba3e42b8e6b", "title": "Setting Up Devices: Diesel Engine, PV System & Battery Storage"}, "106": {"path": "/demo_utils.py:303-342", "hash": "2aaacc0eb6ad57c2017e186493885c8e", "title": "Device Registration and Initialization"}, "107": {"path": "/demo_utils.py:343-388", "hash": "ab61bfd846517016e0abefb49ed4b5fd", "title": "Steam Generator Models"}, "108": {"path": "/demo_utils.py:389-428", "hash": "9b353027538e21de0d9525452d0d6868", "title": "Energy Storage Device Initialization and Registration"}, "109": {"path": "/demo_utils.py:429-467", "hash": "27f91f381e6fc45b7a8a614f5a3db1b9", "title": "Initializing Hot Water Devices"}, "110": {"path": "/demo_utils.py:469-509", "hash": "1780096da2f8073065da07c633db3bce", "title": "Water Tank Energy Management Registration"}, "111": {"path": "/demo_utils.py:510-552", "hash": "54b2bdc9861b3a41307a13fe68fec3eb", "title": "HVAC Device Initialization and Constraint Registration"}, "112": {"path": "/demo_utils.py:553-592", "hash": "50ffa8825a7ffbdaf0d8af2f66538738", "title": "Energy Device Creation and Attributes"}, "113": {"path": "/demo_utils.py:593-630", "hash": "1173451fe1def102e4da625f5b7ea698", "title": "Initializing Energy Storage Devices"}, "114": {"path": "/demo_utils.py:631-653", "hash": "e8bf7b9a8e59917c6e1c79e2454f3d3f", "title": "Phase Change Storage Device Initialization"}, "115": {"path": "/docplex_test.py", "hash": "c3b3219b5a9f28496a9dd27076e3fd16", "title": "Docplex: MIP Model Creation"}, "116": {"path": "/draw_sankey_diagram.py", "hash": "0756c8126bffc1ee25fb2af1d0739e5a", "title": "Create Sankey Diagram with PyECharts"}, "117": {"path": "/draw_sankey_diagram.py:1-42", "hash": "80d6a7173ece61c61b147d7a5a570775", "title": "Creating Sankey Diagrams: Code & Libraries"}, "118": {"path": "/draw_sankey_diagram.py:43-61", "hash": "405f4d2bb67a3d3d7a1e6ed6a8173b39", "title": "Sankey Diagram Connections"}, "119": {"path": "/draw_sankey_diagram.py:62-85", "hash": "82a0b5aba738b2c648f20b08a1191f52", "title": "Configure Sankey Diagram Nodes and Flows"}, "120": {"path": "/draw_sankey_diagram.py:86-99", "hash": "7e3ba0b0be7300fe3cbcfa68e9360fff", "title": "Configure and Render Sankey Diagram with PyECharts"}, "121": {"path": "/dump_pydantic_to_json.py", "hash": "1bbfc2c3d04b9f5694e1af8abcd0d9fe", "title": "Pydantic to JSON Dump"}, "122": {"path": "/example.py", "hash": "e829debf05a53cc5f0bef1c5bce912b8", "title": "Optimizing Problem with CPLEX"}, "123": {"path": "/example.py:1-39", "hash": "4e42d9f9487e5f61749bd4b0b9e1c226", "title": "Define Optimization Problem Parameters"}, "124": {"path": "/example.py:41-85", "hash": "043fd0c27d8091d6e62057b8f4934dca", "title": "Optimization with CPLEX Python Example"}, "125": {"path": "/example.py:86-90", "hash": "faac043424934c828b01e50f09ad6db0", "title": "Catching Cplex Errors"}, "126": {"path": "/example_docstring.py", "hash": "14eb47a4530460521207926a4ab621be", "title": "Dog Class and Random Function"}, "127": {"path": "/example_docstring.py:1-52", "hash": "cae002aca62b94369d1b4a1577d44c6a", "title": "Dog Class and some_random_method Function"}, "128": {"path": "/example_docstring.py:53-62", "hash": "992eeeae25a501e5653bbde9ba993405", "title": "Python Skeleton Docstring"}, "129": {"path": "/export_pdf_word_pdoc.ps1", "hash": "f4086a3956f7a6afda66eca8f3e837ab", "title": "Generate PDF Docs from Python Scripts with Pdoc"}, "130": {"path": "/fastapi_celery_client_test.py", "hash": "930b229f25406d4dd35117824d61c34b", "title": "Celery Client with Task Cancellation Check"}, "131": {"path": "/fastapi_celery_client_test.py:1-41", "hash": "8e85b8e0a6935cfebf33d948cebce555", "title": "POST and GET Requests for Calculation State"}, "132": {"path": "/fastapi_celery_client_test.py:43-55", "hash": "cdf44a5e80a30e97f76d9f9062fa3af4", "title": "Checking Cancellation Status in Celery Tasks"}, "133": {"path": "/fastapi_celery_server.py", "hash": "aacef3b8e0340c17ef9fe74b79b6b3c6", "title": "FastAPI Celery Energy Server"}, "134": {"path": "/fastapi_celery_server.py:1-40", "hash": "041fd0b8f649d16f85c8554fef68c69a", "title": "Celery-based Energy Flow Calculation"}, "135": {"path": "/fastapi_celery_server.py:41-71", "hash": "a11bcbbdabb44d9fa4e0d9ad1a0c52d9", "title": "Celery Worker Configuration and Startup"}, "136": {"path": "/fastapi_client_generated_test.py", "hash": "8372202e058cf7cc630f820f612ae21f", "title": "FastAPI Client Test: Chimichang-App Integration"}, "137": {"path": "/fastapi_client_generated_test.py:2-37", "hash": "d9d6e1803d91676bb26a3e6acaf17cad", "title": "FastAPI Client Generation and Testing"}, "138": {"path": "/fastapi_client_generated_test.py:39-41", "hash": "b2e305fee79c9a416d8acecc21cb8a82", "title": "Running Python Script with Subprocess"}, "139": {"path": "/fastapi_client_generator.py", "hash": "75c59cd3b8d28e850d01ecec4d65c521", "title": "FastAPI Client Generator"}, "140": {"path": "/fastapi_client_test.py", "hash": "49b332af7cf5ffa9d34365e6374e0820", "title": "FastAPI Client Test: POST Request"}, "141": {"path": "/fastapi_datamodel_template.py", "hash": "4a8453d22f7d9d40e60b07eccafcaad0", "title": "Efficient Microgrid Simulation Models"}, "142": {"path": "/fastapi_datamodel_template.py:1-41", "hash": "e90addf48a0c65bff1e866487e6119e1", "title": "Pydantic Models for Microgrid System"}, "143": {"path": "/fastapi_datamodel_template.py:42-72", "hash": "5cce7987662e7b4744a541a733b005db", "title": "Simulation Data Model Definition"}, "144": {"path": "/fastapi_datamodel_template.py:73-110", "hash": "4c8c68d9c27fad6b1fd30b534774e980", "title": "Energy Flow Graph Modeling and Simulation"}, "145": {"path": "/fastapi_datamodel_template.py:111-141", "hash": "42d1b5b345a14d5ea096492b4e95d215", "title": "AC Network Graph Model"}, "146": {"path": "/fastapi_datamodel_template.py:143-188", "hash": "2d9d03306c4ae0879c65c53352684021", "title": "NetworkX Graph Conversion and State Model"}, "147": {"path": "/fastapi_datamodel_template.py:189-213", "hash": "667902d8968126bdbc81539cca0ebd92", "title": "Asynchronous Calculation and Revocation Results"}, "148": {"path": "/fastapi_generate_nodejs_client_typescript.cmd", "hash": "cb4c0c082c997835a4f3d7fec21efa44", "title": "FastAPI TypeScript Client Generator"}, "149": {"path": "/fastapi_server_template.py", "hash": "f45e08dad08d4332d246f76c4affe46d", "title": "FastAPI Celery IES Simulation"}, "150": {"path": "/fastapi_server_template.py:1-43", "hash": "ce1c6b5cc824b1737c53f002cb71fab4", "title": "FastAPI Celery IES Simulation Server"}, "151": {"path": "/fastapi_server_template.py:45-88", "hash": "3f60ef411be44b7e53f41d7b36383b6a", "title": "Stale Task Cleanup Functions"}, "152": {"path": "/fastapi_server_template.py:90-126", "hash": "066615ad34bd00bd60290db5d994447f", "title": "Celery Task Status Callback Function"}, "153": {"path": "/fastapi_server_template.py:127-168", "hash": "e0eb44c02ae43b0b2049be19126bb2c0", "title": "Asynchronous EnergyFlowGraph Calculation Server"}, "154": {"path": "/fastapi_server_template.py:169-204", "hash": "a6465726da31ed827b7207d0fd6a5aad", "title": "Asynchronous Calculation Submission in FastAPI"}, "155": {"path": "/fastapi_server_template.py:205-237", "hash": "c14d8bd4f610e7300f788c466fea67da", "title": "FastAPI Server: Routes & Calculation Control"}, "156": {"path": "/fastapi_server_template.py:238-266", "hash": "aabff7554b87b064ec75ed9d8627f484", "title": "Task Revocation Handler"}, "157": {"path": "/fastapi_server_template.py:267-277", "hash": "ec5c9138cccd348547fdd3069705aa22", "title": "Task Clearance in 24-hour Cache"}, "158": {"path": "/fastapi_server_with_doc.py", "hash": "0d12184eb8b3274b6c52f1ae46dc71a8", "title": "FastAPI User Item Server\n\nTitle within 3 to 7 words:\nUser-Item FastAPI Server"}, "159": {"path": "/fastapi_server_with_doc.py:1-29", "hash": "b48eaff437288aef1b4813f5751a723a", "title": "FastAPI Server Doc Generation"}, "160": {"path": "/fastapi_server_with_doc.py:30-73", "hash": "1c73b595a7265890398454f93e3d02e5", "title": "FastAPI Server Setup with Items Endpoint"}, "161": {"path": "/fastapi_server_with_doc.py:74-106", "hash": "18d517b2190dcc60c690e2ca587e53bf", "title": "FastAPI Server with Item Endpoint"}, "162": {"path": "/fastapi_server_with_doc.py:107-135", "hash": "aca01132fa3e04d70b820d8c8b2b529b", "title": "Create Item FastAPI Route"}, "163": {"path": "/fastapi_server_with_doc.py:136-172", "hash": "4a227e4cd0d49e6dff98d1e55162e9ee", "title": "Create Item - Name Validation"}, "164": {"path": "/fastapi_server_with_doc.py:173-177", "hash": "fdba84c8fa706cec73681138d3f24023", "title": "Setting up FastAPI Server"}, "165": {"path": "/generate_call_graph.cmd", "hash": "fa5185774d8cacc6bc495a874751efe2", "title": "Generate Call Graphs from Python Files"}, "166": {"path": "/generate_document.cmd", "hash": "a952f9f07a256514ced0fde261d9b4f2", "title": "Automated IES Planning Doc Generation"}, "167": {"path": "/get_class_name.py", "hash": "e871696b33de95a28ff22a269c728172", "title": "Class A: Property Initialization and Updates"}, "168": {"path": "/get_requirements.cmd", "hash": "351c23721592653c436522f98a40da54", "title": "Uniquely Listing Imports from Multiple Python Files"}, "169": {"path": "/host_document.cmd", "hash": "dc550f8c467558591ef8e7fcb8338846", "title": "Local Python Doc Server on 8021"}, "170": {"path": "/install_gsudo.ps1", "hash": "32fd87aebb13ba494a9fd4f134cb15e8", "title": "Secure gsudo Setup Installation"}, "171": {"path": "/install_gsudo.ps1:1-30", "hash": "4511f4168ffb47adcbc62ce31ddf4f1c", "title": "Secure gsudo Setup via REST"}, "172": {"path": "/install_gsudo.ps1:31-49", "hash": "f7312a472104b8bac2bc237a7a612008", "title": "gsudo Installation Completion Guide"}, "173": {"path": "/jinja_test.j2", "hash": "0194978252e241a7e1eab5deed4e1010", "title": "Jinja2 Loop and Macro Demo"}, "174": {"path": "/linearization_config.py", "hash": "cd7584582b96e5f2429b93c3ee0484b3", "title": "Linearization Configuration"}, "175": {"path": "/matlab_code/matlab_to_python_howto.md", "hash": "73eeae72de6ce680affc56ab3c27d9c3", "title": "MATLAB to Python Conversion with matlab2python"}, "176": {"path": "/microgrid_base/Dockerfile_backup", "hash": "07d30f052f4413b75e59488cb0873c05", "title": "Streamlined Microgrid Docker Setup"}, "177": {"path": "/microgrid_base/Dockerfile_backup:1-25", "hash": "c06d205d4dc815a92183044221378441", "title": "Ubuntu 22.04 Docker Image Setup"}, "178": {"path": "/microgrid_base/Dockerfile_backup:26-44", "hash": "0b23f8ba7324d746e17e5fa7cc485552", "title": "Setting Up Container Environment for Microgrid"}, "179": {"path": "/microgrid_base/Dockerfile_init", "hash": "9c3b1ccd4452198668e4556c76085276", "title": "Accelerating Microgrid Docker Init"}, "180": {"path": "/microgrid_base/Dockerfile_init:1-27", "hash": "b3590f55f6c765930b8ff24e60171504", "title": "Dockerizing Microgrid Environment Setup"}, "181": {"path": "/microgrid_base/Dockerfile_init:28-35", "hash": "b796d4666046b87b8c2bdf09327ab871", "title": "Optimizing Microgrid Docker Init Script"}, "182": {"path": "/microgrid_base/Dockerfile_main", "hash": "7a9dcf71345adc3f85823418ee6c60b9", "title": "Dockerizing CPLEX Environment Setup"}, "183": {"path": "/microgrid_base/Dockerfile_main:1-30", "hash": "140758c0b358538e6d94107e2114dc0d", "title": "Dockerizing CPLEX in Conda Environment"}, "184": {"path": "/microgrid_base/Dockerfile_main:31-35", "hash": "7f2c764ea1bfd97b650a74fe2da6fd8b", "title": "Automated Docker Container Launcher"}, "185": {"path": "/microgrid_base/Dockerfile_patch", "hash": "5dfc47ede2f1dc4c2d522db9b05b200e", "title": "Microgrid Docker Patch"}, "186": {"path": "/microgrid_base/Dockerfile_update", "hash": "1227876c56408746e98ac72835d89fa5", "title": "Microgrid Dockerfile Update"}, "187": {"path": "/microgrid_base/Dockerfile_update_self", "hash": "898a2d31bb1f43177bd7709546cf5006", "title": "Dockerfile: Update and Initialize Microgrid Base Image"}, "188": {"path": "/microgrid_base/HOW_TO_DEBUG.md", "hash": "968cf51849fdb188e2e7466c0175a200", "title": "Debugging Microgrid MILP Models"}, "189": {"path": "/microgrid_base/HOW_TO_DEBUG.md:1-21", "hash": "4d1f5edc52b5bd3433bd36a84b703398", "title": "Debugging MILP Models: Configuration and Error Tracking"}, "190": {"path": "/microgrid_base/HOW_TO_DEBUG.md:21-41", "hash": "b34883f50d69106db7a751278e865cc3", "title": "Efficient Microgrid Debugging"}, "191": {"path": "/microgrid_base/HOW_TO_DEBUG.md:41-41", "hash": "c2d462efa64ee1385bb7eef04d6a0ed2", "title": "Debugging Microgrid Devices"}, "192": {"path": "/microgrid_base/Makefile", "hash": "1e5127a45361c7ea56c5e925bb42df55", "title": "Configure & Deploy Microgrid Server Environment"}, "193": {"path": "/microgrid_base/Makefile:1-26", "hash": "ffa8bf09023c13da7881b53f3039be09", "title": "Configure Microgrid_Base Makefile"}, "194": {"path": "/microgrid_base/Makefile:27-70", "hash": "6d3aa19bca9fc617161b190d4b1e4a66", "title": "Customizable Conda Makefile for Microgrid Simulations"}, "195": {"path": "/microgrid_base/Makefile:72-99", "hash": "423afc8b7959896c21519e471e7b4983", "title": "Microgrid Server Release Makefile"}, "196": {"path": "/microgrid_base/Makefile:101-120", "hash": "24bf1fe2c16bb1e89aa89860ee216765", "title": "Comprehensive Makefile for Building and Exporting"}, "197": {"path": "/microgrid_base/Makefile:122-160", "hash": "3fe2b024748e7c6e8b80f67dfbdebbdf", "title": "Microgrid Simulation Environment Setup"}, "198": {"path": "/microgrid_base/Makefile:162-197", "hash": "5fc9514564ae6bc5036f44d6672b948c", "title": "Makefile: Code Checks, Tests & Release Creation"}, "199": {"path": "/microgrid_base/Makefile:199-225", "hash": "dbcbd17f08effa1dcb015014a71dbac9", "title": "Comprehensive Makefile for Server Building"}, "200": {"path": "/microgrid_base/Makefile:227-242", "hash": "dac7d8447d01422802b283b59e9aa8e9", "title": "Microgrid JSON Preprocessing"}, "201": {"path": "/microgrid_base/Makefile:242-276", "hash": "dfb57dd80f2dd8b8e1957e144561c552", "title": "Microgrid File Manipulation Tasks"}, "202": {"path": "/microgrid_base/Makefile:277-311", "hash": "3232c6fbed76f682df1972b7571bee1f", "title": "Alternative Solver Testing and Debugging"}, "203": {"path": "/microgrid_base/Makefile:312-337", "hash": "49c2cb518835d741629cf4497f3f6ccf", "title": "Microgrid Solver Test Suite"}, "204": {"path": "/microgrid_base/Makefile.j2", "hash": "ede6dea85e3878c9f27fc33a152d1d84", "title": "Macro-Driven Python Build Process"}, "205": {"path": "/microgrid_base/README.md", "hash": "6cce679232b75e938907be009aa15f64", "title": "Python Microgrid IESLang Toolkit"}, "206": {"path": "/microgrid_base/README.md:1-35", "hash": "1ac1e796ca757accda04fa3ee58d6976", "title": "Microgrid Algorithm Service"}, "207": {"path": "/microgrid_base/README.md:37-56", "hash": "89d94a25b2c7257141e3f977b2adc941", "title": "Microgrid Python Setup"}, "208": {"path": "/microgrid_base/README.md:57-74", "hash": "c7f4b76262fe21c928fa395a693979af", "title": "Task Breakdown for Microgrid_Base"}, "209": {"path": "/microgrid_base/README.md:75-90", "hash": "09b9bf67c80441ffb9937633b103dad2", "title": "Microgrid Server Release"}, "210": {"path": "/microgrid_base/README.md:91-103", "hash": "63ba00ef144bfea80f536861ca4c16b0", "title": "Microgrid Optimization Codebase"}, "211": {"path": "/microgrid_base/README.md:103-115", "hash": "ee99875a4789b69d5b22a6268743c6e5", "title": "Python File Purposes in Project"}, "212": {"path": "/microgrid_base/README.md:116-130", "hash": "4d4a1b719c66c5ba78cb3b5c3a8b2ea8", "title": "Microgrid Base: File Structure"}, "213": {"path": "/microgrid_base/README.md:131-144", "hash": "2e243e29dad9e8134d7b492f573ceba8", "title": "Project File Structure Overview"}, "214": {"path": "/microgrid_base/__init__.py", "hash": "1ca9d07bf6d16037fca21a3648547da1", "title": "Microgrid Base Module Import"}, "215": {"path": "/microgrid_base/adaptive_sampling/test.py", "hash": "d6b78161a28162defdda5d728b178cef", "title": "Hyperopt-Driven Microgrid Point Optimization"}, "216": {"path": "/microgrid_base/adaptive_sampling/test_adaptive_piecewise_approximation.py", "hash": "1d2a69b2625bf91254fa782e57052672", "title": "Piecewise Linear Fit and Prediction"}, "217": {"path": "/microgrid_base/adaptive_sampling/test_adaptive_piecewise_approximation.py:1-39", "hash": "00a7f2fd7ae458635738c7c6a27869a3", "title": "Piecewise Linear Fitting with Adaptive Sampling"}, "218": {"path": "/microgrid_base/adaptive_sampling/test_adaptive_piecewise_approximation.py:40-42", "hash": "8b804b4c838f47a5229b4877213ed993", "title": "Adaptive Piecewise Approximation Plotting"}, "219": {"path": "/microgrid_base/adaptive_sampling/test_bisect.py", "hash": "961894011fe30adcddaf887d6ba425d6", "title": "Adaptive Piecewise Regression with Error Threshold"}, "220": {"path": "/microgrid_base/adaptive_sampling/test_bisect.py:1-27", "hash": "2c2017c7597de574ba6a5e33044cc82d", "title": "Adaptive Piecewise Linear Regression"}, "221": {"path": "/microgrid_base/adaptive_sampling/test_bisect.py:29-59", "hash": "2a61441c324be7ca830fa4dba8abe030", "title": "Adaptive Time Series Error Bisector"}, "222": {"path": "/microgrid_base/adaptive_sampling/test_bisect.py:61-67", "hash": "a615889f552d08765fb10bab9d3d8a77", "title": "Adaptive Piecewise Approximation Subsectioning"}, "223": {"path": "/microgrid_base/adaptive_sampling/test_decision_tree_linear_regression.py", "hash": "c7e8f2421980a6ced9c02238f786218a", "title": "Decision Tree Regression for Piecewise Linear Fitting"}, "224": {"path": "/microgrid_base/adaptive_sampling/test_decision_tree_linear_regression.py:1-33", "hash": "9f0d62d77154dbebd6226156f84c3903", "title": "Decision Tree Regression for Segmenting Data"}, "225": {"path": "/microgrid_base/adaptive_sampling/test_decision_tree_linear_regression.py:34-66", "hash": "f9122bf6f88ff7f82e25367de9b3d187", "title": "Adaptive Sampling: Decision Tree-Based Piecewise Linear Regression"}, "226": {"path": "/microgrid_base/adaptive_sampling/test_decision_tree_linear_regression.py:67-88", "hash": "b1825053270adda68c75f7fe17fcaf53", "title": "Piecewise Linear Regression Plotter"}, "227": {"path": "/microgrid_base/adaptive_sampling/test_get_breakpoints.py", "hash": "066d8b265c5dc0ccdb54345c89eccf3e", "title": "Dynamic Max Depth Decision Tree Regression"}, "228": {"path": "/microgrid_base/adaptive_sampling/test_get_breakpoints.py:1-43", "hash": "902925b575e3aa4bbc91a8326baffec0", "title": "Code: Linear Data Generation and Derivative Calculation"}, "229": {"path": "/microgrid_base/adaptive_sampling/test_get_breakpoints.py:44-86", "hash": "aa115fcd42482033beb51970cf2625ab", "title": "Adaptive Sampling Breakpoint Detection"}, "230": {"path": "/microgrid_base/adaptive_sampling/test_get_breakpoints.py:87-114", "hash": "4dbe11d69a45bb57e79e1f21c05ea863", "title": "Breakpoint List Generation"}, "231": {"path": "/microgrid_base/adaptive_sampling/test_get_breakpoints.py:116-127", "hash": "e750cc0197793acc0ce02298103a3fa2", "title": "Scatter Plot with Piecewise Approximation"}, "232": {"path": "/microgrid_base/adaptive_sampling/test_mlinsights.py", "hash": "34686845b27ae876800b74c17ef92280", "title": "Visualizing Piecewise Linear Regression"}, "233": {"path": "/microgrid_base/adaptive_sampling/test_mlinsights.py:1-32", "hash": "c451f988e7b6bd4bcd437d177e38ec8a", "title": "Visualizing PiecewiseRegressor with DecisionTreeRegressor in mlinsights"}, "234": {"path": "/microgrid_base/adaptive_sampling/test_mlinsights.py:33-36", "hash": "3660151ee45b8089dd0f613d71f51dba", "title": "Piecewise Linear Regression Plot with Legends"}, "235": {"path": "/microgrid_base/adaptive_sampling/test_np_piecewise_curve_fit.py", "hash": "398fcf272a06bf59f48b9a4d3d5dbeb4", "title": "Piecewise Curve Fitting in Python"}, "236": {"path": "/microgrid_base/adaptive_sampling/test_piecewise_regression.py", "hash": "702c995da5b48ba34b8b6ba8c2ef442f", "title": "Piecewise Regression for Sinusoidal Fits"}, "237": {"path": "/microgrid_base/adaptive_sampling/test_shift.py", "hash": "6efab1b158e0f1d9594e2b121e23eb56", "title": "Adaptive Test Shift Optimization"}, "238": {"path": "/microgrid_base/adaptive_sampling/test_shift.py:1-31", "hash": "185dfa35a5734dbfef08e747bd0ce737", "title": "Shift and Optimize Data Regions"}, "239": {"path": "/microgrid_base/adaptive_sampling/test_shift.py:32-63", "hash": "3909380e67cc4212756bc82204e01bbb", "title": "Adaptive Sampling: Iterative Breakpoint Shifting"}, "240": {"path": "/microgrid_base/adaptive_sampling/test_shift.py:64-102", "hash": "b22b85acb519520582a69084543623d3", "title": "Adaptive Sampling: Shifting Sections for Error Reduction"}, "241": {"path": "/microgrid_base/adaptive_sampling/test_shift.py:103-130", "hash": "fdd860b22cf3fc39271dee608855c94a", "title": "Adaptive Sampling Error Reduction"}, "242": {"path": "/microgrid_base/adaptive_sampling/test_torchpwl.py", "hash": "fe723d485f497ab4e940b5ce73f42097", "title": "Piecewise PWL Function Application"}, "243": {"path": "/microgrid_base/arbitrary_topology_generation.py", "hash": "eb6c25bfa0d116a5c4d1c249dcefd622", "title": "Random Microgrid Topology Generation with Barabasi-Albert Model"}, "244": {"path": "/microgrid_base/arbitrary_topology_generation.py:1-28", "hash": "370642cb2d0f90a54f0ea80e6f46d798", "title": "Microgrid Arbitrary Topology Generation"}, "245": {"path": "/microgrid_base/arbitrary_topology_generation.py:30-72", "hash": "f5cd85cac2ec294d6a779266065b9ec5", "title": "Microgrid Topology Generation with NetworkX"}, "246": {"path": "/microgrid_base/arbitrary_topology_generation.py:74-93", "hash": "af9020be40a31a40de2da36ac0f976c0", "title": "Barabasi-Albert Model Graph Generation"}, "247": {"path": "/microgrid_base/celery_test.py", "hash": "062cc986ddbaeb0dbb9107ef93861f4f", "title": "JSON Task Sender & Modifier"}, "248": {"path": "/microgrid_base/celery_test.py:1-48", "hash": "f19e05e8b6ea2b7cf8c3108a927089b3", "title": "JSON Modification and POST Request Sender"}, "249": {"path": "/microgrid_base/celery_test.py:49-73", "hash": "bd248d6401016fbeef3fba2dfd978648", "title": "URL Request Handler with Logging and JSON"}, "250": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/README.md", "hash": "84fc632844dc40103eba2e0dbe384e8b", "title": "Effortless LaTeX to Python Conversion"}, "251": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/convert_code_to_webpage.cmd", "hash": "4958ba8d5ee682f7e2e069cdcd9a827c", "title": "Python Code Highlighting and Conversion"}, "252": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md", "hash": "16661b734925e7cf9992fe880a678fca", "title": "SymPy-Powered Latex to Python Converter"}, "253": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:1-26", "hash": "9e6919cd9d32b68ad17ac7a1a20113ff", "title": "Pygments-Based HTML Syntax Highlighting"}, "254": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:27-44", "hash": "db8422b590576e1e9c4f5d6a0da251a4", "title": "Syntax Highlighting Styles"}, "255": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:45-62", "hash": "65f64929959ed800ac16aba8d45ef980", "title": "Syntax Highlighting Styles for Programming Elements"}, "256": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:63-80", "hash": "11cbe41978af525bf4cb946c6b567be6", "title": "CSS Styles for Code Syntax Elements"}, "257": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:81-100", "hash": "fb10513fbc01026c45c907e2bbbb76b1", "title": "SymPy Editor Styling"}, "258": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:101-104", "hash": "c2c0e447df34ff5eae9e319407d68865", "title": "Defining Base and Index Symbols"}, "259": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:104-119", "hash": "4b7a2af121b1a5995e2a413b270b20ee", "title": "SymPy-based Summation Function"}, "260": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:120-141", "hash": "4af6de3ff7567d827236cdddc2ba6fce", "title": "Pygments CSS for Code Syntax Highlighting"}, "261": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:142-159", "hash": "52ede0d90edfd3b878b0595c515dafa6", "title": "CSS Styles for Text Editor Syntax Elements"}, "262": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:160-177", "hash": "dec14e301c3a8d8123209e7c3eb89b2a", "title": "CSS Styles for Code Syntax Elements"}, "263": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:178-195", "hash": "c5493afdf9e547dc343f38c0d9eb34fb", "title": "Syntax Highlighting for Programming Languages"}, "264": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:196-214", "hash": "c37cc9035879cc329bb0c488d732e994", "title": "CSS-Python Code Examples"}, "265": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:215-223", "hash": "08d90dd071c4521f5c03d58f28635f34", "title": "Sympy Import with Variable Naming Suggestions"}, "266": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:223-226", "hash": "ec9a3195e51b1c6dafbabe85ffcdd1e7", "title": "SymPy Sum with Positive Integer Index"}, "267": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:227-232", "hash": "2f317a249943fa2da00f424b3948193f", "title": "SymPy Sum Function Demystified"}, "268": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:232-236", "hash": "4bd1cb9b2977a8222e6e325ae3b13ce7", "title": "Sympy Derivative Calculation"}, "269": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:237-239", "hash": "01eb169e86bf0f225acb10f44e9e5492", "title": "Sympy: Latex to Python Derivative and Integral Calculation"}, "270": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:240-245", "hash": "53804aeecbdfc72a46cbd03de2830fd7", "title": "SymPy Latex Printing Example"}, "271": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:246-249", "hash": "9889d207158f795640cf232b9b748d53", "title": "Converting Latex to Python: Real Numbers and Intervals"}, "272": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:249-253", "hash": "ccdfa09ec609cfe15d12f7155835db75", "title": "SymPy Library Example: Printing Latex Variable and Attributes"}, "273": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:253-256", "hash": "b1299a59cbb2149232ee3a0a5f3df668", "title": "Fixing Syntax Error in SymPy Latex Printing"}, "274": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:257-260", "hash": "016189dd3a6b54d594f9942838d6f24e", "title": "SymPy Library Multiplication Check"}, "275": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:260-262", "hash": "99f4244b0c0baaea974cafad077340d4", "title": "Sympy Interval Intersection with Natural Numbers"}, "276": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:262-265", "hash": "a5e6cb8c924b6692711d67cb518072d2", "title": "Sympy Condition Set Interval Printer"}, "277": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/example_snippet.md:265-268", "hash": "16d06c73f7d3e01980a6cd33d3167580", "title": "Symbolic Function Creation with SymPy"}, "278": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/extract_line_range_from_html.py", "hash": "000f2d0db06f098c7ee05a2692493a8b", "title": "Extract Line Range from HTML"}, "279": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/highlight_html.py", "hash": "2935578243bfdd19420d5b6157135dae", "title": "BeautifulSoup HTML Manipulation"}, "280": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/highlight_html.py:1-43", "hash": "40488eefa7a7b15a2f47fa3562413bd3", "title": "Highlight HTML Range with JS/CSS"}, "281": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/highlight_html.py:44-72", "hash": "59bfd3167b6804a318f3bb58751f02a3", "title": "Web Scraping: Wrap, Append, Save"}, "282": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/highlight_line.css", "hash": "57f88a01b76fe63b2ba3a3ca55959a67", "title": "Highlight Line CSS"}, "283": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/jump_to_line.md", "hash": "c05de58ac031b165fb7be1c4e00017cc", "title": "Mathematical Code: Variable Limits"}, "284": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/jump_to_line.md:1-104", "hash": "444493f6b8328c8a64be7800f055ecdf", "title": "Mathematical Code Snippet"}, "285": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/jump_to_line.md:105-113", "hash": "50f330582b33d3f270948786468267c1", "title": "Variables in Microgrid Base: Real and Integer Ranges"}, "286": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/render_markdown_to_html.cmd", "hash": "7541c009d077c7aad7ba80c5058b025f", "title": "Markdown to HTML Conversion"}, "287": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/render_markdown_with_latex.py", "hash": "632503bf33e431316a714f094e6be13c", "title": "Markdown to HTML with Latex Equations"}, "288": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/test_code.py", "hash": "635baa45162b3091fb0865b54d2be19e", "title": "SymPy-Powered Expression Manipulation"}, "289": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/test_code.py:1-39", "hash": "2fb79f05f969df2694b856ae30d7ba15", "title": "SymPy Summation in GitHub Issue"}, "290": {"path": "/microgrid_base/chatgpt_convert_latex_to_python/test_code.py:40-54", "hash": "c631fa5ba57a964c8bb42c2c435f20c3", "title": "SymPy Mathematical Expression Manipulation"}, "291": {"path": "/microgrid_base/code_checker.py", "hash": "db015faaea21911e94c55f8a91b35ff0", "title": "Comprehensive Microgrid Code Validator"}, "292": {"path": "/microgrid_base/code_checker.py:1-39", "hash": "eb35c9e866390fd750ef2a91f5158aab", "title": "Code Sniffer and Modifier"}, "293": {"path": "/microgrid_base/code_checker.py:40-69", "hash": "9dd912dfea58a20eacdf865790bdbf05", "title": "Code Snippet: File Manipulation Functions"}, "294": {"path": "/microgrid_base/code_checker.py:71-91", "hash": "ea84d9dfa920892f40fb1812f5c72c5f", "title": "Replacing Print Statements with Logger"}, "295": {"path": "/microgrid_base/code_checker.py:92-130", "hash": "ab8cabc26262080b59f9bacdb4f20f6e", "title": "Python Code Linter and Fixing Tool"}, "296": {"path": "/microgrid_base/code_checker.py:131-153", "hash": "85b06b0784feb7257c60a5ed7b1f4cb1", "title": "AST Syntax Checker"}, "297": {"path": "/microgrid_base/code_checker.py:154-175", "hash": "e831518f71925d59771f3d8de49daf26", "title": "Import Checker: Identify Missing \"pyomo.environ\""}, "298": {"path": "/microgrid_base/code_checker.py:176-202", "hash": "1814cc353eee66c2191402e31e05ccd9", "title": "Import Verification and Modification"}, "299": {"path": "/microgrid_base/code_checker.py:203-204", "hash": "21ff39a7d982808b64a2775876ad1f64", "title": "Command Execution with os.system()"}, "300": {"path": "/microgrid_base/conda_init.sh", "hash": "5bab719d8160f52a9706eb8197a1f89e", "title": "Condenv Reset with Python 3.11.2"}, "301": {"path": "/microgrid_base/config.py", "hash": "31855255773b5b7fec854bbf1e8371f3", "title": "IES Environment Configuration"}, "302": {"path": "/microgrid_base/config_dataclasses.py", "hash": "380e391bd3f4dc1c3d4381442e986506", "title": "IES Algorithm Docker Configs"}, "303": {"path": "/microgrid_base/config_dataclasses.py:1-30", "hash": "7faa4242959857218b1844d1944a6d97", "title": "IES Algorithm Config Class: IESEnv"}, "304": {"path": "/microgrid_base/config_dataclasses.py:31-60", "hash": "9cd8b99f18de51dace65b37aa17e3460", "title": "Configuring Server Behavior: Boolean Fields"}, "305": {"path": "/microgrid_base/config_dataclasses.py:61-89", "hash": "e57c2f983f8462e80f57e7992bb3bef2", "title": "Microgrid Config Options"}, "306": {"path": "/microgrid_base/config_dataclasses.py:90-117", "hash": "7f55416dbdf1861df64e7ab1411447a8", "title": "Microgrid System Config Options"}, "307": {"path": "/microgrid_base/config_dataclasses.py:118-149", "hash": "b93fe232e4c3812a25abaa80540042df", "title": "Docker Launcher Config Class"}, "308": {"path": "/microgrid_base/config_dataclasses.py:150-157", "hash": "ad90a2f8d65c9f57fe48c857228056b7", "title": "Docker Image Update Config"}, "309": {"path": "/microgrid_base/conflict_utils.py", "hash": "c5960196cb047a25a42f589d50c0ee6c", "title": "Conflict Refiner for Microgrids"}, "310": {"path": "/microgrid_base/conflict_utils.py:1-31", "hash": "cd57c933f682a24b47c2437caea1675d", "title": "Killing CPLEX with Python Function"}, "311": {"path": "/microgrid_base/conflict_utils.py:32-63", "hash": "85789be8909c6191b519504cd27e006d", "title": "Check Conflict Function"}, "312": {"path": "/microgrid_base/conflict_utils.py:64-95", "hash": "d4c8bb997de458cfed31ed1124a42969", "title": "Conflict Refiner Function"}, "313": {"path": "/microgrid_base/conflict_utils.py:96-127", "hash": "08af92ce9d5a8063684563fc16de09b0", "title": "Conflict Detection and Refinement with CPLEX"}, "314": {"path": "/microgrid_base/conflict_utils.py:128-153", "hash": "3166927e82fbe29b45dcb15145321f82", "title": "Command Line Options for Conflict Analysis Tool"}, "315": {"path": "/microgrid_base/constants.py", "hash": "21ff9f70c45c20c5793dbfbabd48554a", "title": "Microgrid Optimizer CLI Commands"}, "316": {"path": "/microgrid_base/constants.py:1-44", "hash": "879210b7b9578170762fccae5d120159", "title": "Microgrid Constants and Options"}, "317": {"path": "/microgrid_base/constants.py:45-63", "hash": "fafb2e5c84d1c24e8f6ca1b8bc027e39", "title": "Solver Parameters: Control Efficiency and Accuracy"}, "318": {"path": "/microgrid_base/constants.py:64-75", "hash": "1cc9f60ebf89863641b58a3cf34cd1ab", "title": "Branch and Cut Solver Constants"}, "319": {"path": "/microgrid_base/constants.py:76-94", "hash": "25957fb1edeb94829b44f760b8478ae2", "title": "Optimization Solver Parameters"}, "320": {"path": "/microgrid_base/constants.py:95-113", "hash": "8f43f1f4f7db1d1246afad662b08ca51", "title": "Branch and Cut Parameters"}, "321": {"path": "/microgrid_base/constants.py:114-128", "hash": "397177174a16a0695cd25f27ac88b176", "title": "Optimization Algorithm Options"}, "322": {"path": "/microgrid_base/constants.py:129-145", "hash": "0e907bc7d3a8d377a38edb72be4a9874", "title": "Microgrid Heuristics and Options"}, "323": {"path": "/microgrid_base/constants.py:147-166", "hash": "00c4d3738ab84b3dffe3c66957a469cf", "title": "Customizable CBC Solver Controls"}, "324": {"path": "/microgrid_base/constants.py:167-183", "hash": "c5b477d48a25549481562a9baf826496", "title": "CLI Commands for Optimization Solver"}, "325": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/README.md", "hash": "4e61570e2a4c4eab2d1c5df25d039ca0", "title": "Cplex Abnormal Exit Debugging"}, "326": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py", "hash": "61d0cb0aa51252025f5850a2a986e373", "title": "Alternative Solver Integration"}, "327": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:1-44", "hash": "f8a29f5aa16a8fad7f1d20ad0bbd6f68", "title": "Retrieving Model Solution with Python"}, "328": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:45-81", "hash": "79d2210ac79c9a24f09e1f275e1daf7c", "title": "Model Solution Monitor"}, "329": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:83-120", "hash": "86a99fb31c38657618823165da839f86", "title": "Initializing Model and Variables"}, "330": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:121-157", "hash": "6f51b2a976824b8d07d6dcb45cbfe753", "title": "Cplex Model with Warm Start and Constraints"}, "331": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:159-185", "hash": "c6a67116787e2e76f19ec7bef0ff907c", "title": "Solver Options: Customizing IPOPT Settings"}, "332": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:186-218", "hash": "ff7cbe75d40a7f488e796892780d5332", "title": "New Solution Solver Handler"}, "333": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:219-248", "hash": "11dc4bb6fdce520d1c2c8a8082c07a28", "title": "Alternative Solver Debugging"}, "334": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:249-281", "hash": "6d8419c30d9bc8376f36669a98a0a639", "title": "Alternative Solver with Bound Constraints"}, "335": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:282-317", "hash": "96a963ded96b5df745c69115ae62a837", "title": "Solver Diagnostic Print Function"}, "336": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:318-357", "hash": "278dc4e76b5dc12991a02df1845f2979", "title": "Decomposing Expression Function"}, "337": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:358-394", "hash": "7e18bf36d6ba12724e39a53cf8a205f8", "title": "Alternative Solver Debugging: Code Analysis"}, "338": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:395-416", "hash": "02010cc9548690d492cf530c76047af3", "title": "Decompose, Calculate, and Sort Variables"}, "339": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:417-426", "hash": "c956a9b906bfa69a7873038800f9deca", "title": "Linear Expression Check"}, "340": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/arithmatic_prolog.pro", "hash": "5dcb6efd94426a72d20295d1767360dc", "title": "Optimizing Constraint Programming with Alternative Approaches"}, "341": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/arithmatic_prolog.pro:1-37", "hash": "287ca2f17bd511ee84e4416150b9e3b2", "title": "Dual Solve Functions with clpr and CLP(FD)"}, "342": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/arithmatic_prolog.pro:39-39", "hash": "d8e19b849a2869f279dc824fb9204137", "title": "Count Probability Predicate"}, "343": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/associativity_attr_model.py", "hash": "e11129c8ebc7748ca6e6ead98e3e2369", "title": "Associativity Attribute Modeling in Microgrids"}, "344": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/associativity_attr_model.py:1-43", "hash": "f0ebd6b8df8835242fc6c52b69f294a7", "title": "Associativity Attribute Model"}, "345": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/associativity_attr_model.py:44-50", "hash": "936f8860ec84d54707a03ba466db2d4c", "title": "Model Component Base Names Printing"}, "346": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/cbc_persistent.py", "hash": "a0d1519131adaa2b0e62725c255acafb", "title": "Cplex Cython Class Import"}, "347": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/chatgpt_typesys_bat_smiple.pro", "hash": "f3960e4f05aac0fde589ca5c97a72785", "title": "Microgrid Device Conditions and Usage Rules"}, "348": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/chatgpt_typesys_bat_smiple.pro:1-31", "hash": "1da603235843a35c8e04b8ae5060cb95", "title": "Microgrid Device Rules and Conditions"}, "349": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/chatgpt_typesys_bat_smiple.pro:32-39", "hash": "2f6f998017a769f361a89297cc42f54d", "title": "Check Adder Predicate"}, "350": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/chatgpt_typesys_examaple.pro", "hash": "4d978a5f2a05f49e1c3e72733e14537f", "title": "Port-Based Device Rules and Wind Conditions"}, "351": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py", "hash": "fc9e3ec347aafff59558420ead51ed1f", "title": "Validating Microgrid Constraints and Variables"}, "352": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:1-37", "hash": "5fca1d274ab958a23f0e8617604db3fa", "title": "Detecting Invalid Variables and Constraints in Pyomo"}, "353": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:38-79", "hash": "5202e03c3aea606111b5870a645ae753", "title": "Validating Variable Bounds and Constraints"}, "354": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:80-113", "hash": "e5975253db75a551b42274117cd99dad", "title": "Bound and Type Violation Checker"}, "355": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:114-150", "hash": "85f5f78c20b400c1a291f2c6ac66f39d", "title": "LRU Cache Decorator for Variable Checking"}, "356": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:151-190", "hash": "1d4c9b1486042d57b30105251e811661", "title": "Validating Variables and Constraints in CPLEX Microgrid"}, "357": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:193-226", "hash": "729ce9308c4cce863733fbfca8ab99b1", "title": "Retrieve Violation and Variable Info"}, "358": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:227-262", "hash": "6534f5760b35d6b47e1297958980e3d9", "title": "Custom Dictionary for None Values"}, "359": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:263-298", "hash": "864fe3467bd5368d7bb7eb5ff2f60605", "title": "Variable Information Extractor Functions"}, "360": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:299-333", "hash": "49984db77cd436c81cc5c2921585a44f", "title": "Variable and Constraint Decomposition"}, "361": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:334-363", "hash": "902610b783f88799dcbd7ad13e140f9b", "title": "PiecewiseInfo Class: Tolerant Piecewise Base Info Extension"}, "362": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:364-403", "hash": "e82f836939a3b36c8b41e35ddaa2d365", "title": "Microgrid Constraint Checker"}, "363": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:404-430", "hash": "839e6c564e000bc00e838ac8d1989012", "title": "Deactivate Model Constraints with Bounds and Tolerance"}, "364": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:431-455", "hash": "a6ff7469abbd37bc0641c6a6c08d39e5", "title": "Debugging Constraint and Variable Abnormalities"}, "365": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:456-479", "hash": "97ac2a5c80aa93073193f70347212683", "title": "Checking Piecewise Function Input"}, "366": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:480-502", "hash": "28c46dfceaf7b83680db72c742c63d35", "title": "Model Scanner for Constraints, Variables & Piecewise Functions"}, "367": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model.py", "hash": "b22712421672cf5a930e595525ae7000", "title": "Identifying Problematic Variables in CPLEX Models"}, "368": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model.py:1-40", "hash": "62a7ed27a0978c477e7e53a840ffb647", "title": "Unbounded LP Model Solver"}, "369": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model.py:41-71", "hash": "fec0101028b2b754e550b4672bb344a9", "title": "Bounded vs Unbounded Objective Function Comparison"}, "370": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model.py:72-104", "hash": "1bf8b511b06954ad142456116e61d733", "title": "Identifying Unbounded Models in CPLEX Solver"}, "371": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model.py:105-144", "hash": "31868226aec2aff21382eb4f71a32b9f", "title": "Decompose Expression Function"}, "372": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model.py:145-179", "hash": "f25cd4b44cdf8c3119145bac406f885e", "title": "Decompose, Sort, Display Variables"}, "373": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model.py:180-201", "hash": "94ae1962bb50a24fb3f32af6e3867111", "title": "Sorting Variable-Value Pairs in Python Code"}, "374": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model.py:202-210", "hash": "b06dfa5d9db3b3fedb0cc0b1c1828c7a", "title": "Checking Non-linear Objective Expressions"}, "375": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model_import_external.py", "hash": "1e2e1c5c1c949c44e27b762ee752b519", "title": "Unbounded Model Checking"}, "376": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/conjugate_load_combinations_reduce.py", "hash": "303a39f7a7f21a9f73929c1c1168ebf8", "title": "Conjugate Load Combinations Generator"}, "377": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/coptampl_test.py", "hash": "203dea070c802de9f481d89d998146ee", "title": "Pyomo Model Solving with COptAMPL"}, "378": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/cplex_persistent.py", "hash": "101a8a7977e16f8bf7e96e09ef605dbb", "title": "Persistent CPLEX Model Solver and Status Check"}, "379": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/dill_pickle_model.py", "hash": "ab5b501a2fd4e3a948e60f107e40a09c", "title": "Dill-Pickle Model Serialization"}, "380": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_conflict_refiner.py", "hash": "49de61b2297da3cf12b7f046b4063d1d", "title": "CPLEX Conflict Refiner"}, "381": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_conflict_refiner.py:1-39", "hash": "7f4fdc75e89df03108bdbefaec55402b", "title": "Kill CPLEX Process after Duration"}, "382": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_conflict_refiner.py:40-72", "hash": "80082fb347a3a586065a019443e77a08", "title": "CPLEX Conflict Refiner Interruptor"}, "383": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_conflict_refiner.py:73-100", "hash": "6fba2e1a90a68da6567ebc43b9ff15b7", "title": "Detecting Conflicts with Docplex's ConflictRefiner"}, "384": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_conflict_refiner.py:101-133", "hash": "7e9ae25b3bcb675c2ad81f84b12a7ed2", "title": "Conflict Refiner in Microgrid Model"}, "385": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_conflict_refiner.py:134-162", "hash": "e79b8ffcb6081bb9fd7f966badefe88e", "title": "Cplex Conflict Refiner"}, "386": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_conflict_refiner.py:163-173", "hash": "6397967682c4985d542f47d7db929696", "title": "Debugging CPLEX Model Solutions"}, "387": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_feasopt.cmd", "hash": "bce6b5f14ef88afabea1896ab733b119", "title": "Real-Time Dash Execution: Debugging Microgrid Base"}, "388": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_feasopt.py", "hash": "7f0f1aaa34e078bd1f9fb7dba9aab486", "title": "Feasopt-driven Docplex Optimization"}, "389": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_feasopt.py:1-40", "hash": "c65cc43b21c6ccdac1b891c67af05589", "title": "Initializing Feasopt for Abnormal Exit Conditions"}, "390": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_feasopt.py:41-79", "hash": "0c6550158d66ce94299ec691c99d17f9", "title": "Grouping and Merging Groups in Cplex Algorithm"}, "391": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_feasopt.py:80-108", "hash": "f0f29df3786c639e675fb4623f2c09e2", "title": "Constraint Grouping for Docplex Optimization"}, "392": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_feasopt.py:109-122", "hash": "d15d9aef682fdc533401b73bb2c4dd63", "title": "Debugging Code Snippet for Constraints Optimization"}, "393": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/get_feasopt_sol.cmd", "hash": "ffba2c2230021c39dae38e5d7fddec5a", "title": "Feasopt Solver Script"}, "394": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/get_iis_cplex.cmd", "hash": "8370961cba2bd85ae345a167c4b7c43b", "title": "Cplex Conflict Analysis"}, "395": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/highspy_solve.py", "hash": "ae4aba0f0ca335d5fbddedb8850bbfa5", "title": "Highspy MPS Solver Python Script"}, "396": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/init.sh", "hash": "4d0b0f07a79fbb902f6a69d27602b887", "title": "Script Moves Temporary Files for Analysis"}, "397": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/ipopt_persistent.py", "hash": "3ff4b0ee65f5e479941b5214997db6da", "title": "Importing IPOPT Library for Optimization"}, "398": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/load_feasopt_sol.py", "hash": "50c67b2ba0824b067a472ee6e4c0ab75", "title": "Feasopt Sol Extractor"}, "399": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/logical_constraint_demo.py", "hash": "4b76815edc70ecaa44e56559f2037b04", "title": "Optimizing Microgrid Units with Pyomo"}, "400": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/logical_constraint_demo.py:1-30", "hash": "5c1176d87bfd679fe9606421f5fac7f1", "title": "Pyomo Model with Concrete Integer Variables"}, "401": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/logical_constraint_demo.py:31-48", "hash": "b36588080cb1079b203171d259344961", "title": "Logical Constraint Solver Demo"}, "402": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/lp_to_mps.py", "hash": "8673fc682ae2cc00031d90bab46dbce4", "title": "Pyomo/CPLEX: Converting LP to MPS for Analysis"}, "403": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/mps_analyze.cmd", "hash": "2beeb1275d6d5599f599afc9bf5c1fcd", "title": "Debugging MPS Analysis with lp-analyzer"}, "404": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/or_tools_cp_sat.py", "hash": "95d5e9b164f539e71b2503a86a00656b", "title": "Creating and Solving CP Models with OR-Tools"}, "405": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/or_tools_load_custom_model.py", "hash": "71b63d1620c6f3bd80ac958ca11dd64f", "title": "Or-Tools Model Loading and Solving with CPLEX"}, "406": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/or_tools_solver.py", "hash": "b93a8674b9e58215a6671c9fc80fc64c", "title": "OR-Tools Solver for Worker-Task Assignments"}, "407": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/or_tools_solver.py:1-39", "hash": "816763ff1f9efe8943da823a37c5a36e", "title": "OR-Tools SAT Solver for Worker-Task Assignment"}, "408": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/or_tools_solver.py:41-60", "hash": "d2b6b11c34c068116ddc42e65a7f5603", "title": "OR-Tools Solver for Linear Optimization"}, "409": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/override_method_by_copy.py", "hash": "56c75415a65d1e9e7c3cc3b0a6ca9c71", "title": "Copy and Override for Effective Demonstration"}, "410": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/parse_scip_solution.py", "hash": "92d1829ee980df45d2f57d8cd151dc16", "title": "XML Parsing and Printing Script"}, "411": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/print_all_transformation_documentation.py", "hash": "3e92369ed5c57bba77a929fa29c27d4d", "title": "Print Transformation Docs in Pyomo"}, "412": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro", "hash": "aadf41f4a806f0508f888feb624cebae", "title": "Microgrid Power Management Code"}, "413": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro:2-55", "hash": "e4bc35a30d359974b9e22f45ed174564", "title": "Microgrid Device and Port Type Definitions"}, "414": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro:56-83", "hash": "2a7b3a503db2644f053e9cff30255000", "title": "Adder Port Status Check"}, "415": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro:83-83", "hash": "088275c68455ea49a3679d95af583115", "title": "Applying Predicate to Lists"}, "416": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro.j2", "hash": "efae3f4a97f41506dbbb6b02c9d7a07a", "title": "Microgrid Template for Energy Simulation"}, "417": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro.j2:1-36", "hash": "a27eca569ad0987531df4d9aff088a27", "title": "Microgrid Simulation Rule Templating"}, "418": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro.j2:37-72", "hash": "2bd589b9ad2bc39d3978e47cdb9b6889", "title": "Energy Functions and Ports Handling"}, "419": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro.j2:74-93", "hash": "fc780011d8ebd3f02d39de88930a2f91", "title": "Microgrid Adder Port Status Functions"}, "420": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.py", "hash": "61c2b56742ad3f3450d875b4096917dd", "title": "Prolog Generator for Energy Systems"}, "421": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.py:1-28", "hash": "373d4bebfbfda97762f320686c41a6dc", "title": "Prolog Code Generator"}, "422": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.py:29-46", "hash": "33914e23ec70daecfb700e75b473d6e5", "title": "Prolog Dynamic Verification Code for Energy System"}, "423": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py", "hash": "10c9458dacfdbd89fc78480b454c3e1c", "title": "Dynamic Verification of Microgrid Status with Prolog"}, "424": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:1-38", "hash": "fe7434676b45b190a08fd5c3731ce9f3", "title": "Error Manager Class for Exception Handling"}, "425": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:39-79", "hash": "8cdae34e9a64c29ca15de03cde097f00", "title": "Exception Handler Class and Context Manager"}, "426": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:80-131", "hash": "addc7107bca500cade75244e82807001", "title": "Utility Functions for Prolog and Error Handling"}, "427": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:134-157", "hash": "471ec679f0581f8a865cc1a8baa1fc7c", "title": "Prolog Query Function for Topology Status"}, "428": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:158-191", "hash": "9feda0f310be5467358a6296c3d4e7aa", "title": "Prolog-Based Network Status Query"}, "429": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:192-210", "hash": "5b0a71162e5a6ca333e4b2038e1ab1af", "title": "Dynamic Verification Prolog Typesys Iteration"}, "430": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:211-248", "hash": "3b47c576f40dad0c779aa1c54867e5b1", "title": "Topology Status Printing Function"}, "431": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:249-265", "hash": "2cc36d1036cac6b37d78b25ece2c0611", "title": "Conjugate Port Verification"}, "432": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:266-286", "hash": "8a4760fccf672143aecf6346d5250895", "title": "Conjugate Port Verification"}, "433": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:288-310", "hash": "2c8aba2168f4cb24d64ecb67f2a80ba7", "title": "Dynamic Topology Verification"}, "434": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:311-340", "hash": "3d4f7d67fd25ecae7f014b1480dd6151", "title": "Adder Energy Check"}, "435": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:341-376", "hash": "9b8041eff0f7c55376fb8a4e60244ba1", "title": "Dynamic Prolog Verification for Abnormal Exit Conditions"}, "436": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:377-394", "hash": "d7fd2ef1edf8e52cdb462ebb1701d933", "title": "Conjugate Port Verifier Check"}, "437": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/python_mip_conflict.py", "hash": "38ae53236a45f402bd2158c9be1c43b2", "title": "Optimizing MIP Solutions with Filters"}, "438": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/read_lp_and_solve_copt.cmd", "hash": "ba6ab7c8dfa1b0718639e66adf3ffc24", "title": "MPS File Processing with CPLEX"}, "439": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/resolve_task_dependency.py", "hash": "7d70eb86ddefc666d4501ee149ecaad9", "title": "Dependency-Resolved Task Sequence"}, "440": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/resolve_task_dependency.py:1-29", "hash": "81380ffd15605f863f9489a1807bc539", "title": "Task Dependency Resolver"}, "441": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/resolve_task_dependency.py:30-61", "hash": "9f2560aa11ca09c27724d7d77b404742", "title": "Resolving Task Dependencies and Sequence Determination"}, "442": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/resolve_task_dependency.py:62-78", "hash": "037abc96c2b12362e5989bf4ce9ec1bd", "title": "Circular Dependency Verification"}, "443": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/rewrite_prolog_as_python.py", "hash": "c45f808adcb515ef7cb0952a08bba2c5", "title": "Energy Port Combinations: Python Visualization"}, "444": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/rewrite_prolog_as_python.py:1-31", "hash": "96202248b2707ab0b54f36835b946483", "title": "Energy-Port Combinations Generator"}, "445": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/rewrite_prolog_as_python.py:34-59", "hash": "65e7334aa97a5db1813a03cfc6295e8d", "title": "Microgrid Energy Combination Evaluator"}, "446": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/rewrite_prolog_as_python.py:60-92", "hash": "b0de8f48347460a6c4204689b0caaacf", "title": "Generating All Microgrid States with Energy Types and Ports"}, "447": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/rewrite_prolog_as_python.py:93-108", "hash": "af64eef298bbe1ba30602b95fb35cfdf", "title": "Dictionary Mapping for Adder Ports"}, "448": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/run_docplex.cmd", "hash": "c3f08b2c6347681ab4ced51815e89b2b", "title": "Run Docplex Script with Control-C Signal Handling"}, "449": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/sample_prolog.pro", "hash": "0aa9ffb7ac958bde6294970713fc77a3", "title": "Microgrid Components and Prolog Functions"}, "450": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/sample_prolog.pro:2-55", "hash": "b04c7afa58b9b030e39a2177224021c2", "title": "Microgrid Component Definitions"}, "451": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/sample_prolog.pro:56-128", "hash": "1376088037b3ddc088a0b9badeefb164", "title": "Microgrid Device Modeling"}, "452": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/sample_prolog.pro:129-155", "hash": "bc640fb62fa7a7d820a4bba4c68e7d8b", "title": "Microgrid Port and Adder Status Functions"}, "453": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/sample_prolog.pro:156-175", "hash": "fcb6b703d1076606eb1c84569b284d49", "title": "Validating Microgrid Topology with Predicates"}, "454": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/scip_get_relaxed_sol.cmd", "hash": "abeea09778e3b3a896cc7870504fdd82", "title": "SCIP: Relaxed Solution Extraction"}, "455": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/scip_persistent.py", "hash": "f27c4b944e5b0433b3c74ebf71d3799d", "title": "SCIP Model Framework for Integer Programming"}, "456": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/scip_persistent.py:1-6", "hash": "eca747ebe6265c153765d80350b6811c", "title": "SCIP Model Creation and Attributes"}, "457": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/scip_persistent.py:6-6", "hash": "86e4aade1bd9191fa102577cde6770ee", "title": "Decomposition and Reoptimization Algorithms in SciPy"}, "458": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/scip_persistent.py:6-21", "hash": "88a4a9f9707d39c94311862cb0b91b25", "title": "Optimizing Model with Debugging Features"}, "459": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/scip_persistent.py:22-23", "hash": "9d547d2fe83037ac3574478663dfa4ee", "title": "Debugging Variables: x, y Values Printing"}, "460": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_as_simplex.py", "hash": "4b90f3cf9f36f31ab68646617e35a46f", "title": "CPLEX MILP Solver and Relaxation Comparison"}, "461": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_as_simplex.py:1-39", "hash": "2dd2b2116cd12fef069c2750a8baac59", "title": "Solving MILP as LP using CPLEX"}, "462": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_as_simplex.py:40-65", "hash": "70bf338c4fdf7bd315ebc9aeb7990106", "title": "Temporary Variable Delegation in Modeling"}, "463": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_as_simplex.py:66-107", "hash": "a10e3b3b5bd0829eba583cde0f340ce4", "title": "Cplex Model Solving and Comparison"}, "464": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_as_simplex.py:108-117", "hash": "4f92c806bdcb1e113c9d6f348a3aa2b1", "title": "Printing Results and Solutions"}, "465": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_miniature_ies_system.py", "hash": "5e4e87a0f595449105dcadfde60fda1e", "title": "CPLEX-based IES System Solving"}, "466": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_miniature_ies_system.py:1-25", "hash": "19f0f00915fe5fa057c997730cd8a8e3", "title": "Debugging CPLEX Abnormal Exits in Miniature IES Systems"}, "467": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_miniature_ies_system.py:27-57", "hash": "9db4f6504f1d5a61454d583f627c0e9b", "title": "Efficient State Filtering for Microgrids"}, "468": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/task_queue.py", "hash": "16ad848766dbdf05056c8b015a970679", "title": "Forking Pickler Task Queue with Retries"}, "469": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/task_queue.py:1-38", "hash": "2f9561a2a42c059437d47454c215ce0e", "title": "Windows-Compatible Task Queue with ForkingPickler"}, "470": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/task_queue.py:39-61", "hash": "570cdc4f02d143eba52709faa78811b3", "title": "RedisHuey Tasks with Retry and Timeout"}, "471": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/task_queue_test.py", "hash": "70297e97c979c6a332831abdf33b497b", "title": "Task Queue Test"}, "472": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/task_queue_worker.cmd", "hash": "d84cf3d5b3cdf22d0fdb1bd958af3c25", "title": "Huey Consumer Task Processing"}, "473": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_arithmatic_prolog.py", "hash": "0ac8e0b9344bde7e27639b10f679df2c", "title": "Prolog Arithmetic Query Tool"}, "474": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_iterative_query.pro", "hash": "686dc21ccd4af8e002afd8d61368aeff", "title": "Dog: Pet, Animal, Cute"}, "475": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_iterative_query_prolog.py", "hash": "ee2ddced7bdf947b0a3547f370605c1a", "title": "Asynchronous Prolog Query Execution"}, "476": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_method_registry.py", "hash": "76c6547afa511db57f8ea13b754be520", "title": "Managing Methods with Decorators"}, "477": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_method_registry.py:2-38", "hash": "19f7e5963e19a73720dbaa5853795ed9", "title": "MethodRegistry: Signature-Based Registry for Python Objects"}, "478": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_method_registry.py:39-62", "hash": "2d78f41965bc0e63bc4e330a686b9119", "title": "Decorator Registry Parser"}, "479": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_method_registry.py:63-85", "hash": "9a324ce0adf6a8b1c735273fd57d3941", "title": "Method Registry Testing"}, "480": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_prolog.pro", "hash": "820302d020722880ce9a6b526ddcbb52", "title": "Prolog Device Type Definitions"}, "481": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_prolog.pro:1-47", "hash": "84c4adabab649db1811e869a0c2fb297", "title": "Transpose Operations and Device Definitions in Prolog"}, "482": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_prolog.pro:49-75", "hash": "07cd99f2544aef70de7443ce19f85dc5", "title": "Adder Port Status Checker"}, "483": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_prolog.pro:76-84", "hash": "0dcc744b6936f294514a6c2ca68a1b46", "title": "Adder Port Status Functions"}, "484": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_prolog_advanced.pro", "hash": "9d9fd35b0e09adfd39760bded5f10869", "title": "Dynamic Facts in Prolog Dictionaries"}, "485": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_stepwise.py", "hash": "4a23ae238a60e0820b98b626453edab9", "title": "Pyomo-CPLEX Disjunctive Variable Debugging"}, "486": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_stepwise.py:1-33", "hash": "93b057423156c091a88558b41b7548cb", "title": "Stepwise Disjunctive Constraints in Pyomo"}, "487": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_stepwise.py:35-63", "hash": "e96c067227eab11b863288c47e466e88", "title": "Disjunctive Model Transformation and Solving with CPLEX"}, "488": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/test_stepwise.py:64-67", "hash": "a960bd89f1f40e4d2077f0b04140a729", "title": "Debugging CPLEX Abnormal Exit Condition"}, "489": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/transform_tests.py", "hash": "f1f9daf992e292ed73d4e655de8f8348", "title": "CPLEX-Linear Transformation Failed"}, "490": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/translate_model_var_name_unicode.py", "hash": "26404c9f911728511913d04ff1e1d26e", "title": "Translation and Error Handling in CPLEX Model"}, "491": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/translate_model_var_name_unicode.py:1-37", "hash": "cf9142a14557b1bd2da296c59263f331", "title": "Translate Model Variable Names"}, "492": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/translate_model_var_name_unicode.py:38-61", "hash": "f749bd8943e92a440bd402faa115b930", "title": "Translating Text with Flashtext Library"}, "493": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/translate_model_var_name_unicode.py:62-95", "hash": "2803f22813beceb3e083bb217c03ed1b", "title": "Testing ConcreteModel Feasibility with CPLEX"}, "494": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/translate_model_var_name_unicode.py:96-120", "hash": "75f10d7fdf9d99ab447e8e859fe8604e", "title": "CPLEX Model Debugging with Unicode Variables"}, "495": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/translate_model_var_name_unicode.py:121-146", "hash": "ef136310335e1912583b869ffe891420", "title": "Translate Model Var Names for CPLEX"}, "496": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/translate_model_var_name_unicode.py:147-150", "hash": "5aaa4ff1f240d3d286866e53f7c76b18", "title": "Translate Model Variable Names"}, "497": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/visualize_decomposition_pygcgopt.py", "hash": "379477f042f3d4c98d3ee0070769a48b", "title": "Decomposition Visualization with PyGCKOpt"}, "498": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/visualize_decomposition_pygcgopt.py:1-29", "hash": "f092f057d62c11cff21df7cfe85c6b09", "title": "CMDRP Model Building with PyGCKOpt"}, "499": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/visualize_decomposition_pygcgopt.py:30-67", "hash": "54362a93e42bbbcc89ed251efb5d1124", "title": "CPLEX Model for Assignment and Location Selection"}, "500": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/visualize_decomposition_pygcgopt.py:68-88", "hash": "eaf775ba24a8de7d4b2104b7f7802b27", "title": "Visualizing Decompositions in CPLEX PyGams"}, "501": {"path": "/microgrid_base/cplex_abnormal_exit_condition_debug/word_counter.py", "hash": "2fea18f905dced4aa4ad798c1a21951b", "title": "Efficient Keyword Counter"}, "502": {"path": "/microgrid_base/cplex_test.sh", "hash": "21ef5370221b1460f735d9e6fd2f57d4", "title": "Setup CPLEX Path for Test Script"}, "503": {"path": "/microgrid_base/csv_utils.py", "hash": "a95b37be42b66719ce87ff9117d8467b", "title": "CSV Utils: Ensuring Uniformity for Pandas DataFrame"}, "504": {"path": "/microgrid_base/debug_utils.py", "hash": "a15bf6b6e079a53e59a2c4dce98ce754", "title": "Debug Utilities for Microgrid Base"}, "505": {"path": "/microgrid_base/debug_utils.py:1-34", "hash": "251f528f75b5f45a5db45229aa365d15", "title": "Debugging, Logging, and Optimization Utilities"}, "506": {"path": "/microgrid_base/debug_utils.py:35-76", "hash": "91396fd191d0470bdc715436d743b516", "title": "Microgrid Solver Checker"}, "507": {"path": "/microgrid_base/debug_utils.py:77-108", "hash": "83d049a61513a4fcf7d2318107dd1acb", "title": "Boundary Checker Function"}, "508": {"path": "/microgrid_base/debug_utils.py:109-148", "hash": "a73a9b4fb3dc496c58e5c8141640160d", "title": "SolverReturnStatus and Word Counter Definition"}, "509": {"path": "/microgrid_base/debug_utils.py:149-182", "hash": "ea99a61d11c06084a6ecdf5e692637dc", "title": "Conflict Resolution Function"}, "510": {"path": "/microgrid_base/debug_utils.py:183-212", "hash": "310a9d38fe1c031d7225218ec98c4872", "title": "Translation Table Generation"}, "511": {"path": "/microgrid_base/debug_utils.py:213-240", "hash": "9ebce6af4e4f41b34b5d63a64aa2f93a", "title": "Exported Model Conversion"}, "512": {"path": "/microgrid_base/debug_utils.py:241-271", "hash": "f3d4b1ad4a7f27f888b1fee8a5aeee53", "title": "Translation Table-Based Text Processing Functions"}, "513": {"path": "/microgrid_base/debug_utils.py:272-301", "hash": "fccee49c8733d860a7b169d4a778e7d4", "title": "File Translation and Solving Function"}, "514": {"path": "/microgrid_base/debug_utils.py:303-339", "hash": "3e491ef2e6d38cef50f4ab167a041fac", "title": "Decompose Expression Function"}, "515": {"path": "/microgrid_base/debug_utils.py:340-377", "hash": "c90b02b0a7d9e4983eadb93d9f5c01b4", "title": "Microgrid Debug Utility Functions"}, "516": {"path": "/microgrid_base/debug_utils.py:378-407", "hash": "f4c069f85dca5e7f47fc11df09883594", "title": "Debugging Microgrid Utilities"}, "517": {"path": "/microgrid_base/debug_utils.py:408-442", "hash": "8d0bb65bfac3887946f67dff2d7725d6", "title": "Sorting Variable Names and Incomplete Function"}, "518": {"path": "/microgrid_base/debug_utils.py:443-476", "hash": "b3280e4f3bedd60e1d0e6d68aa92001e", "title": "Conflict Variable Count Analyzer"}, "519": {"path": "/microgrid_base/debug_utils.py:477-515", "hash": "7cbf4c867b640473f8d16d31f015d00f", "title": "Debugging Utility: Variable Count, Sort and Store"}, "520": {"path": "/microgrid_base/debug_utils.py:516-544", "hash": "9cb56387ca9233b72530e04f67762db1", "title": "Submodel-Based Function Analysis Tool"}, "521": {"path": "/microgrid_base/debug_utils.py:545-572", "hash": "eade23f598f810f2ea796e83ccace56f", "title": "Microgrid Calculation Display\nTitle"}, "522": {"path": "/microgrid_base/debug_utils.py:573-605", "hash": "759d0387c0eb759d01e48dcab8b04294", "title": "Temporary Solver Option Modifier"}, "523": {"path": "/microgrid_base/debug_utils.py:606-635", "hash": "f3eb7ba826959b2f9bd52becbccfc3a3", "title": "Context Manager for Bound Variables"}, "524": {"path": "/microgrid_base/debug_utils.py:638-661", "hash": "5959605ba1b072510817f9c2cdabe909", "title": "Decompose and Analyze Model Solver"}, "525": {"path": "/microgrid_base/debug_utils.py:662-696", "hash": "6273e6c5b62ee38c5392dad7352e3d71", "title": "Checking Infeasibility and Unboundedness"}, "526": {"path": "/microgrid_base/debug_utils.py:698-720", "hash": "7e0e8c29c8da76071135c799382bcb2d", "title": "Optimization Solver Settings"}, "527": {"path": "/microgrid_base/debug_utils.py:721-751", "hash": "38b839b6f362d046a3426183f023628c", "title": "Microgrid Solver Options Customization"}, "528": {"path": "/microgrid_base/debug_utils.py:752-772", "hash": "79b89cef1a9bfdc8b2fcb4a17cfb6f87", "title": "Initializing Null Model for Microgrid Debugging"}, "529": {"path": "/microgrid_base/debug_utils.py:774-800", "hash": "48ce77884c6e4c4b534fc3027e313c2d", "title": "Debug Utils: Deactivate, Solve, and Analyze Objective Expression"}, "530": {"path": "/microgrid_base/debug_utils.py:801-829", "hash": "98a344c92f23e02397e770691ab4f41a", "title": "Decompose, Bound, Solve Model"}, "531": {"path": "/microgrid_base/det_failsafe_reload.sh", "hash": "b0d571fc36cdf1dc8f8197b776ef52d6", "title": "Deterministic Failsafe Mode Initialization"}, "532": {"path": "/microgrid_base/det_synth_mock_reload.sh", "hash": "ab07e4921ab8e9c6774c39b504513d27", "title": "Deterministic Synth Mock Reload Script"}, "533": {"path": "/microgrid_base/device_whitelist.py", "hash": "b6abd3689b7434cda531621a42e73d7f", "title": "Microgrid Device Whitelist"}, "534": {"path": "/microgrid_base/diesel_topo_check.py", "hash": "7f9835c3db408f9fabf2fa0b3874d7db", "title": "Diesel Generator Microgrid Design"}, "535": {"path": "/microgrid_base/diesel_topo_check.py:1-51", "hash": "b5276d77bb7f2feda36ca6f764faae7b", "title": "Data Processing for Diesel Topo Check"}, "536": {"path": "/microgrid_base/diesel_topo_check.py:52-97", "hash": "061cb65e492d748e11650c7503438ec5", "title": "Optimal Diesel Generator Placement for Microgrids"}, "537": {"path": "/microgrid_base/diesel_topo_check.py:98-165", "hash": "2e65afc9d8c8e9984dadb4fcf322dc1c", "title": "Diesel Generator Parameters and Load Object Creation"}, "538": {"path": "/microgrid_base/diesel_topo_check.py:166-204", "hash": "bf6343dd99ff343357fe86c8291ee784", "title": "Diesel Topology Check and EFG Generation"}, "539": {"path": "/microgrid_base/docker_launch.py", "hash": "a81c6b443909b8d776dc63ded2eba9ec", "title": "Docker Management Tool"}, "540": {"path": "/microgrid_base/docker_launch.py:1-40", "hash": "95d10f0a62c63d070e1140efa01593c2", "title": "Docker Image Build Tool"}, "541": {"path": "/microgrid_base/docker_launch.py:41-77", "hash": "e6ba3fada77c80d1ff44208ad31e918c", "title": "Docker Image Details and Build Time"}, "542": {"path": "/microgrid_base/docker_launch.py:78-112", "hash": "5c002eda7c0d29f2a345b63efe59c26f", "title": "Check Latest Docker Image Build Time"}, "543": {"path": "/microgrid_base/docker_launch.py:113-148", "hash": "0af8cb387d75973cb93415894bcb2525", "title": "Docker Container Terminator"}, "544": {"path": "/microgrid_base/docker_launch.py:149-186", "hash": "e609cc95b26dcaf418b203d7edb70a3f", "title": "Docker Container Termination with Configurable Pruning"}, "545": {"path": "/microgrid_base/docker_launch.py:187-211", "hash": "800c409fc710d07009195cbd4929156c", "title": "Docker Image Builder for Microgrid Base"}, "546": {"path": "/microgrid_base/docker_launch.py:212-232", "hash": "bfc4d95db5b36c12719632ea9953bfe3", "title": "Automatic Docker Image Building with Conditional Suffix Arguments"}, "547": {"path": "/microgrid_base/docker_launch.py:233-261", "hash": "ba8c07a533127a4f0cc7d2ba3a2326c6", "title": "Microgrid Docker Image Config & Storage"}, "548": {"path": "/microgrid_base/docker_launch.py:262-286", "hash": "da1ef8e41451e1ae7c15fc3f0d5e9c33", "title": "Ensure Final and Image Tags"}, "549": {"path": "/microgrid_base/docker_launch.py:287-317", "hash": "b9dc01651061dcfddad7252f61938e42", "title": "Docker Image Loader and Scheduler"}, "550": {"path": "/microgrid_base/docker_launch.py:318-346", "hash": "f647ce8bdb36747b09cbbfd640ae628c", "title": "Efficient Docker Server Launcher"}, "551": {"path": "/microgrid_base/docker_launch.py:347-379", "hash": "c9ba8fd756fbad8e6fae585509b9ad21", "title": "Set Log Path, Create Directory, Kill Containers"}, "552": {"path": "/microgrid_base/docker_launch.py:382-405", "hash": "724be594e065f1cae126c761423e0b4f", "title": "Retrieve Latest Image and Version Info"}, "553": {"path": "/microgrid_base/docker_launch.py:406-436", "hash": "a5ad5b087b813765dc4b077d66a9962c", "title": "Docker Image Tagging Functionality"}, "554": {"path": "/microgrid_base/docker_launch.py:437-469", "hash": "fc0c5bd8f5ddd54adf76291296399f52", "title": "Docker Image Builder and Tagging Function"}, "555": {"path": "/microgrid_base/docker_launch.py:470-494", "hash": "550f520872f57bf3bf344b39d4eb66fd", "title": "Recursive Docker Image Updates"}, "556": {"path": "/microgrid_base/docker_launch.py:496-526", "hash": "612d54c07be1a031881785db67d01466", "title": "Automating Docker Image Updates and Tagging"}, "557": {"path": "/microgrid_base/docker_launch.py:527-551", "hash": "6e833e26b7e529477c3e82213066b3f7", "title": "Docker Container Launcher"}, "558": {"path": "/microgrid_base/docker_launch.py:552-572", "hash": "abf69852e1848cc73a6b204fdeef8761", "title": "Docker Container Settings Configuration"}, "559": {"path": "/microgrid_base/docker_launch.py:573-597", "hash": "ffb1e55d62e44cad43bfd276579e37ed", "title": "Docker Container Management System"}, "560": {"path": "/microgrid_base/download_openapi_json.sh", "hash": "51e3031ee70cf619cf365f4032668d9c", "title": "Download OpenAPI JSON Script"}, "561": {"path": "/microgrid_base/dsl_parser/Makefile", "hash": "9eacfa20ba3f26efaabeede4f1719e99", "title": "Test Environment Setup in Makefile"}, "562": {"path": "/microgrid_base/dsl_parser/README.md", "hash": "da32456b0edb24876bb4bdf4de5dd99f", "title": "Microgrid DSL Parser: Unit Conversion and Execution Stacks"}, "563": {"path": "/microgrid_base/dsl_parser/ast_utils.py", "hash": "575f541b586f576ff10e99506fde0182", "title": "Recursive Model Flattening Function"}, "564": {"path": "/microgrid_base/dsl_parser/erglang_test/mytest.er", "hash": "3d12470edf1f43d0ea54ed6b9b59aae4", "title": "Random Number Generation in Python"}, "565": {"path": "/microgrid_base/dsl_parser/erglang_test/sample_external_func.d.er", "hash": "b0e86277fbc25da56af133349529a771", "title": "Sample External Erlang Function"}, "566": {"path": "/microgrid_base/dsl_parser/erglang_test/sample_external_func.py", "hash": "c4d1b3ef506c22b4db08b1269bafcf29", "title": "Lambda Function for Addition"}, "567": {"path": "/microgrid_base/dsl_parser/functional_base.py.j2", "hash": "783facee42b11564bf723fa7d84a0df2", "title": "IES/LES Statement Parser"}, "568": {"path": "/microgrid_base/dsl_parser/functional_base.py.j2:1-36", "hash": "f5b95f5dc258f173303331fec1ff1690", "title": "Functional Base Executor"}, "569": {"path": "/microgrid_base/dsl_parser/functional_base.py.j2:38-44", "hash": "0af8bd2625047b6b08b9ccc820a2dd63", "title": "Iterating TLES, Populating LES"}, "570": {"path": "/microgrid_base/dsl_parser/generate_code.py", "hash": "b937459c1bf4a17038b7a98038309015", "title": "Generate Base Code from Template"}, "571": {"path": "/microgrid_base/dsl_parser/grammar.tx", "hash": "852b94e9a3ea38c0d64067dcdb015ed9", "title": "Microgrid DSL Parser Grammar"}, "572": {"path": "/microgrid_base/dsl_parser/grammar.tx:1-18", "hash": "8b4bc17905e7f7c4591fb564843fcbc3", "title": "Microgrid DSL Grammar Parsing"}, "573": {"path": "/microgrid_base/dsl_parser/grammar.tx:19-45", "hash": "f0e0abdfcc8e781ac40e3b74079d6ff5", "title": "Microgrid Grammar Parser Definition"}, "574": {"path": "/microgrid_base/dsl_parser/grammar.tx:46-46", "hash": "960d6b0b24ba4be7c9403e5bae0b1c3b", "title": "ConstantList_Pair: Tuple of Constant Lists"}, "575": {"path": "/microgrid_base/dsl_parser/lex_yacc.py", "hash": "b56dddc7209952b179978b88df4c44a0", "title": "LexMeta: Lexer Parser Consistency"}, "576": {"path": "/microgrid_base/dsl_parser/lex_yacc.py:1-23", "hash": "f3fd14f0e9c484e78136e944a18a354f", "title": "LexMeta Metaclass for Token Parsing"}, "577": {"path": "/microgrid_base/dsl_parser/lex_yacc.py:26-44", "hash": "da2e80479cd3c9663422fd5265794e50", "title": "Custom Lexer and Parser Implementation"}, "578": {"path": "/microgrid_base/dsl_parser/mylang.ies", "hash": "45ff4a7070c841c097d9df2ddbaa3bd1", "title": "Microgrid Simulation Language: MyLang Features"}, "579": {"path": "/microgrid_base/dsl_parser/mylang.ies:1-30", "hash": "126211e48b23f65e32940bac2653b544", "title": "Variable Types and Constants in Microgrid Model"}, "580": {"path": "/microgrid_base/dsl_parser/mylang.ies:31-52", "hash": "1c9c70349718db639270844a058f5949", "title": "Microgrid Simulation Language Definition"}, "581": {"path": "/microgrid_base/dsl_parser/mylang.ies:52-59", "hash": "4f9f0cbc1aab3d85467c1f6dc63dc5e9", "title": "Binary Variable Operations and Linearization in MyLang"}, "582": {"path": "/microgrid_base/dsl_parser/mylang.ies:59-64", "hash": "974e4891be0fbbbdf6d97e020f7f60ad", "title": "Non-Strict Symbol Initialization and Assertion"}, "583": {"path": "/microgrid_base/dsl_parser/pyomo_reduce_inequalities.py", "hash": "4912024eed1520d621235a8104696436", "title": "Pyomo-CPLEX Model Solver"}, "584": {"path": "/microgrid_base/dsl_parser/pyomo_reduce_inequalities.py:1-30", "hash": "9b051863faf264535f4fda63cb8fc8f3", "title": "Reducing Inequalities with Pyomo"}, "585": {"path": "/microgrid_base/dsl_parser/pyomo_reduce_inequalities.py:31-57", "hash": "224be00c1d96453e3b1ea55b88756ef2", "title": "Pyomo-Reduce Inequalities: Solving with CPLEX"}, "586": {"path": "/microgrid_base/dsl_parser/pyomo_reduce_inequalities.py:58-63", "hash": "dc60d2ab00f6970eae71ad3cf2f05717", "title": "Checks Solver Exit Conditions"}, "587": {"path": "/microgrid_base/dsl_parser/sample.ies", "hash": "266dc250afd11277ddb671fc0b161207", "title": "Chinese Model: \"abcd\" with Constants and List"}, "588": {"path": "/microgrid_base/dsl_parser/suppress_strict_inequalities.py", "hash": "e8eb281805639c2a41cba849fd258c36", "title": "Suppressing Strict Inequalities in Pyomo"}, "589": {"path": "/microgrid_base/dsl_parser/test/test_dsl.py", "hash": "c6eb2a2527a4de3e5552977558737f8e", "title": "DSL Parser Test Framework"}, "590": {"path": "/microgrid_base/dsl_parser/test/test_dsl.py:1-36", "hash": "38de65ed02b3002ba1104a07e0ae0213", "title": "DSL-JSON Parser Test Suite"}, "591": {"path": "/microgrid_base/dsl_parser/test/test_dsl.py:38-75", "hash": "7a8ae724223403b2b9b04acff8964077", "title": "Testing DSL Parser with TextX"}, "592": {"path": "/microgrid_base/dsl_parser/textx_syntax.py", "hash": "84594fcb452fca0c6c5271bd2670c7aa", "title": "TextX Syntax Parser"}, "593": {"path": "/microgrid_base/dsl_parser/yacc_init.py", "hash": "36076b9c898588a7517de37fc47780ba", "title": "Yacc-Based DSL Parser Initiation"}, "594": {"path": "/microgrid_base/dsl_parser/your_model_name.lp", "hash": "f4ea7fc249e2061ab36f389ecdfba7e6", "title": "Pyomo Microgrid Optimization Model"}, "595": {"path": "/microgrid_base/dsl_parser/\u67f4\u6cb9.ies", "hash": "d86808bfd4177ccd1175215b40c7985f", "title": "Fuel Model: Diesel Parameters"}, "596": {"path": "/microgrid_base/enum_class_as_literal_type.py", "hash": "9129af3816106e59c313ae5d640aa3fa", "title": "Enforcing Constants with Enum, Literal, Pydantic"}, "597": {"path": "/microgrid_base/enumerate_possible_states.py", "hash": "66f2b0a3b79004983f98b1739e16b13b", "title": "Generating All Microgrid States"}, "598": {"path": "/microgrid_base/enumerate_possible_states.py:1-33", "hash": "f4d4cb44c1cb5c1ed5354cc4c1904785", "title": "All Combinations of Microgrid States"}, "599": {"path": "/microgrid_base/enumerate_possible_states.py:34-60", "hash": "8eaeee476741c3d4750c73bc54815bf5", "title": "Enumerating Possible Microgrid States"}, "600": {"path": "/microgrid_base/enumerate_possible_states.py:61-67", "hash": "5bd05ad8a24d338f6345c8bb8fc90cd6", "title": "Generating All Possible Microgrid States"}, "601": {"path": "/microgrid_base/export_format_units.py", "hash": "68dd73be8d2f1f35135174384d37bfc7", "title": "Energy Source Classes for Microgrid Simulations"}, "602": {"path": "/microgrid_base/export_format_units.py:1-76", "hash": "95b42e8aa77bed5f87d05b6a9e3b8325", "title": "Microgrid Energy Units Definition"}, "603": {"path": "/microgrid_base/export_format_units.py:77-81", "hash": "3c85d751db1a8251a2268b9e552d15c5", "title": "Units for Microgrid Base Variables"}, "604": {"path": "/microgrid_base/export_format_units.py.j2", "hash": "a1942d8392b42c18e7962fe3263354c6", "title": "Microgrid Device Parameters"}, "605": {"path": "/microgrid_base/export_format_validate.py", "hash": "3888db4f57e1e26e6153f6c9f0f6182b", "title": "Microgrid Simulation Models"}, "606": {"path": "/microgrid_base/export_format_validate.py:1-73", "hash": "0e6fe8151d29876234cab83198b6b719", "title": "Simulated Diesel Class and Utility Functions"}, "607": {"path": "/microgrid_base/export_format_validate.py:74-120", "hash": "f00e4b74a8c46e62e127314564191135", "title": "Microgrid Simulation Results Export"}, "608": {"path": "/microgrid_base/export_format_validate.py:121-184", "hash": "21add40cfdfaf88dd5edd2b74d9d1d97", "title": "PV and Wind Power Simulation Results Classes"}, "609": {"path": "/microgrid_base/export_format_validate.py:185-242", "hash": "871a2aff0f9909b64c51d60ef8b62c6f", "title": "Wind-Diesel Generator Simulation Class"}, "610": {"path": "/microgrid_base/export_format_validate.py:243-268", "hash": "715497a6e54ad70c011c362addcb50a4", "title": "Diesel Generator Simulation Code"}, "611": {"path": "/microgrid_base/export_format_validate.py:269-315", "hash": "4ed97ce605769594ed227436e5561243", "title": "Lithium-ion Battery Simulation Class"}, "612": {"path": "/microgrid_base/export_format_validate.py:316-340", "hash": "b2c98072f937e11044edfde3afbf9b96", "title": "Calculates Mean ReLU from Model's \u7535\u63a5\u53e3, Applies Time Factor"}, "613": {"path": "/microgrid_base/export_format_validate.py:341-387", "hash": "8bfaa3ac2c152dd6e566b6bc5372f506", "title": "Transformer Simulation Results Class"}, "614": {"path": "/microgrid_base/export_format_validate.py:388-434", "hash": "4280835af8cef488de20d30740cfe5bc", "title": "Variable Transformer Simulation Class"}, "615": {"path": "/microgrid_base/export_format_validate.py:435-481", "hash": "9f57c58334d64a7f4f6b2290a8358a26", "title": "Bidirectional Converter Simulation Result Class"}, "616": {"path": "/microgrid_base/export_format_validate.py:482-524", "hash": "745feac1bec7dfb7b0fc42e49c161bb0", "title": "Transmission Line Simulation Validation"}, "617": {"path": "/microgrid_base/export_format_validate.py:525-575", "hash": "565195483f428f392e2ed9c323fd9190", "title": "Hydrogen and Gas Turbine Simulation Classes"}, "618": {"path": "/microgrid_base/export_format_validate.py:576-620", "hash": "66576789b9498b4dd6df3578ef1bc29f", "title": "Gas Turbine Simulation Result"}, "619": {"path": "/microgrid_base/export_format_validate.py:621-677", "hash": "46187bf0ba98b3ec51f443aef9b72a19", "title": "Electrolyzer Simulation Result Class"}, "620": {"path": "/microgrid_base/export_format_validate.py:678-734", "hash": "8e9c5aa29bed82f6803ae68cda97daa9", "title": "Exporting Hydrogen and Renewable Power Curves"}, "621": {"path": "/microgrid_base/export_format_validate.py:735-795", "hash": "d2379f92680da76d73103ab1b41fa615", "title": "Energy Source Power Curve Classes"}, "622": {"path": "/microgrid_base/export_format_validate.py:796-848", "hash": "449a229cad679a5563edc1ccbb9fdfef", "title": "Generating Microgrid Export Curves"}, "623": {"path": "/microgrid_base/export_format_validate.py:849-904", "hash": "51e20dde1dfb3c4dfb5bee30a95c14dd", "title": "Bi-Directional Converter and Line Load Curve Exporter"}, "624": {"path": "/microgrid_base/export_format_validate.py:906-961", "hash": "ac38cadaf62363ce0d7082053adfe64f", "title": "Export and Conversion of Power Curves"}, "625": {"path": "/microgrid_base/export_format_validate.py:962-989", "hash": "a519cae8b722abe9ea8d6cefbeb26faa", "title": "HydrogenLoadCurve Class Definition"}, "626": {"path": "/microgrid_base/export_format_validate.py.j2", "hash": "a23874fa2527e3db24338e407f15477f", "title": "Microgrid Simulation and Planning Scheme Overview"}, "627": {"path": "/microgrid_base/export_format_validate.py.j2:1-46", "hash": "a591abe3dff7acb508ab6933e8208997", "title": "Data Manipulation Functions"}, "628": {"path": "/microgrid_base/export_format_validate.py.j2:47-83", "hash": "d794926b93890544bf702a9ff05fd9f5", "title": "Safe Functions and Macros for Machine Learning"}, "629": {"path": "/microgrid_base/export_format_validate.py.j2:84-118", "hash": "e7ca6d452d2709714bb342df65d11d8d", "title": "Parameter Macro Iteration and Updation"}, "630": {"path": "/microgrid_base/export_format_validate.py.j2:119-146", "hash": "e10ec27be499c87dd1ef35da21d13c23", "title": "Jinja2 Macro for Validated Python Classes"}, "631": {"path": "/microgrid_base/export_format_validate.py.j2:147-160", "hash": "619f2963ab0075a3c273712b2c42bd5a", "title": "Macro Functions for Transformations and Conversions"}, "632": {"path": "/microgrid_base/export_format_validate.py.j2:161-200", "hash": "a92363b7a483c43db41aee47ae5e9164", "title": "Microgrid Simulation Parameter Mapping"}, "633": {"path": "/microgrid_base/export_format_validate.py.j2:201-233", "hash": "4baabe6c48780cd604bc7ab7c6730ec6", "title": "Microgrid Energy Dictionary and Macros"}, "634": {"path": "/microgrid_base/export_format_validate.py.j2:234-260", "hash": "389f85f678440e87c778bb5b84b3289b", "title": "Macro Function for Updating Objects"}, "635": {"path": "/microgrid_base/export_format_validate.py.j2:261-294", "hash": "03271c3365c15dded5ba58060e50da5c", "title": "Iterate, Validate and Update Device Parameters"}, "636": {"path": "/microgrid_base/export_format_validate.py.j2:295-341", "hash": "567668b3fa8470a5153b6624cc012c75", "title": "Energy Source Time Series Generation"}, "637": {"path": "/microgrid_base/export_format_validate.py.j2:342-372", "hash": "67c74b0f59d88bb29b0a8b5276a08b31", "title": "Device Output Curve Exporter"}, "638": {"path": "/microgrid_base/export_format_validate.py.j2:373-377", "hash": "cbef7fdfd6f7686c975d7e939b370635", "title": "For Loop Ended and Code Moved"}, "639": {"path": "/microgrid_base/expr_utils.py", "hash": "7725d5c0408122ee06dcd3ff735797a7", "title": "Efficient Symbolic Evaluation with Regular Expressions"}, "640": {"path": "/microgrid_base/expr_utils.py:1-41", "hash": "295dd1e7c0d2f05132d3f4c95a91d2ed", "title": "Parentheses Pair Finder Function"}, "641": {"path": "/microgrid_base/expr_utils.py:42-77", "hash": "5fb0448e7cd7ab7e0804a7221a65b01c", "title": "RecursionContext for Python Expressions"}, "642": {"path": "/microgrid_base/expr_utils.py:78-116", "hash": "83ef299166ce05d9181fba520f570687", "title": "Subexpression Simplification Function with Regular Expressions"}, "643": {"path": "/microgrid_base/expr_utils.py:117-147", "hash": "8a50244ff3203ca464e673853cca7bf3", "title": "Simplifying Mathematical Expressions with SymPy"}, "644": {"path": "/microgrid_base/expr_utils.py:148-171", "hash": "0a2e7a9919a824090b66e24fbe1a121f", "title": "Expression Evaluation and Logging Utility"}, "645": {"path": "/microgrid_base/expr_utils.py:172-202", "hash": "fe559ad6bbddd801f542e080b8140b93", "title": "Regular Expression to SymPy: Extract, Evaluate, Simplify"}, "646": {"path": "/microgrid_base/expr_utils.py:203-227", "hash": "d6b1d1442f663517329d6d3599c3ab60", "title": "Simplify, Log, and Measure SymPy Expressions"}, "647": {"path": "/microgrid_base/extra_models.py", "hash": "8f4d655c48efb6aff8514658c40b82d8", "title": "Extra Models Integration"}, "648": {"path": "/microgrid_base/failsafe_reload.sh", "hash": "51537c4f7fb0bc744ebb68e22a016211", "title": "Failsafe Microgrid Reload Script"}, "649": {"path": "/microgrid_base/failsafe_synth_mock_reload.sh", "hash": "c1d696891f6b8158fe0ab53a114f0dd6", "title": "Failsafe Synth Mock Reload Script"}, "650": {"path": "/microgrid_base/failsafe_utils.py", "hash": "31618b0fce00d505b32c791c92f1970e", "title": "Microgrid Failsafe Utilities"}, "651": {"path": "/microgrid_base/failsafe_utils.py:1-45", "hash": "16beb83c26bfe56665bcd4be5c2a7be8", "title": "Suppressing Exceptions with MethodRegistry"}, "652": {"path": "/microgrid_base/failsafe_utils.py:46-86", "hash": "6b998d26100527b2c12083dc577c48f0", "title": "Failsafe Utils: FileLogger with MethodRegistry"}, "653": {"path": "/microgrid_base/failsafe_utils.py:87-120", "hash": "382f7a077e2b294a061e58f48103db8f", "title": "Solver Script Execution with Logging"}, "654": {"path": "/microgrid_base/failsafe_utils.py:121-157", "hash": "627f5d8e0416302f6f5a85d030853c9b", "title": "Microgrid Solver Utilities"}, "655": {"path": "/microgrid_base/failsafe_utils.py:158-193", "hash": "a840e666e30fcd0c3ed05b9d9e59097e", "title": "SCIP Solver Output Parser"}, "656": {"path": "/microgrid_base/failsafe_utils.py:194-230", "hash": "e9d81c4c756eb0916950b0a4473e52cf", "title": "Path-Based Directory Switching and CPLEX Solution Loader"}, "657": {"path": "/microgrid_base/failsafe_utils.py:233-263", "hash": "b75d659d1a11d995ebf1910e5f58b16a", "title": "Parse and Load CPLEX Solutions"}, "658": {"path": "/microgrid_base/failsafe_utils.py:264-290", "hash": "9562c33fdafd7865d78bf43b55fd0850", "title": "Linear Programming Solution Generator"}, "659": {"path": "/microgrid_base/failsafe_utils.py:291-321", "hash": "b48da43fcb4e96271a342fe9adbd59e3", "title": "CPLEX LP Solver Script Generation"}, "660": {"path": "/microgrid_base/failsafe_utils.py:322-355", "hash": "ab0c6336d13731cca10a4a99aaff14ed", "title": "Feasible Model Checks with Optimization"}, "661": {"path": "/microgrid_base/failsafe_utils.py:356-395", "hash": "c2f09b3f20ca45e7f93b0e624b7ac03f", "title": "Failsafe SCIP Solver Registration"}, "662": {"path": "/microgrid_base/failsafe_utils.py:396-414", "hash": "892f83921e269de8af10c8ee093bbcfa", "title": "Failsafe Optimization Solver"}, "663": {"path": "/microgrid_base/failsafe_utils.py:415-441", "hash": "8847918ef572992efe14e3a145a84e2e", "title": "Failsafe IPOPT Solver Function"}, "664": {"path": "/microgrid_base/failsafe_utils.py:442-479", "hash": "9f6192cde8dd42da7f0248cdef133262", "title": "Failsafe Solver: Four Methods in Order"}, "665": {"path": "/microgrid_base/failsafe_utils.py:480-500", "hash": "d56973bd09c01b12479b5daf22982827", "title": "Failsafe Utility for Exception Handling"}, "666": {"path": "/microgrid_base/fastapi_celery_functions.py", "hash": "5041269cd1490dfffbc38aa7596c1f7b", "title": "Energy Flow Graph Calculator for Microgrid"}, "667": {"path": "/microgrid_base/fastapi_celery_functions.py:1-33", "hash": "e3871a5c1c7e638192518e4bf64daf14", "title": "Calculate Energy Flow Graph for Microgrid"}, "668": {"path": "/microgrid_base/fastapi_celery_functions.py:35-66", "hash": "ff0e49c3c6113c71622e74cc89383d30", "title": "Calculates Results with Exceptions Handling"}, "669": {"path": "/microgrid_base/fastapi_celery_functions.py:67-68", "hash": "3f14db5c9e5e5dfe5715ff9162bacc79", "title": "Custom Celery Task Ignoring"}, "670": {"path": "/microgrid_base/fastapi_celery_server.py", "hash": "406d00388d78568d66765937c5799da1", "title": "Microgrid Celery Setup and Logging Issues"}, "671": {"path": "/microgrid_base/fastapi_celery_server.py:1-42", "hash": "1792f2b0c23bb10f77384334d9ff3f6f", "title": "Celery Application Setup for Microgrid"}, "672": {"path": "/microgrid_base/fastapi_celery_server.py:44-78", "hash": "c0b7a0a8e021808584a757e147ee23f9", "title": "Custom Logger for Celery with Rotating File Handler"}, "673": {"path": "/microgrid_base/fastapi_celery_server.py:79-109", "hash": "3f82a61618943695e683f3f3c298c161", "title": "Celery Task Function for Energy Flow Calculations"}, "674": {"path": "/microgrid_base/fastapi_celery_server.py:111-120", "hash": "1044e3c971afcb6e554f5500ab8f5d94", "title": "Celery Memory and Time Limit Settings"}, "675": {"path": "/microgrid_base/fastapi_datamodel_template.py", "hash": "24f87d1e8bea58e5a43c3f4e7b3d9e70", "title": "Microgrid Calculation Model and Results"}, "676": {"path": "/microgrid_base/fastapi_datamodel_template.py:1-40", "hash": "37d22722a0c8e718662328ac9de5c1b7", "title": "Curve Class Definition"}, "677": {"path": "/microgrid_base/fastapi_datamodel_template.py:42-76", "hash": "f270b6143e4ca1b3c7d799b209d70e37", "title": "Microgrid Data Model: Classes and Objectives"}, "678": {"path": "/microgrid_base/fastapi_datamodel_template.py:79-111", "hash": "9324c1fcaefe31882e213a95ecc72610", "title": "Single Computation Result Class"}, "679": {"path": "/microgrid_base/fastapi_datamodel_template.py:112-145", "hash": "4999feb8d79b8b01e0965018952c8ce2", "title": "ParetoCurve Class Definition"}, "680": {"path": "/microgrid_base/fastapi_datamodel_template.py:146-177", "hash": "230c2663ded1901f55e2cf3eb215ce73", "title": "CalculationResult Class and EnergyFlowGraph"}, "681": {"path": "/microgrid_base/fastapi_datamodel_template.py:178-208", "hash": "619bf3464b244d87d8f84c1c875dc217", "title": "Graph Class Conversion"}, "682": {"path": "/microgrid_base/fastapi_datamodel_template.py:210-255", "hash": "85a0aea353b4384f85e906b80fd278b9", "title": "Async Calculation Submission Result"}, "683": {"path": "/microgrid_base/fastapi_datamodel_template.py:256-280", "hash": "735896fef1a941d87a9cd2c871337a00", "title": "Calculation State Results Classes"}, "684": {"path": "/microgrid_base/fastapi_server_template.py", "hash": "6f6fd80c3079f43056fb52d006a2a90c", "title": "Microgrid FastAPI Server Template"}, "685": {"path": "/microgrid_base/fastapi_server_template.py:1-45", "hash": "9d9c5485fd23bd7729917d897ae57c45", "title": "FastAPI Microgrid Server Setup"}, "686": {"path": "/microgrid_base/fastapi_server_template.py:46-85", "hash": "1a00af09e5e466c5787a17449288202d", "title": "IES Optimization FastAPI Server Template"}, "687": {"path": "/microgrid_base/fastapi_server_template.py:86-130", "hash": "0f7d3e9cfc1039a33493d01b677ec9d4", "title": "Stale Task Removal Functions"}, "688": {"path": "/microgrid_base/fastapi_server_template.py:133-169", "hash": "a6e6ad911ddd5ff578dd94da2337aa94", "title": "Celery Task Management Functions"}, "689": {"path": "/microgrid_base/fastapi_server_template.py:170-207", "hash": "8914fe8e92dcd62cc796cc64611cf88d", "title": "ORJSON Response Logger"}, "690": {"path": "/microgrid_base/fastapi_server_template.py:208-235", "hash": "52a4c3cc038e3ac44f093e037b40ba6f", "title": "Custom Error Logging Route Handler"}, "691": {"path": "/microgrid_base/fastapi_server_template.py:236-267", "hash": "640ca6e8ef4a09c925ea952ed3b2af4e", "title": "Asynchronous Route with Exception Handling"}, "692": {"path": "/microgrid_base/fastapi_server_template.py:268-294", "hash": "cea46ae98125b66a2d3b533f957f4629", "title": "Energy Flow Graph Calculation ID Generation"}, "693": {"path": "/microgrid_base/fastapi_server_template.py:295-331", "hash": "c59fed1d31a8f25ab00ceffed884ed42", "title": "Calculation State Management in Microgrid Application"}, "694": {"path": "/microgrid_base/fastapi_server_template.py:332-362", "hash": "e54af74668b8e9037e19a7236385c196", "title": "Asynchronous Microgrid Calculation State and Result"}, "695": {"path": "/microgrid_base/fastapi_server_template.py:363-386", "hash": "d71d2dc5ab765653e0e0e2905ed9c828", "title": "Handling Failed Calculations with FAILSAFE Flag"}, "696": {"path": "/microgrid_base/fastapi_server_template.py:387-412", "hash": "03d26a96636c054891ed6935a9d7729c", "title": "Pareto Curve Generation in Microgrid Base"}, "697": {"path": "/microgrid_base/fastapi_server_template.py:415-440", "hash": "fd2bbc875775759baa1e0bd5f06d5379", "title": "Revoke Calculation API Endpoint"}, "698": {"path": "/microgrid_base/fastapi_server_template.py:441-476", "hash": "29c20ba418405ce6cf68e7344dfd9677", "title": "Task Revocation Endpoint"}, "699": {"path": "/microgrid_base/fastapi_terminate_service.sh", "hash": "5bd75cdbbd54376003ad75d1aec22245", "title": "Forcefully Terminate Services with Tmux Kill-Server"}, "700": {"path": "/microgrid_base/fastapi_tmuxp.sh", "hash": "16d7dfccf1fc1c2fe83d5d2cae55ceb3", "title": "Cross-Platform Tmuxp Configuration Loader"}, "701": {"path": "/microgrid_base/fastapi_tmuxp.yml", "hash": "74f4c41d618e7b5765e9fbb04f043111", "title": "FastAPI Dev Environment"}, "702": {"path": "/microgrid_base/financial/financial_calc.py", "hash": "fa9d007a4ba9d87465b1669a26ce9def", "title": "Sympy-based Annuity Factor Calculator"}, "703": {"path": "/microgrid_base/financial/financial_equation_solve.py", "hash": "dff5de87e473f2591046bc2d21acbdaa", "title": "Financial Equation Solver with Sympy"}, "704": {"path": "/microgrid_base/financial/financial_equation_solve.py:1-48", "hash": "4e51643b0af0d266bb2ce2b562f9d7fb", "title": "Sympy-based Financial Equation Solver"}, "705": {"path": "/microgrid_base/financial/financial_equation_solve.py:49-123", "hash": "76edac3b1b8648e2f0f1023b1510740e", "title": "Dynamic Financial Arrays"}, "706": {"path": "/microgrid_base/financial/financial_equation_solve.py:124-145", "hash": "528ad2b7d9e6f6029e77feea4473a2d1", "title": "Equation Solver for Microgrid Financial Analysis"}, "707": {"path": "/microgrid_base/generate_basic_params.sh", "hash": "dfcc90c582dffd4fdab71e03546ff0f4", "title": "Automated Microgrid Parameter Generation Script"}, "708": {"path": "/microgrid_base/generate_makefile.py", "hash": "cdfe6c898470b1d916110957de3170f1", "title": "Generate Makefile from Modules"}, "709": {"path": "/microgrid_base/generate_makefile.py:1-42", "hash": "bc4b22840e04ef29c407034d1d6707bb", "title": "Extracting Python Modules for Makefile Generation"}, "710": {"path": "/microgrid_base/generate_makefile.py:43-64", "hash": "65215ca7b7247593d092a06322f23aba", "title": "Makefile Executor"}, "711": {"path": "/microgrid_base/generate_makefile.py:65-81", "hash": "7223ff867ae9d3de7a0eb28d29219923", "title": "Update Makefile with Required Python Files"}, "712": {"path": "/microgrid_base/generate_microgrid_device_names.py", "hash": "966b84beb97e33ec0daba04468bab7ff", "title": "Generate Microgrid Device Names"}, "713": {"path": "/microgrid_base/get_poly_degree_decompose_expression.py", "hash": "7bcbd896c32551538fab8279de304dc4", "title": "Simplifying Polynomial Expressions in Microgrid Models"}, "714": {"path": "/microgrid_base/heatpump_code_reference/Machine_para_fit2.py", "hash": "1d09824d1da59d43d14d9a5cdb59a502", "title": "Heat Pump Power Prediction Model"}, "715": {"path": "/microgrid_base/heatpump_code_reference/Machine_para_fit2.py:1-31", "hash": "27d019ab2ecc98b579fa2945b15be57b", "title": "Initializing Set_Para_Fit Object and Preparing Data"}, "716": {"path": "/microgrid_base/heatpump_code_reference/Machine_para_fit2.py:32-61", "hash": "944fc6058a06b507200f62afc7f130b9", "title": "Heat Pump Coefficient Fitting"}, "717": {"path": "/microgrid_base/heatpump_code_reference/Machine_para_fit2.py:63-91", "hash": "4b7f070f510ee65d8e62a51f1d1ae244", "title": "Power Correction Coefficients without Rate"}, "718": {"path": "/microgrid_base/heatpump_code_reference/Machine_para_fit2.py:93-116", "hash": "527393de0584e24097a4a8c87c8d16d3", "title": "Heat Pump Polynomial Coefficient Fitting"}, "719": {"path": "/microgrid_base/heatpump_code_reference/Machine_para_fit2.py:117-153", "hash": "f7e20c7faaaa5bfd29b9837f7f8d679b", "title": "Linear Regression for Heat Pump Power Prediction"}, "720": {"path": "/microgrid_base/heatpump_code_reference/Machine_para_fit2.py:153-175", "hash": "78a6c0839997cda2b33d0a43014bfb47", "title": "Normalized COP Predictor for Heat Pumps"}, "721": {"path": "/microgrid_base/heatpump_code_reference/Machine_para_fit2.py:177-179", "hash": "18c0e7b1544da97d6599a0b65b4d98ad", "title": "Incomplete Code Snippet"}, "722": {"path": "/microgrid_base/heatpump_code_reference/SoilSource_new.py", "hash": "def53eba056a58aba5e5e520b8c6e7ef", "title": "Soil Heat Pump Model and Optimization"}, "723": {"path": "/microgrid_base/heatpump_code_reference/SoilSource_new.py:1-50", "hash": "b47e93029046b3fab33e414a1b900367", "title": "SoilSource Class Initialization"}, "724": {"path": "/microgrid_base/heatpump_code_reference/SoilSource_new.py:52-79", "hash": "1be6e9d0dfe718b39507030c94962a7a", "title": "Initializing Heat Pump Model Variables"}, "725": {"path": "/microgrid_base/heatpump_code_reference/SoilSource_new.py:80-115", "hash": "65851f5dd80a38f69c1962064aceb994", "title": "Initializing Variables for Soil Heat Pump Model"}, "726": {"path": "/microgrid_base/heatpump_code_reference/SoilSource_new.py:116-141", "hash": "c18f17aab0d501139c3c95e32451a6de", "title": "Heat Pump Soil Source Class"}, "727": {"path": "/microgrid_base/heatpump_code_reference/SoilSource_new.py:142-162", "hash": "ed3f624eda0c99bbe195d59fc0991e62", "title": "Soil Source Heat Pump Constraints"}, "728": {"path": "/microgrid_base/heatpump_code_reference/SoilSource_new.py:163-187", "hash": "7a35d59d17f1720d0b10e239dd4af174", "title": "Soil Heat Pump Optimization"}, "729": {"path": "/microgrid_base/heatpump_code_reference/SoilSource_new.py:189-215", "hash": "e4661c64f792381b54201434b58431dd", "title": "Logarithmic Heating Sum Calculation"}, "730": {"path": "/microgrid_base/heatpump_code_reference/SoilSource_new.py:216-235", "hash": "4e21b8586c38597f143091a9f65a63bb", "title": "Calculate Heat Pump Average Temperatures"}, "731": {"path": "/microgrid_base/heatpump_code_reference/chained_submodel.py", "hash": "fcc5bd03e24aac381e4feff9f16c0d29", "title": "Chained Submodel Heat Pump Optimization"}, "732": {"path": "/microgrid_base/heatpump_code_reference/chained_submodel.py:1-41", "hash": "96bb5e87dda2486cf5addc43b9bfd9c9", "title": "Chained Submodel with Mutable Parameters"}, "733": {"path": "/microgrid_base/heatpump_code_reference/chained_submodel.py:42-55", "hash": "79f18d73af32d75206304fe617552e08", "title": "Chained Submodel Optimization"}, "734": {"path": "/microgrid_base/heatpump_code_reference/example.py", "hash": "08aecd4b2c0fc04bdabfab39ad92136a", "title": "CPLEX-based MIP Solution for Heat Pump"}, "735": {"path": "/microgrid_base/heatpump_code_reference/example.py:1-39", "hash": "6b97a1919674623892ca96a30c434a23", "title": "MIP Problem Setup with Cplex"}, "736": {"path": "/microgrid_base/heatpump_code_reference/example.py:41-85", "hash": "89ab5753ebfd236a1a931b4af40f2225", "title": "Linear Programming Problem with CPLEX Optimizer"}, "737": {"path": "/microgrid_base/heatpump_code_reference/example.py:86-90", "hash": "a576b778cf40884cfaf67cd765459fcb", "title": "Catching and Printing CplexExceptions"}, "738": {"path": "/microgrid_base/heatpump_code_reference/plot_arr.py", "hash": "9e2d33e6ed07c40306b074db2115e168", "title": "Plot Temperature Data for Heat Pump"}, "739": {"path": "/microgrid_base/heatpump_code_reference/plot_arr.py:1-40", "hash": "1c3513c65fd43f74beeff0eebc582c96", "title": "2D/1D Array Plotting in IGESPlot"}, "740": {"path": "/microgrid_base/heatpump_code_reference/plot_arr.py:41-54", "hash": "2da0de92d07f28c4350fa7ff6720d723", "title": "Plot Temperature Data and Save Figure"}, "741": {"path": "/microgrid_base/heatpump_code_reference/print_profile.py", "hash": "97e671818561e434bfff5117a8d3b735", "title": "Print Profile Stats"}, "742": {"path": "/microgrid_base/heatpump_code_reference/profile_code.py", "hash": "1bfe4e45fa38063d94bc413b0aab6eb3", "title": "Profiling Heat Pump Model Building"}, "743": {"path": "/microgrid_base/heatpump_code_reference/profile_code.py:1-55", "hash": "32c5d3fb205c66c04a1ea8ab79a139f2", "title": "Profiling Model Building Code"}, "744": {"path": "/microgrid_base/heatpump_code_reference/profile_code.py:56-68", "hash": "6a7d20033a9d3bb2ff96a5fe16a59b33", "title": "Profiling Code to 'profile.log'"}, "745": {"path": "/microgrid_base/heatpump_code_reference/pyomo_piecewise_set.py", "hash": "4ca7f4e1ed3262c38445d3c53b5a66bb", "title": "Pyomo Piecewise Objective Function for Heat Pump"}, "746": {"path": "/microgrid_base/heatpump_code_reference/pyomo_piecewise_set.py:1-46", "hash": "7bdeb12b675567a92c886818d1b768a1", "title": "Piecewise Objective Function in Pyomo"}, "747": {"path": "/microgrid_base/heatpump_code_reference/pyomo_piecewise_set.py:47-58", "hash": "99094d5422459df5b2f9e59d584cb912", "title": "Efficient Pyomo Piecewise Set Constraints"}, "748": {"path": "/microgrid_base/heatpump_code_reference/pyomo_piecewise_set_concrete.py", "hash": "c4833f2b65dd0a3f0f06b2eea359648c", "title": "Piecewise Set Definition in Pyomo Concrete Model"}, "749": {"path": "/microgrid_base/heatpump_code_reference/result_processlib.py", "hash": "bc0e7b29445cbef58668468f80df6861", "title": "Value Class: Handles Solution Values of Various Types"}, "750": {"path": "/microgrid_base/heatpump_code_reference/run_profile.cmd", "hash": "f873435090cb02a04edfe9f09eb373af", "title": "Real-Time Conda Environment Script Execution"}, "751": {"path": "/microgrid_base/heatpump_code_reference/self_contained_class_which_trace_the_caller.py", "hash": "1f8263583d6c8f25c78923117fb751af", "title": "Tracing Caller Class Methods"}, "752": {"path": "/microgrid_base/heatpump_code_reference/self_contained_class_which_trace_the_caller.py:1-29", "hash": "6ff56b9f3b52fb3f11e9609e876f45fe", "title": "Self-Tracing Class for Heat Pumps"}, "753": {"path": "/microgrid_base/heatpump_code_reference/self_contained_class_which_trace_the_caller.py:30-77", "hash": "7cc772d202a08ec0a9716a8977bcb826", "title": "Tracing Self-Contained Python Class Caller"}, "754": {"path": "/microgrid_base/heatpump_code_reference/self_contained_class_which_trace_the_caller.py:78-78", "hash": "ad64965e87ce98ec49ff508b90f78feb", "title": "Call Method Triggered"}, "755": {"path": "/microgrid_base/ies_optim.py", "hash": "12d054c65e502222fb038fe26a822b72", "title": "IES Optimization: Logging and Utilities"}, "756": {"path": "/microgrid_base/ies_optim_legacy.py.j2", "hash": "b73dcfacc3c35c67e8d5708c3bf47a54", "title": "Microgrid Optimization Program"}, "757": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1-28", "hash": "bc9eac7badcc8a96f379bc998c971f63", "title": "Microgrid Optimization Legacy Code"}, "758": {"path": "/microgrid_base/ies_optim_legacy.py.j2:29-55", "hash": "d7ed770f9d363d4fc0545149d4d25e24", "title": "Microgrid Optimization Code Snippet"}, "759": {"path": "/microgrid_base/ies_optim_legacy.py.j2:56-89", "hash": "3c2796f6404f76ee9749ad02cacd8875", "title": "Type Checking and Data Conversion Macros"}, "760": {"path": "/microgrid_base/ies_optim_legacy.py.j2:90-117", "hash": "3c44bc7c12436f151f3bbcdfdafd4811", "title": "Microgrid Model Macros and Constraints"}, "761": {"path": "/microgrid_base/ies_optim_legacy.py.j2:118-163", "hash": "20c0f9b4c415e78cced960012f517504", "title": "Energy Pricing Model and Conversion Functions"}, "762": {"path": "/microgrid_base/ies_optim_legacy.py.j2:164-201", "hash": "bf781cbfa243243120b6f95b99ae0686", "title": "Energy Price Converter"}, "763": {"path": "/microgrid_base/ies_optim_legacy.py.j2:202-230", "hash": "01f281352880a18b1356b78afc3153ff", "title": "Monthly and Hourly Pricing Classes"}, "764": {"path": "/microgrid_base/ies_optim_legacy.py.j2:231-261", "hash": "b1ad774eba62a872f3f2be6d25fc4b1a", "title": "Time-of-Day Pricing Model Code"}, "765": {"path": "/microgrid_base/ies_optim_legacy.py.j2:262-289", "hash": "7b689ec31ea002e0ebfdb9c4c0b27422", "title": "Step-wise Electricity Pricing Class"}, "766": {"path": "/microgrid_base/ies_optim_legacy.py.j2:290-315", "hash": "b8df16ea5833b656ecbb787f7836baea", "title": "Microgrid Macro Code Generator"}, "767": {"path": "/microgrid_base/ies_optim_legacy.py.j2:316-353", "hash": "eb5318cc4b6154de676b2f03b748181c", "title": "Unit Conversion Macro for Device Parameters"}, "768": {"path": "/microgrid_base/ies_optim_legacy.py.j2:355-398", "hash": "0b631519397dcba516c9e3fe9126d96d", "title": "Device ID Base Class"}, "769": {"path": "/microgrid_base/ies_optim_legacy.py.j2:399-426", "hash": "6a0bade62a87da7ce6b140dea6d556fb", "title": "DeviceInfo Class and Conversion Method"}, "770": {"path": "/microgrid_base/ies_optim_legacy.py.j2:427-448", "hash": "c13de903ff0668737338c09513df767c", "title": "Logging Warning for None Attribute"}, "771": {"path": "/microgrid_base/ies_optim_legacy.py.j2:449-471", "hash": "6aa3215f1e0ffd5dfaab49ec0c06d7bd", "title": "Conversion Rate Calculator"}, "772": {"path": "/microgrid_base/ies_optim_legacy.py.j2:473-533", "hash": "6a9751b4edd95f4a1cc8c96938c4abb6", "title": "Enumeration Classes and Unit Conversions"}, "773": {"path": "/microgrid_base/ies_optim_legacy.py.j2:534-555", "hash": "adb212e4590655cafaeb545b1cc42d91", "title": "Microgrid Simulation Data Structures"}, "774": {"path": "/microgrid_base/ies_optim_legacy.py.j2:556-582", "hash": "fb8bb2c9f67326f31d6f2d478425a55b", "title": "Load Class Definition and Validation"}, "775": {"path": "/microgrid_base/ies_optim_legacy.py.j2:583-608", "hash": "ad8175f5316bfadf15c0b4bdffe33ca2", "title": "Pricing Models for Electric and Hydrogen Loads"}, "776": {"path": "/microgrid_base/ies_optim_legacy.py.j2:609-631", "hash": "d3e65e07a4a261306008e6a43e686c67", "title": "Device Class Definitions with Pydantic"}, "777": {"path": "/microgrid_base/ies_optim_legacy.py.j2:632-663", "hash": "957834771938d59c672da4db18b8125a", "title": "Renewable Energy Constraints and Pricing"}, "778": {"path": "/microgrid_base/ies_optim_legacy.py.j2:664-677", "hash": "7309356b890acad2b965b530827e6aa6", "title": "Wind and Diesel Generator Fields"}, "779": {"path": "/microgrid_base/ies_optim_legacy.py.j2:678-694", "hash": "15b2372f9bb8d3d48489ed15d138f31d", "title": "Unit Field Configuration in Microgrid Base"}, "780": {"path": "/microgrid_base/ies_optim_legacy.py.j2:695-719", "hash": "fd1c66e3649f18b29e045b529d060a8c", "title": "Percent Field Validator"}, "781": {"path": "/microgrid_base/ies_optim_legacy.py.j2:720-749", "hash": "b674c61ff266c90102f7d6de97680a3b", "title": "Validating RatedPower for Wind Turbines"}, "782": {"path": "/microgrid_base/ies_optim_legacy.py.j2:750-772", "hash": "3dc116ad16f3db5024b96f775953bca4", "title": "Check Rated Power Function"}, "783": {"path": "/microgrid_base/ies_optim_legacy.py.j2:773-811", "hash": "957d9682018ef953aee14cb9bd934779", "title": "Extracting Parentheses with Regex"}, "784": {"path": "/microgrid_base/ies_optim_legacy.py.j2:812-842", "hash": "119d929679b698a30611f29fc9da6c2a", "title": "Decorator-Based Logging and Expression Processing"}, "785": {"path": "/microgrid_base/ies_optim_legacy.py.j2:843-867", "hash": "1c8042ea88784a1b7fa43a39757838ec", "title": "Polynomial Degree Checker"}, "786": {"path": "/microgrid_base/ies_optim_legacy.py.j2:867-881", "hash": "895a27bd1770ab30c779f3c71d505cee", "title": "Setter and Getter Macro"}, "787": {"path": "/microgrid_base/ies_optim_legacy.py.j2:882-914", "hash": "35f8c9ca0cb90506dc35b6248f567785", "title": "Defining Shared and Input Parameters in Optimization Model"}, "788": {"path": "/microgrid_base/ies_optim_legacy.py.j2:915-942", "hash": "3f6eebb3eec16ddf48ad19b31704e59b", "title": "ModelWrapper Class Definition"}, "789": {"path": "/microgrid_base/ies_optim_legacy.py.j2:943-973", "hash": "1f52d194082ba5145a5398f545a275b5", "title": "Methods of Microgrid Class"}, "790": {"path": "/microgrid_base/ies_optim_legacy.py.j2:974-996", "hash": "fb3bee6fa4d05caaf1b0afcd17143e1d", "title": "Polynomial Degree Check and Debugging"}, "791": {"path": "/microgrid_base/ies_optim_legacy.py.j2:997-1020", "hash": "15a20a4941d3b1f3dceb4941e1795e63", "title": "Constraint Handling Class"}, "792": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1021-1042", "hash": "c9f2046565956028666381b08bf9561b", "title": "Object Initialization from Environment Variable"}, "793": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1043-1075", "hash": "97f4f9f5fe3ec64223715ed057144bc5", "title": "Computation Parameters Class"}, "794": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1076-1106", "hash": "888d88d5e12bad84f4974c7fe5cdd32d", "title": "IES Optimization Legacy Code"}, "795": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1107-1151", "hash": "ed7218ced6566c114d60bccc575ae75c", "title": "Microgrid Iteration Settings Class"}, "796": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1153-1200", "hash": "e3eb1aec3d367186a29a264838133a37", "title": "Financial and Simulation Parameters Classes"}, "797": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1202-1236", "hash": "440957eba579c842e6aca091908bff83", "title": "Device Model Initialization and Methods"}, "798": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1237-1263", "hash": "467f948ec1cfeb7155e938ca8bb3477d", "title": "Interpolating 2D Data with Undefined Financial Method"}, "799": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1265-1290", "hash": "3f098eb928562f2e1abd98bfede49a71", "title": "Microgrid Variable Management Code"}, "800": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1291-1314", "hash": "d8c834e7d87c57ebd7b306afe366601b", "title": "Multi-Variable Range Constraint Functions"}, "801": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1315-1336", "hash": "33dc133d37be058a8bfb1070fef72fe0", "title": "Variable Generation Methods"}, "802": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1337-1368", "hash": "15eafaa26eace9f975c68dca82126398", "title": "Microgrid Optimization Constraints"}, "803": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1369-1393", "hash": "a86d1651461d589c573eaea44f7a07fd", "title": "Creating Disjunctions and Piecewise Pairs in Model Functions"}, "804": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1394-1427", "hash": "486555b0d2831cd6c86131e86417440d", "title": "Preprocessing Piecewise Data Function"}, "805": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1428-1461", "hash": "15e5950b38567221ba8e4a3675efb42d", "title": "Creating Piecewise Functions with Performance Overhead"}, "806": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1462-1492", "hash": "8ce2a2fd94fb168ccf7b9d9de18bd279", "title": "Decomposing and Multiplying Linear Expressions"}, "807": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1493-1515", "hash": "9725e92e4af6920a9b2913450c57cf9d", "title": "Binary and Continuous Input Validation"}, "808": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1516-1538", "hash": "4c1f5cfabc2b8cffd606b6daa48474bc", "title": "Microgrid Constraint Function"}, "809": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1540-1558", "hash": "0d77870570f57a913959894e86422f1b", "title": "Continuous Multiplication and Squares Calculation"}, "810": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1559-1586", "hash": "f7e58eec20c053a64f051847ddaec75b", "title": "Optimizing Microgrid Constraints"}, "811": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1587-1609", "hash": "4db6228bce3f628f3dc5d18d626dea46", "title": "Renewable Energy Device Properties"}, "812": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1610-1632", "hash": "1fff6abf64c86c98ed4b41575c4474f4", "title": "Transmission Line Initialization"}, "813": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1633-1653", "hash": "f545fa975c673e90220b61862be58ac1", "title": "Simulated Device Count Calculation"}, "814": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1654-1683", "hash": "7f3c9a93b4fca27e25e4febc018d4a8e", "title": "Legacy Microgrid Optimization Code"}, "815": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1684-1707", "hash": "9b8ff88fbf26251eae9675a788daa481", "title": "Transformer and Transmission Line Power Constraints"}, "816": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1707-1725", "hash": "9651f3309771d6bf3ff22514efbd0743", "title": "Transmission Line Optimization Constraints"}, "817": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1726-1746", "hash": "2c5104ec3bd79d0514f6b23516a89b03", "title": "Setting Variable 'Pr' and Finding Pwire Value"}, "818": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1747-1773", "hash": "968991492c7b4dd91bf63a37cf62ab80", "title": "Assign, Calculate, and Estimate Microgrid Values"}, "819": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1774-1793", "hash": "94b224857966fade3d34ed1f8e69a711", "title": "Optimal Component Count and Performance Restrictions"}, "820": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1794-1817", "hash": "cf773deab8c07d9b8fc6df4225b22785", "title": "Define Variables with Expressions"}, "821": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1819-1841", "hash": "f85688867c6c0485ca6d237f1e83ea94", "title": "Annual Operating Hours Calculator"}, "822": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1842-1862", "hash": "766ab4e689283da4168dcaf9b6cb1d96", "title": "Microgrid Constraints and Cost Calculation"}, "823": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1863-1886", "hash": "d12db1deb192639f2639dcd45c43c2fa", "title": "Sub-model Initialization for Microgrid Generators"}, "824": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1888-1906", "hash": "819f589b0be0606dbbc9266fa662d666", "title": "Microgrid Power Calculation"}, "825": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1908-1934", "hash": "2c9a13d403cc55db7a267cca95087635", "title": "Microgrid Device Initialization"}, "826": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1936-1951", "hash": "92c7a5e2109c7fbaa4f8e091eb5e8ec3", "title": "SOC Calculation with Design Constraints"}, "827": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1953-1981", "hash": "a4ed068ed292dbd0ebfe0e50a63888d9", "title": "Battery System Capacity Calculator"}, "828": {"path": "/microgrid_base/ies_optim_legacy.py.j2:1981-2002", "hash": "83b8125d8d2787248f143ac4d2f5d509", "title": "Microgrid Constraint Generation"}, "829": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2003-2032", "hash": "c31117b105bc817df1649ec05e562599", "title": "Microgrid Device Constraints Checker"}, "830": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2032-2048", "hash": "7630eb762194f3c8e924fe7999126b1d", "title": "Power Curve Calculation for Wind Turbines"}, "831": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2049-2074", "hash": "0d0d95165190dcbcd74f424423671954", "title": "Normalizing Power Values for Machine Types"}, "832": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2076-2088", "hash": "4446fb449a57275b6d159602bfc4c046", "title": "Microgrid Optimization: Disjunctive and Range Constraints"}, "833": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2090-2107", "hash": "b41acb13cc28759a3c70671c0bb54b67", "title": "Delta-Limited Device Power Control"}, "834": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2108-2120", "hash": "36ca0c092c18a229dae052eaed3a0ab9", "title": "Power Constraints in Microgrid Optimization"}, "835": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2121-2139", "hash": "8011f490e2bb5ddf3f4c0435dae5ea29", "title": "Legacy System Constraint Optimization"}, "836": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2140-2163", "hash": "fc4a6d215bc7b7d38bbe1d6a3f21228b", "title": "Transformer and Renewable Energy Device Constraints"}, "837": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2164-2181", "hash": "c7ce2c78dd500f5c1935aa4b3764e49a", "title": "Optimizing Renewable Energy Efficiency"}, "838": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2181-2194", "hash": "864117fd4b12b94669eee9a401171157", "title": "Renewable Energy Constraints and Power Limits"}, "839": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2196-2212", "hash": "c9df2118d3c68cc598842f3be56823ea", "title": "Microgrid Optimization Code"}, "840": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2213-2238", "hash": "6739bb15214291f1a54baf582d9acb6d", "title": "Microgrid Sub-Model Constraints Generation"}, "841": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2239-2257", "hash": "8f56bd0677bfebcc26df7f9deff49d02", "title": "Subgroup Power Constraints"}, "842": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2258-2279", "hash": "e3877698eec7ad75cf24344c4dc9d752", "title": "Microgrid Constraints Setting"}, "843": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2280-2300", "hash": "f7dec07a50a4636b8e93138b7a471575", "title": "Custom Range Constraints for Microgrid"}, "844": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2301-2314", "hash": "a9a1a2bdcfea1ef1932fe062ba11e1e7", "title": "Microgrid Base Constraints"}, "845": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2315-2334", "hash": "65e78b5ff428d14b79427722ed8b4cd3", "title": "Daytime Mode Constraints in Microgrid Optimization"}, "846": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2335-2357", "hash": "23af31a0ad72d137bacc5fc566177cc0", "title": "Microgrid Power Constraints Calculation"}, "847": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2358-2370", "hash": "8a5124f9b210b16c30a36801e3119601", "title": "Power Delta Limit Conditions"}, "848": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2371-2402", "hash": "0fb6aef3017776865ea4a9b20c00e6e3", "title": "Lithium Battery Capacity Calculator"}, "849": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2404-2427", "hash": "a3f0bfc7788dfa700c3c358e989c3349", "title": "Optimizing Legacy Microgrid Devices' Lifespan"}, "850": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2428-2453", "hash": "403e53a07f3394c87624573f8c3671bc", "title": "Dynamic Variables for Device Types"}, "851": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2454-2475", "hash": "1f0ccc342ad3c57e9eede37738f74ea3", "title": "Variable Calculation in Microgrid Base Class"}, "852": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2476-2507", "hash": "414b7d1b74033246416df9e89f7cca92", "title": "Annualized Variable Maintenance Cost Calculator"}, "853": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2508-2535", "hash": "73a9d00d77a07fe7e3b3cb38a418e4f9", "title": "Load Model Class Creation and Error Handling"}, "854": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2536-2570", "hash": "51dc0ab4d7b4815029eddcb0de542a30", "title": "Default Energy Units Initialization"}, "855": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2571-2601", "hash": "ca09e21e862a780a00cbad4b995331e4", "title": "Unit Conversion and Compatibility Checks"}, "856": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2602-2618", "hash": "b02aa4ca779601dc6fab2c437ab874f5", "title": "Load Type Filters and Constraints"}, "857": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2619-2632", "hash": "f6d52c751081821a295135d3aba0f105", "title": "Interruptible Load Constraints"}, "858": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2633-2668", "hash": "5c7d3108cb055251ab2072b6ced1c61e", "title": "Microgrid Device Cost Calculator"}, "859": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2669-2698", "hash": "6ed4624754dc2e80e2b0de63af070641", "title": "Iterating Device Limits with Logger and Error Cleanup"}, "860": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2699-2725", "hash": "f7e086b6327934ebb2239a26c7784214", "title": "Microgrid Device Limit Sum Calculator"}, "861": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2726-2750", "hash": "77bc8213b6adf08631429e78a5438637", "title": "Simulated Results Class Definition"}, "862": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2751-2783", "hash": "303b13276bc9826af76a0ba36447f1e0", "title": "Device Model Protocol Class"}, "863": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2784-2807", "hash": "db135a56c763987efb3bdab8d9d6e28a", "title": "Multilingual Parameter Classes in Microgrid Optimization"}, "864": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2808-2832", "hash": "339c28a783172a4f2be8af462b931e88", "title": "Function for Exporting Planning Results"}, "865": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2833-2852", "hash": "14ae70f93704d28f3e8cdf2a4c5e00bc", "title": "Microgrid Optimization Parameter Updater"}, "866": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2853-2872", "hash": "3ef61223217c4b1602e375bbe0b053a4", "title": "Updating Uninitialized Parameters"}, "867": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2872-2885", "hash": "2c2d4c20dc0de0d23ca2ca61951bfd37", "title": "Defining Export Function"}, "868": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2886-2899", "hash": "59decf0fc83284220df8e847a65ed8f5", "title": "Maintenance and Emissions Calculator"}, "869": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2899-2924", "hash": "b80c378a656d60c88766f9b17c50c5c1", "title": "Unit Conversion Class Loop with Fix Needed"}, "870": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2925-2954", "hash": "ffb648dc7071c1205d20b15851b4355a", "title": "Microgrid Node Classes"}, "871": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2955-2977", "hash": "23a74e04bed6cee3de8d2a36081f5734", "title": "Microgrid Device Classes with Validator"}, "872": {"path": "/microgrid_base/ies_optim_legacy.py.j2:2978-3009", "hash": "d14e99d3fd5509a8f92d1dc50cfdb72a", "title": "Energy Flow Graph Class Definition"}, "873": {"path": "/microgrid_base/ies_optim_legacy.py.j2:3010-3041", "hash": "ee7e034ff0fe8fb7fd9c055900e544e5", "title": "Compute Power Demand Function"}, "874": {"path": "/microgrid_base/ies_optim_legacy.py.j2:3042-3070", "hash": "9cfd1fdaaa29c6900a39ef782aadfd78", "title": "Device Instance Creation and Initialization"}, "875": {"path": "/microgrid_base/ies_optim_legacy.py.j2:3071-3091", "hash": "dd6bc10239a901cb6524cfad7e74927d", "title": "Initializing Adder Error Variables"}, "876": {"path": "/microgrid_base/ies_optim_legacy.py.j2:3092-3111", "hash": "e5704215b899dc0cb4554c0cf608146f", "title": "Optimizing Legacy Microgrid Load Factors"}, "877": {"path": "/microgrid_base/ies_optim_legacy.py.j2:3112-3139", "hash": "7675d74ac72662d6458bb7b778d50a91", "title": "Adder Error Combination and Aggregation"}, "878": {"path": "/microgrid_base/ies_optim_legacy.py.j2:3140-3163", "hash": "d499fe89ab379a9c22a9e806222b780f", "title": "Max Load Power and Energy Calculation"}, "879": {"path": "/microgrid_base/ies_optim_legacy.py.j2:3164-3191", "hash": "f4137078a239875e0ac1351c7f6bc6d1", "title": "Microgrid Financial and Environmental Objectives Calculator"}, "880": {"path": "/microgrid_base/ies_optim_legacy.py.j2:3193-3220", "hash": "f786bf2d77cd964bfa52f6ff454ec678", "title": "Optimizing Microgrid with Financial and Environmental Factors"}, "881": {"path": "/microgrid_base/init.sh", "hash": "5dbb9ee38a170984760fe9d1678c61a5", "title": "Microgrid Environment Setup"}, "882": {"path": "/microgrid_base/init_apt_environ.sh", "hash": "61875888898e960b6915910a98d7c76c", "title": "Apt Package Installer and Update Script"}, "883": {"path": "/microgrid_base/init_docker_launch.sh", "hash": "e792c381698b7aa0e10b80229a097521", "title": "Init Docker Environment"}, "884": {"path": "/microgrid_base/init_solver.sh", "hash": "75c2f1d6cfb5d08674e4adbde9acd69b", "title": "Setting Up Solver Libraries"}, "885": {"path": "/microgrid_base/init_update_conda.sh", "hash": "14deabe34270b53a2b826379a6ff1351", "title": "Init & Update Conda Packages Script"}, "886": {"path": "/microgrid_base/init_update_conda_cplex.sh", "hash": "1e5c4a2a54fd9ab07ea4b88c32733cf9", "title": "Init & Update Conda for CPLEX Microgrid Base"}, "887": {"path": "/microgrid_base/init_update_conda_docplex.sh", "hash": "817476477ca2f388d6009c2c4ff302af", "title": "Install DOCPLEX in Conda"}, "888": {"path": "/microgrid_base/install_cplex.sh", "hash": "66ce90f8aa6064d7885498920f4fcfff", "title": "Cplex Executable Command Execution"}, "889": {"path": "/microgrid_base/install_docker.sh", "hash": "e253f497abddd285267a802d5706fd89", "title": "Install Docker on Ubuntu"}, "890": {"path": "/microgrid_base/jinja_template_model_generator.py", "hash": "fdd5ce9aa8321a8383e22aeed3180159", "title": "Jinja Template Microgrid Code Generator"}, "891": {"path": "/microgrid_base/jinja_template_model_generator.py:1-33", "hash": "38556113782df94e9bb66f59b632f18a", "title": "Microgrid Jinja Template Model Generator"}, "892": {"path": "/microgrid_base/jinja_template_model_generator.py:34-67", "hash": "5e5850d8dce3e00c746df28685357640", "title": "Device Type JSON Parsing and Template Rendering"}, "893": {"path": "/microgrid_base/jinja_template_model_generator.py:68-92", "hash": "d37938558ed06fe43511a24140e572fa", "title": "Microgrid Jinja Template Generator"}, "894": {"path": "/microgrid_base/jinja_template_model_generator.py:94-122", "hash": "1dec89516f538ea0e382aad652bc9960", "title": "Jinja Template Model Generator"}, "895": {"path": "/microgrid_base/jinja_utils.py", "hash": "95ef4d1ca5a5b5bc0302c29580d05a47", "title": "Jinja Utils: Template Tools and Error Handling"}, "896": {"path": "/microgrid_base/jinja_utils.py:1-44", "hash": "0b375fc8fd3d04f42693d9ad82aa1b6c", "title": "Jinja Utils: Type Hint and String Conversion"}, "897": {"path": "/microgrid_base/jinja_utils.py:45-87", "hash": "4bb7a0a113583007c09b1be10e969277", "title": "Jinja Case Converters and Error Handler"}, "898": {"path": "/microgrid_base/jinja_utils.py:88-124", "hash": "5e5c2eee06b149a733774804c303dc06", "title": "Template Rendering and Backup"}, "899": {"path": "/microgrid_base/jinja_utils.py:125-151", "hash": "c26baf63022572b0573131aa52217936", "title": "Formats and Writes to File with Type Checking"}, "900": {"path": "/microgrid_base/jinja_utils.py:152-179", "hash": "0133934fab251029c967979efeb6429f", "title": "Pyright-Based Type Error Checker"}, "901": {"path": "/microgrid_base/jinja_utils.py:180-217", "hash": "4d1126a2e697529b58e3af9648514749", "title": "Jinja2 Template Utilities and Error Checking"}, "902": {"path": "/microgrid_base/jinja_utils.py:218-266", "hash": "939ed383d19242336a7bf58211d9c9c6", "title": "Inject Jinja2 Extra Functions"}, "903": {"path": "/microgrid_base/jinja_utils.py:267-283", "hash": "80bfd30db27ebf85b9b4fa9e3e2332df", "title": "Error-checking Jinja2 Template Loader"}, "904": {"path": "/microgrid_base/json_utils.py", "hash": "8db0f4cc79f0667013ed624e5253e177", "title": "Deep Copy and Update JSON Objects"}, "905": {"path": "/microgrid_base/json_utils.py:1-30", "hash": "99804a8424463593327cd8edf15b1784", "title": "Recursive JSON Traversal and Yielding Keys-Values"}, "906": {"path": "/microgrid_base/json_utils.py:31-66", "hash": "f23e5db3a4565b4dab747370e17e3aed", "title": "JSON Utilities for Manipulation"}, "907": {"path": "/microgrid_base/json_utils.py:67-97", "hash": "cef87963f04edbdd9d31b04cb391286e", "title": "JSON Object Update and Delete Functions"}, "908": {"path": "/microgrid_base/json_utils.py:100-135", "hash": "aa2fe59ed2a71c8bd9d3c9e6e49b4f10", "title": "JSON Utilities: Delete, Convert, Refine"}, "909": {"path": "/microgrid_base/json_utils.py:136-156", "hash": "8fc6201cba9a69701bbeee446100520e", "title": "Deep Copy JSON Apply"}, "910": {"path": "/microgrid_base/lib_parse_params.py", "hash": "43b51e25e4d7d62fbd64c872b440ff10", "title": "Excel Data Parser and Repairer"}, "911": {"path": "/microgrid_base/lib_parse_params.py:1-35", "hash": "756253c95de4c2c61f74c624835ec654", "title": "Excel Repairer for Cross-Platform Compatibility"}, "912": {"path": "/microgrid_base/lib_parse_params.py:36-68", "hash": "4dbfa9cd3fb2ad93ce2b715127a1f6dc", "title": "Excel Data Parsing Functions"}, "913": {"path": "/microgrid_base/lib_parse_params.py:69-104", "hash": "998eab59135debbdc2d7322eecc2c200", "title": "Parse Excel Columns and Create JSON Object"}, "914": {"path": "/microgrid_base/lib_parse_params.py:105-133", "hash": "2e01fe75657416890fb8ddd4d9b7e268", "title": "Iterative Device Data Extraction"}, "915": {"path": "/microgrid_base/lib_parse_params.py:134-153", "hash": "67579243510ee4189e032c83d5243a15", "title": "Microgrid Device Parameter Parsing and Management"}, "916": {"path": "/microgrid_base/lib_parse_params.py:155-182", "hash": "953b7408865c0a51f29c9efb1a9561c1", "title": "Process BCD: Checks and Updates Target JSON"}, "917": {"path": "/microgrid_base/lib_parse_params.py:183-218", "hash": "f56f7f93185ab39eb4f185682e698969", "title": "Excel and CSV Parsers"}, "918": {"path": "/microgrid_base/lib_parse_params.py:219-242", "hash": "aa364a19c1e596a828d78edc99d3934d", "title": "List Row Parsing Algorithm"}, "919": {"path": "/microgrid_base/lib_parse_params.py:243-247", "hash": "95b918bb8686cab8840b82e9a821c321", "title": "Append Second to Data Class Indices"}, "920": {"path": "/microgrid_base/log_infeasible.py", "hash": "99ec0295cdce658c362d6ec144cda793", "title": "Microgrid Log Infeasibility Detection"}, "921": {"path": "/microgrid_base/log_infeasible.py:1-49", "hash": "58f452e679ab47ef0206cc0f0ab20e0c", "title": "Logging Infeasible Constraints in Pyomo Model"}, "922": {"path": "/microgrid_base/log_infeasible.py:50-65", "hash": "36b7db0a142d6aca0d1b50d6ad937e72", "title": "Microgrid Log Infeasibility Detection Code"}, "923": {"path": "/microgrid_base/log_infeasible.sh", "hash": "21397ab5ccff1dc3203cba72eab0b4f1", "title": "Setting CPLEX Path for Optimization"}, "924": {"path": "/microgrid_base/macro_test.j2", "hash": "e315b93e44a6e676404b11c407b1d22d", "title": "Jinja2 Macro Test: Custom Macros and Calls"}, "925": {"path": "/microgrid_base/macro_test.py", "hash": "b8abdb8dc5ca5e939539ec31368ea147", "title": "Microgrid Template Rendering Script"}, "926": {"path": "/microgrid_base/makefile_ninja_pytest_incremental_test/Makefile.j2", "hash": "8a5d199b2829bb552760b303ec5fde98", "title": "Incremental Makefile Jinja Template"}, "927": {"path": "/microgrid_base/makefile_ninja_pytest_incremental_test/construct_ninja_file.py", "hash": "3e039c743e1d8f273dc61b9af9eb2ac1", "title": "Create Ninja File with Writer Class"}, "928": {"path": "/microgrid_base/makefile_ninja_pytest_incremental_test/dodo.py", "hash": "c6a1ce64e154dbfa10cbc29c9c06f128", "title": "Unclear Random Task Definition"}, "929": {"path": "/microgrid_base/makefile_ninja_pytest_incremental_test/generic.py", "hash": "8acfb435ecbba3219610a750e6b650f2", "title": "Flexible Data Types with \"Any\" Type"}, "930": {"path": "/microgrid_base/makefile_ninja_pytest_incremental_test/lfnf.py", "hash": "57e1e5ab82a020b935cd8f78a20943f4", "title": "Incremental Test Failure"}, "931": {"path": "/microgrid_base/makefile_ninja_pytest_incremental_test/mytest.py", "hash": "8008173ba6ca583d8fad1ed5e94c2e09", "title": "Incremental Pytest with Ninja and Protocols"}, "932": {"path": "/microgrid_base/makefile_ninja_pytest_incremental_test/platform_detect_makefile/Makefile", "hash": "2e6225c8077506b1c570abe35941c4cc", "title": "Platform Detection Script for Microgrid Base"}, "933": {"path": "/microgrid_base/makefile_ninja_pytest_incremental_test/test_buffer.py", "hash": "28f5adef0f7d7198e4bc73afed47bf0a", "title": "Infinite Output Loop"}, "934": {"path": "/microgrid_base/makefile_ninja_pytest_incremental_test/type_check.py", "hash": "512887ee64d7bdd8457df5b753f7432a", "title": "Type-Safe Microgrid Base: Incremental Testing"}, "935": {"path": "/microgrid_base/makefile_ninja_pytest_incremental_test/type_check.py:1-52", "hash": "31c089b95a60c07b071b55467356311e", "title": "Type Checking Utilities"}, "936": {"path": "/microgrid_base/makefile_ninja_pytest_incremental_test/type_check.py:53-108", "hash": "790dd4bde3640870db3208da28f2ceb2", "title": "Protocol Classes for Arithmetic Operations"}, "937": {"path": "/microgrid_base/makefile_ninja_pytest_incremental_test/type_check.py:111-175", "hash": "6bfdb87352e90a04eeb36e6275e1d85c", "title": "Type-Checking Function for Input Conversion"}, "938": {"path": "/microgrid_base/makefile_ninja_pytest_incremental_test/typecheck.py", "hash": "f125b135007e843d3557acbe9180edd3", "title": "Type-Checking Functions with Match Statements"}, "939": {"path": "/microgrid_base/metaclass_field_verification.py", "hash": "5b111c5d99a7ee7243afd8564e59de47", "title": "Metaclass-Based Multiplication in MyKlass"}, "940": {"path": "/microgrid_base/metaclass_field_verification.py:1-58", "hash": "c8b0672c75d8e6f66a840ba0ba8b9b06", "title": "Metaclass Field Verification with ABCs"}, "941": {"path": "/microgrid_base/metaclass_field_verification.py:59-102", "hash": "55aa264910b4f3340146e0def895bb4f", "title": "Custom Type Guard for Positive Numbers"}, "942": {"path": "/microgrid_base/metaclass_field_verification.py:103-148", "hash": "9e51116a77c5005970108923a563395e", "title": "Generic Multiplication with mybase and Subclasses"}, "943": {"path": "/microgrid_base/metaclass_field_verification.py:149-189", "hash": "b8314b2ccfdc064bb32b0a725a292883", "title": "Metaclass-Based Field Verification"}, "944": {"path": "/microgrid_base/metaclass_field_verification.py:190-234", "hash": "40a5aec4230fbfc6b4b9d89f020b5492", "title": "Metaclass-Defined Timestamped Attribute in Python"}, "945": {"path": "/microgrid_base/metaclass_field_verification.py:236-239", "hash": "ebc426e557d22750adefcac41cff1d69", "title": "Template Substitution and Logging"}, "946": {"path": "/microgrid_base/microgrid_topo_check.py", "hash": "829ee0a4a9505259b6b9bc7e312d1e25", "title": "Microgrid Topology Check"}, "947": {"path": "/microgrid_base/microgrid_topo_check.py:1-47", "hash": "d469733be8bd70c937ac24cd61a3e473", "title": "Microgrid Topology Checker Setup"}, "948": {"path": "/microgrid_base/microgrid_topo_check.py:48-99", "hash": "5a2c0405012c6197de1802e5cdba7442", "title": "Microgrid Banner Printing Function"}, "949": {"path": "/microgrid_base/microgrid_topo_check.py:100-143", "hash": "22b52a60b5ab9d1e0b04279129f3f03a", "title": "Solar and Wind Generation Data Object Creation"}, "950": {"path": "/microgrid_base/microgrid_topo_check.py:144-198", "hash": "5e39af8b1bd76b17e90e1825fbcbb30b", "title": "Microgrid Topology Check and Power Objects"}, "951": {"path": "/microgrid_base/microgrid_topo_check.py:199-260", "hash": "70c308122bce2da30b8f9da557bb58d5", "title": "Microgrid Topology Generator and Transformers"}, "952": {"path": "/microgrid_base/microgrid_topo_check.py:263-309", "hash": "be64e7183835fcad02a49b2699cb3141", "title": "Optimizing Microgrid Energy Consumption"}, "953": {"path": "/microgrid_base/microgrid_topo_check.py:310-346", "hash": "2889ac7d56ace48d81caf9a30eeb0901", "title": "Microgrid Device Creation Code"}, "954": {"path": "/microgrid_base/microgrid_topo_check.py:347-390", "hash": "53846094e5bb4ca667e8ea25af812882", "title": "Electrolyzer Device Creation and Addition"}, "955": {"path": "/microgrid_base/microgrid_topo_check.py:391-440", "hash": "999fae09fea25e859ddc768f47df123b", "title": "Microgrid Topology Creation with Optimized Transmission Lines"}, "956": {"path": "/microgrid_base/microgrid_topo_check.py:441-492", "hash": "b145752abd085b89080f0b1d56514a17", "title": "Microgrid Component Connections"}, "957": {"path": "/microgrid_base/microgrid_topo_check.py:493-526", "hash": "b689378f8053de42e483600f99ae1b3d", "title": "Microgrid Energy Flow Calculation and Logging"}, "958": {"path": "/microgrid_base/mock_data_test.py", "hash": "f231001e1c404c3503dea3e471f1fe94", "title": "Mock Data Test: Generating Microgrid Instances"}, "959": {"path": "/microgrid_base/mock_data_test.py:1-59", "hash": "62a29ae22c556abe680601cde7175fc8", "title": "Generate Person Instances with Pydantic Factories"}, "960": {"path": "/microgrid_base/mock_data_test.py:60-104", "hash": "e12783968d2110a2f22fceab1081af2e", "title": "PersonFactory with DataclassFactory and Randomization"}, "961": {"path": "/microgrid_base/mock_data_test.py:105-149", "hash": "183a8b0f9ecd25c5449f5ee8582e9a03", "title": "Building EnergyFlowGraph Instances with JSON Input"}, "962": {"path": "/microgrid_base/mock_data_test.py:150-191", "hash": "a718ae8bd2547c57fcb1577902e2afc2", "title": "Random Mock Data Generator for Microgrid Objective Functions"}, "963": {"path": "/microgrid_base/mock_data_test.py:192-220", "hash": "0519278c8770d7e6c79d11d1d110455b", "title": "Device Power Curve Generation"}, "964": {"path": "/microgrid_base/mock_data_test.py:222-245", "hash": "a2acb955d580e98ae5bcce38583cf444", "title": "Creating and Manipulating CalculationResults in Mock Data Test"}, "965": {"path": "/microgrid_base/mock_reload.sh", "hash": "c9a61312d2044487d62de162f5ee881c", "title": "Microgrid Mock Reload Script"}, "966": {"path": "/microgrid_base/mock_utils.py", "hash": "78a94b8f63ec4a76e89cb0066638fe46", "title": "Deterministic Microgrid Mocking Utilities"}, "967": {"path": "/microgrid_base/mock_utils.py:1-50", "hash": "6bedd5e877ca1437b3209f444b3a5f0f", "title": "Mock Algorithm Response Generator"}, "968": {"path": "/microgrid_base/mock_utils.py:51-88", "hash": "30acdf02aa4bbbd818181b987078dcf8", "title": "Precise Input Validation and Reduction"}, "969": {"path": "/microgrid_base/mock_utils.py:91-123", "hash": "24d682133256f9afe801b754e3a0800d", "title": "Mock Utils: Generating Fake Data for Microgrids"}, "970": {"path": "/microgrid_base/mock_utils.py:124-153", "hash": "8f8481391509814184e5e4015563c071", "title": "Generate Test Data for Devices"}, "971": {"path": "/microgrid_base/mock_utils.py:154-190", "hash": "27506ee3e3a14e6e00b4705632700fe5", "title": "Power Curve Data Generator"}, "972": {"path": "/microgrid_base/mock_utils.py:191-227", "hash": "6349339e189afbc622f6e5f1720023b7", "title": "Microgrid Mock Utils: Data Generation and Calculation"}, "973": {"path": "/microgrid_base/mock_utils.py:228-255", "hash": "54a2e510f9bbf35964844bdfa19fcf14", "title": "Deterministic Element Size Calculator"}, "974": {"path": "/microgrid_base/mock_utils.py:257-266", "hash": "783a003666685adbe6ef514d16446a33", "title": "Deterministic EnergyFlowGraph Testing"}, "975": {"path": "/microgrid_base/modify_bashrc_for_mamba.py", "hash": "97bfc53d89dbf9019c185bfebfdf91b6", "title": "Mamba .bashrc Initialize"}, "976": {"path": "/microgrid_base/natural_gas_generator_template.py", "hash": "cc56160aa593c6d42efb7c16d7218a81", "title": "Natural Gas Generator Template Demo"}, "977": {"path": "/microgrid_base/packup_type_system.sh", "hash": "6916937d45d190bbf16fda2c94f977d6", "title": "Type System Archive Creation Script"}, "978": {"path": "/microgrid_base/param_base.py", "hash": "d75fa8949428b171a5b20d4b558d461f", "title": "Microgrid Configuration Processing"}, "979": {"path": "/microgrid_base/param_base.py:1-39", "hash": "a13c984b7f35a782f9fe5d58474bb78f", "title": "Microgrid Configuration Parsing"}, "980": {"path": "/microgrid_base/param_base.py:40-73", "hash": "9fc4a635d18047db83861af59d5a2ef8", "title": "Create Device Interface Set and Connection Type Mapping Table"}, "981": {"path": "/microgrid_base/param_base.py:74-91", "hash": "6aac08239c161977a2d7c8b3eb53eedc", "title": "Param Base: Classify Devices"}, "982": {"path": "/microgrid_base/parse_export_format.py", "hash": "303bd13c23228d0b37a130c3ebf18be3", "title": "Microgrid Base JSON Parser"}, "983": {"path": "/microgrid_base/parse_export_format.py:1-41", "hash": "2e5d3eee24e9bb5dfca00d0ed64b2ced", "title": "Parse Excel, Generate Code, and Output JSON"}, "984": {"path": "/microgrid_base/parse_export_format.py:42-79", "hash": "9a7fcc6824e70da8c405415a0fc09744", "title": "Extracting Sub-Schemas from Design Planning Export Data"}, "985": {"path": "/microgrid_base/parse_export_format.py:80-112", "hash": "a3979f958a196c9ad4ea46713fad380c", "title": "Validate Microgrid Export Format"}, "986": {"path": "/microgrid_base/parse_export_format.py:113-139", "hash": "902bb25b6e73701a4514208746fe889a", "title": "Filter, Process, Replace, Trim Data with Regex"}, "987": {"path": "/microgrid_base/parse_export_format.py:141-181", "hash": "c45ee316498f3916ee49a3afb4ebd4de", "title": "Excel to JSON Converter"}, "988": {"path": "/microgrid_base/parse_export_format.py:182-226", "hash": "04f9de1fd78542522ee6a6b8c7833ae7", "title": "Unit Conversion Script"}, "989": {"path": "/microgrid_base/parse_export_format.py:227-259", "hash": "8992f4b46bd2b4644369c9adb72c86bb", "title": "Microgrid Simulation Result Parser"}, "990": {"path": "/microgrid_base/parse_export_format.py:260-302", "hash": "62dc395ac602d90ada895621748dd75f", "title": "Simulation Device Parameter Mapping"}, "991": {"path": "/microgrid_base/parse_export_format.py:303-336", "hash": "951f97f6a3a2149a1853cc701154e1c8", "title": "Export DataFrame to Excel"}, "992": {"path": "/microgrid_base/parse_export_format.py:337-375", "hash": "a5d7a029749b9771fadb695732561acd", "title": "Simulation Results Parser and Converter"}, "993": {"path": "/microgrid_base/parse_export_format.py:376-379", "hash": "7d8cb6ce8507f665cf61b5e09971035c", "title": "Code Unit Parsing and Formatting"}, "994": {"path": "/microgrid_base/parse_frontend_sim_param_translation.py", "hash": "6bfb007bf7832d24978abfc5ce3e0f90", "title": "Frontend Sim Param Translation Parser"}, "995": {"path": "/microgrid_base/parse_optim_constraints.py", "hash": "5d6f17a53a3920266a4c0d82bcdacb44", "title": "Optimizer Constraints Parser"}, "996": {"path": "/microgrid_base/parse_optim_constraints.py:1-39", "hash": "768fc11bce5b200434c8212ecbe804f2", "title": "Parse and Log Optimization Constraints"}, "997": {"path": "/microgrid_base/parse_optim_constraints.py:40-66", "hash": "114bda3b29574e6afb396a6e44729d8f", "title": "Microgrid Optimizer Constraint Parser"}, "998": {"path": "/microgrid_base/parse_params.py", "hash": "6d93d3d101a52f7bee414cd4f89a509f", "title": "Microgrid File Converter"}, "999": {"path": "/microgrid_base/parse_params.py:1-30", "hash": "b7c6f6afc98666e622b5c847f0b9ff81", "title": "XLSX Parser Configuration"}, "1000": {"path": "/microgrid_base/parse_params.py:31-59", "hash": "513a0faf89bf9b78a2ccda873a152cee", "title": "XLSX Parser Dictionary Creation"}, "1001": {"path": "/microgrid_base/parse_params.py:61-64", "hash": "1d45933d968032c8783780551f74a91d", "title": "CSV to JSON Conversion"}, "1002": {"path": "/microgrid_base/parse_units_and_names.py", "hash": "272631688cb663232033e4fdb3b2c5c9", "title": "Microgrid Unit Parsing and Formatting"}, "1003": {"path": "/microgrid_base/parse_units_and_names.py:1-46", "hash": "75b35e2f0f0f602f9ea0f1bf7dc710f4", "title": "Unit and Parameter Parser"}, "1004": {"path": "/microgrid_base/parse_units_and_names.py:47-89", "hash": "03bdd88ce305badf2b1fc65588d99bb2", "title": "Microgrid Device Parser"}, "1005": {"path": "/microgrid_base/parse_units_and_names.py:92-126", "hash": "dc06c306245a901106cacc0ad710f500", "title": "Excel Flagging for Microgrid Devices"}, "1006": {"path": "/microgrid_base/parse_units_and_names.py:127-179", "hash": "67e6bd5da16bcd710aa1e72a7ab73c30", "title": "Parsing Microgrid Units from JSON"}, "1007": {"path": "/microgrid_base/parse_units_and_names.py:180-212", "hash": "3bacdf693f6bbf12536839045ce88ee9", "title": "Microgrid Unit and Name Definitions"}, "1008": {"path": "/microgrid_base/parse_units_and_names.py:213-235", "hash": "6231823b19891e5b486d0b1641e24384", "title": "Cost and Decay Parameters for Microgrid Components"}, "1009": {"path": "/microgrid_base/parse_units_and_names.py:236-268", "hash": "0f0184d92a285c3f78fe271293ad7337", "title": "Ensuring Acceptable Units: Code Analysis"}, "1010": {"path": "/microgrid_base/parse_units_and_names.py:269-299", "hash": "208e584b794f84a48ab053bdca950cb4", "title": "Convert String Parsing and Exception Handling"}, "1011": {"path": "/microgrid_base/parse_units_and_names.py:300-334", "hash": "78a21935557605273cc1e0ca12d69590", "title": "Unit Translation and Mapping Updater"}, "1012": {"path": "/microgrid_base/parse_units_and_names.py:335-377", "hash": "c5d23fd3fe30e812499768796a768057", "title": "Translate and Populate Microgrid Units"}, "1013": {"path": "/microgrid_base/parse_units_and_names.py:378-405", "hash": "7de85a4adcf132c21bf3379af11aa973", "title": "Unit Conversion and Formatting"}, "1014": {"path": "/microgrid_base/parse_units_and_names.py:408-434", "hash": "5273fbd16a6f5e4b219728db9800a12b", "title": "Iterate and Check Keys in Data Dictionary"}, "1015": {"path": "/microgrid_base/parse_units_and_names.py:435-455", "hash": "0468f9ecbf33941ff54fbdbcbdda0c75", "title": "Dynamic Simulation Parameters Appending"}, "1016": {"path": "/microgrid_base/parse_units_and_names.py:456-476", "hash": "49b53ba435554445528b4ec9e2fe4594", "title": "Interpreting Microgrid Parameters and Units"}, "1017": {"path": "/microgrid_base/parse_units_and_names.py:477-507", "hash": "b2f3f6fab7eb5116afa17a808931c576", "title": "Parsing Units and Names"}, "1018": {"path": "/microgrid_base/parse_units_and_names.py:508-525", "hash": "5eac633f71556bb9566994108ceb587c", "title": "Continuing Loop for Unit Conversion"}, "1019": {"path": "/microgrid_base/parse_units_and_names.py:526-542", "hash": "c25df071e85f641386b3d2e90540a2a8", "title": "Unit Conversion and Compatibility Check"}, "1020": {"path": "/microgrid_base/parse_units_and_names.py:543-563", "hash": "d0e649c81dc6d070a10c8d5a283ebb17", "title": "Unit Compatibility Checker"}, "1021": {"path": "/microgrid_base/parse_units_and_names.py:564-585", "hash": "98f766acd1816ef95cf2717e65ba6147", "title": "Table Formatting for Value Names"}, "1022": {"path": "/microgrid_base/parse_units_and_names.py:586-598", "hash": "ddeb884be05a6ae4ea59d1fcb2c80748", "title": "Unknown Value Exception Handling"}, "1023": {"path": "/microgrid_base/passwords_template.py", "hash": "424f83ef0c6484ee40247c04d1e273a9", "title": "Initializing Redis Passwords"}, "1024": {"path": "/microgrid_base/plot_utils.py", "hash": "030aa9f7f908b459391a6746147706d8", "title": "Visualizing Microgrid Topologies"}, "1025": {"path": "/microgrid_base/plot_utils.py:1-30", "hash": "e4472df0674e69ebe61bb99a4debe424", "title": "Microgrid Topology Parser and Plotter"}, "1026": {"path": "/microgrid_base/plot_utils.py:31-61", "hash": "09c0de817e487271d7d06301428bb9ba", "title": "Microgrid Device Graphing Tool"}, "1027": {"path": "/microgrid_base/plot_utils.py:62-65", "hash": "cfb1b06b1dd0d7445896b8244a92ad43", "title": "Load and Plot Topologies"}, "1028": {"path": "/microgrid_base/prolog_gen.pro.j2", "hash": "7cf033e7affefcb6ff3036785829ef62", "title": "Microgrid Prolog Logic and Entity Management"}, "1029": {"path": "/microgrid_base/prolog_gen.pro.j2:1-36", "hash": "f253a92206130a9f380a7fd336566a05", "title": "Prolog Entities Initialization with CLP(FD)"}, "1030": {"path": "/microgrid_base/prolog_gen.pro.j2:37-72", "hash": "4e704e837b966c2fae2dd5064dd2aa80", "title": "Microgrid System Functions and Logic"}, "1031": {"path": "/microgrid_base/prolog_gen.pro.j2:74-93", "hash": "d41c4b81f43127b7d316e97815b7f2db", "title": "Adder Port Status Analysis"}, "1032": {"path": "/microgrid_base/pyomo_environ.py", "hash": "813232ea703c436808b874428a44fcab", "title": "Disjunctive Model Conversion"}, "1033": {"path": "/microgrid_base/pyomo_patch.py", "hash": "29c35b505a0f2f1491225872817db109", "title": "Strict Inequality Support and Bug Fixes"}, "1034": {"path": "/microgrid_base/pyomo_patch.py:1-42", "hash": "4d2e0e788e95718d7167b20523fb3711", "title": "Pyomo Strict Inequality Compatibility Patch"}, "1035": {"path": "/microgrid_base/pyomo_patch.py:45-68", "hash": "1ab3b4b1ea25e7a526cdf67aa5f03840", "title": "Monkey Patching Write Function for File Handling"}, "1036": {"path": "/microgrid_base/pyomo_patch.py:69-95", "hash": "61503195c11767131b254552c5547d0a", "title": "Pyomo Model File Writer Functionality"}, "1037": {"path": "/microgrid_base/pyomo_patch.py:96-117", "hash": "be9f86b4cb4a7c003a8e1d9bc6400de5", "title": "Imports and Initializes Solutions"}, "1038": {"path": "/microgrid_base/pyomo_patch.py:118-130", "hash": "1208c3ae942668938da39c3b1c88e668", "title": "Customizable File Writing in Pyomo Patch"}, "1039": {"path": "/microgrid_base/pyright_utils.py", "hash": "a8adb39444ae69644229dc7c69c84a4f", "title": "Pyright Utilities for Version Checking and Error Handling"}, "1040": {"path": "/microgrid_base/pyright_utils.py:1-37", "hash": "4b1e9c87adc0f3768650873fe8bbdfd9", "title": "Pyright Version Checker: Monkey-Patched Run Function"}, "1041": {"path": "/microgrid_base/pyright_utils.py:38-67", "hash": "a7e30542d079e14b0c0db7d263f4bc78", "title": "Pyright Cache and Test Utility"}, "1042": {"path": "/microgrid_base/pyright_utils.py:68-77", "hash": "be41ea482b234ceb19bfa969d8d439bf", "title": "Error Checker: Pyright for Undefined Variables"}, "1043": {"path": "/microgrid_base/reduce_demo_data_size.py", "hash": "e3aace0c9da0f75141634b5edde402f2", "title": "Reduce JSON Data Size"}, "1044": {"path": "/microgrid_base/reload.sh", "hash": "a9416b9120f0c0b4e1c5df1fecbdd5d3", "title": "Update and Launch Docker Environment"}, "1045": {"path": "/microgrid_base/render_and_packup_report.py", "hash": "4f60899f2abed7cb73e6ee9855f6c0fe", "title": "Microgrid Report Packer"}, "1046": {"path": "/microgrid_base/render_and_packup_report.py:1-38", "hash": "0b31a30900939ab9da8f469eacc2df19", "title": "Render and Pack Up Report"}, "1047": {"path": "/microgrid_base/render_and_packup_report.py:39-70", "hash": "908d06add9a8b3e70dcade7f91e319aa", "title": "Generates, Renders, and Packages Reports"}, "1048": {"path": "/microgrid_base/render_type_utils.py", "hash": "53ec1c7c6c1a3d69bee828c0cd6333b3", "title": "Microgrid System Classes and Functions"}, "1049": {"path": "/microgrid_base/render_type_utils.py:1-47", "hash": "f241e7070065809b8f9cbd3cd9f3f99e", "title": "Microgrid Base Type Utilities"}, "1050": {"path": "/microgrid_base/render_type_utils.py:48-86", "hash": "656b6e71380f7d0e24afe02d1e4c5769", "title": "Microgrid Component Port Definitions"}, "1051": {"path": "/microgrid_base/render_type_utils.py:87-122", "hash": "7cca3316620cc873fa747e15a8bacac4", "title": "Microgrid Port Connectivity Rules"}, "1052": {"path": "/microgrid_base/render_type_utils.py:123-157", "hash": "6600cc91f963e88867b65fe6657023b0", "title": "Port Rule Utilities"}, "1053": {"path": "/microgrid_base/render_type_utils.py:158-190", "hash": "6cdb705659695bdb94455acb8e4910d3", "title": "Microgrid Rule Manipulation Functions"}, "1054": {"path": "/microgrid_base/render_type_utils.py:191-214", "hash": "bfc33e4cd4c0c8291ce5d87dcdc33c8a", "title": "Dynamic Connectivity Rule Generator"}, "1055": {"path": "/microgrid_base/render_type_utils.py:215-237", "hash": "24a3d5837718e26465b48ab983f0510f", "title": "Microgrid Component Requirement Parser"}, "1056": {"path": "/microgrid_base/render_type_utils.py:238-258", "hash": "5933a2e7b7f123aa057393746082ece7", "title": "Header-Based Connection Enforcement"}, "1057": {"path": "/microgrid_base/render_type_utils.py:259-286", "hash": "3fd29c89b158a76038c1ef6105fadd52", "title": "Render Type Utilities Functions"}, "1058": {"path": "/microgrid_base/render_type_utils.py:288-324", "hash": "b9c0b931f2082f3d820a0f75ecddc3a3", "title": "Microgrid Data Validation and Translation\nTitle within 3 to 7 words: Microgrid Data Processing"}, "1059": {"path": "/microgrid_base/render_type_utils.py:325-348", "hash": "7d48e06764747bc825680425c27bab36", "title": "Device Type Parsing and Extraction"}, "1060": {"path": "/microgrid_base/render_type_utils.py:349-372", "hash": "ec1be9aca8a833bb9bb35d8f2796386a", "title": "Port State Verifier Initialization"}, "1061": {"path": "/microgrid_base/render_type_utils.py:373-397", "hash": "2edfdef69e6974571f03517ffd823dab", "title": "Device Port Verifier Lookup Table"}, "1062": {"path": "/microgrid_base/render_type_utils.py:398-420", "hash": "33d697fd84bf3389a7784d2681c903de", "title": "Generate Microgrid Verifiers"}, "1063": {"path": "/microgrid_base/render_type_utils.py:422-444", "hash": "9d8bc786c0581b1f26aad7925c37d884", "title": "Conjugate Verifier Dictionary Generation"}, "1064": {"path": "/microgrid_base/render_type_utils.py:445-466", "hash": "8b870d85cf9cc3385acf42a94b20c289", "title": "Port Verifiers Dictionary Creation and Update"}, "1065": {"path": "/microgrid_base/render_type_utils.py:467-476", "hash": "547cb661a4e061c8d95dda7221f52665", "title": "Generating Type Utils Banner"}, "1066": {"path": "/microgrid_base/report_template.md.j2", "hash": "6b9b94604bd02e753614d4996831adbd", "title": "Microgrid Report Template"}, "1067": {"path": "/microgrid_base/setup_docker.sh", "hash": "dbb51ba984655a1e53138becfdf859e9", "title": "Install and Configure Docker for Microgrid Base"}, "1068": {"path": "/microgrid_base/shared_datamodels.py", "hash": "3c2a8d71a972dacf8c2750e123eb1308", "title": "Conflict Resolution Parameters"}, "1069": {"path": "/microgrid_base/solve_model.py", "hash": "02ca20c7514d79f14033504ec30d82e5", "title": "Microgrid Model Solver"}, "1070": {"path": "/microgrid_base/solve_model.py:1-35", "hash": "daa1b058f21150fbdfb966ac7661d77c", "title": "Python Program Improvement Notes"}, "1071": {"path": "/microgrid_base/solve_model.py:36-71", "hash": "34a9648f516b5b5a7f151c69a7476bde", "title": "Setting up Simulation Environment"}, "1072": {"path": "/microgrid_base/solve_model.py:72-106", "hash": "9efd10fc7084d73c5061b65b21699cc3", "title": "Formatted DataFrame with Translated Headers"}, "1073": {"path": "/microgrid_base/solve_model.py:107-141", "hash": "7e16aff0ad597a0cfa1edd84b28feba0", "title": "Network Graph Calculation Functions"}, "1074": {"path": "/microgrid_base/solve_model.py:142-180", "hash": "b135dc9b0a2ade050134f0f8cc7666ff", "title": "Solve Model with CPLEX"}, "1075": {"path": "/microgrid_base/solve_model.py:181-201", "hash": "5fdbab4ceccfa8bcbf6d517f83097d22", "title": "Microgrid Solver Options and OOM Prevention"}, "1076": {"path": "/microgrid_base/solve_model.py:202-233", "hash": "c9fe6f5655987d3dc601c5acc51b11fc", "title": "Rescuing Infeasible Models"}, "1077": {"path": "/microgrid_base/solve_model.py:234-278", "hash": "51ca2d915c9d9861853478cdf513e43c", "title": "Solving and Exception Handling in Microgrid Model"}, "1078": {"path": "/microgrid_base/solve_model.py:281-305", "hash": "7b5d06ae57ca8579852072ea2f365f7c", "title": "Analyzing Model Infeasibility and Exporting Parameters"}, "1079": {"path": "/microgrid_base/solve_model.py:306-336", "hash": "0c448ae852ac8179597298fda768d81e", "title": "Solve Model: CPLEX Conflict Check and Translation"}, "1080": {"path": "/microgrid_base/solve_model.py:337-361", "hash": "13102eb88df9ea5000508fbfb196cc07", "title": "Solver Abnormality Checker"}, "1081": {"path": "/microgrid_base/solve_model.py:362-402", "hash": "72624440f19197e9e962d7ed7f78d7e0", "title": "Calculation Structure Initialization"}, "1082": {"path": "/microgrid_base/solve_model.py:403-434", "hash": "9bed1e86db134a5cb62acbeef6d8c405", "title": "Calculate Time Parameter and Compute Model Expressions"}, "1083": {"path": "/microgrid_base/solve_model.py:435-472", "hash": "cf0bef07c1c0531cfb83ebd93b29429f", "title": "Calculates Objectives and Appends Results"}, "1084": {"path": "/microgrid_base/solve_model.py:473-506", "hash": "e36698f6ca7385e6c2abb0e34a516285", "title": "Fetching and Updating Simulation Results"}, "1085": {"path": "/microgrid_base/solve_model.py:507-534", "hash": "f0ca85f2f58d133b8435fb3460f21ed6", "title": "Retrieve and Calculate Device Output Curve"}, "1086": {"path": "/microgrid_base/solve_model.py:535-555", "hash": "c5bfc8e5ab28400115a224bccfc71a61", "title": "Simulation Results Merging and Exporting"}, "1087": {"path": "/microgrid_base/solve_model.py:556-577", "hash": "8e0cda8a13e334b73fff8e8acef7959f", "title": "Microgrid Simulation Data Handler"}, "1088": {"path": "/microgrid_base/solve_model.py:578-599", "hash": "63045dcb7915616f44d4928a2565e47b", "title": "Updating Output Curve Dictionary and DataFrame Manipulation"}, "1089": {"path": "/microgrid_base/solve_model.py:600-625", "hash": "b7fb4dcef69477bf1bbbce283ecfa313", "title": "Microgrid Model Output Generation"}, "1090": {"path": "/microgrid_base/solve_model.py:626-647", "hash": "3a7439abd336ff769fc8c888f397756a", "title": "Generate Plot Data for Devices"}, "1091": {"path": "/microgrid_base/solve_model.py:648-681", "hash": "5c60dde76266e676e3fa5c226e723c70", "title": "Preparing Constraint Ranges from Dual Objective Range"}, "1092": {"path": "/microgrid_base/solve_model.py:682-714", "hash": "8c05076a8c40a734f7ee1d0641f91063", "title": "Constraint Range Setup and Validation"}, "1093": {"path": "/microgrid_base/solve_model.py:715-746", "hash": "cc86c5356860bd15ae7849b9b7a9e9e6", "title": "Optimize Microgrid Calculation Parameters"}, "1094": {"path": "/microgrid_base/solve_model.py:748-769", "hash": "6744a52885cb69127a1b513ccbe8bad9", "title": "Model Compensation and Solution Updating"}, "1095": {"path": "/microgrid_base/solve_model.py:770-806", "hash": "655743f953400b5f4262d3a8a227e9c8", "title": "Solve Model from Calc Param List"}, "1096": {"path": "/microgrid_base/solve_model.py:807-831", "hash": "f2bccf7baa8fbcd2e38ef27b6f068c1d", "title": "Dual Objective Microgrid Model Solver"}, "1097": {"path": "/microgrid_base/solve_model.py:832-855", "hash": "a9b57dea00c927fbd66275b474117926", "title": "Solver Worker End: Economic & Environmental Constraints"}, "1098": {"path": "/microgrid_base/synth_mock_reload.sh", "hash": "e39ea3219f6eaa10ed09c87913b25b26", "title": "Mock Configuration Reload"}, "1099": {"path": "/microgrid_base/test/Makefile", "hash": "67eb936a4153ae8e2fd88825805ac8f1", "title": "Automated Microgrid Testing with Makefile"}, "1100": {"path": "/microgrid_base/test/Makefile:2-35", "hash": "528547bfee6c23b5c9c0eb99ccdbbbf1", "title": "Cross-Platform Microgrid Testing Setup"}, "1101": {"path": "/microgrid_base/test/Makefile:36-57", "hash": "e9d16e6b788f0fd795f15c5f3388783a", "title": "Test Commands for Microgrid Python Scripts"}, "1102": {"path": "/microgrid_base/test/circular_import_a.py", "hash": "8bca31d0f3e7afc9dfd42dc7fb66a20d", "title": "Circular Import A: Variable Printing"}, "1103": {"path": "/microgrid_base/test/circular_import_b.py", "hash": "9363c587e41f75ccb27fe532c5c63850", "title": "Avoiding Circular Imports in Python"}, "1104": {"path": "/microgrid_base/test/common_fixtures.py.j2", "hash": "ca667aee3edb7a095517412dbf90b6dc", "title": "Microgrid Simulation Fixtures Template"}, "1105": {"path": "/microgrid_base/test/common_fixtures.py.j2:1-46", "hash": "a677be281643973b5cd9daec5e1336e8", "title": "Python Fixtures Template: Enhanced Coding Experience"}, "1106": {"path": "/microgrid_base/test/common_fixtures.py.j2:47-82", "hash": "d63625ed29d7b797a5fc415237b70dcc", "title": "Microgrid Random Data Generation"}, "1107": {"path": "/microgrid_base/test/common_fixtures.py.j2:83-96", "hash": "0450143bf65c9a21fbe9e6b543fb27ae", "title": "Microgrid Base Test Fixtures Creation"}, "1108": {"path": "/microgrid_base/test/conic_problem.py", "hash": "3c7477a3e7f9655e41252f0bf975e82f", "title": "Conic Problem Optimization"}, "1109": {"path": "/microgrid_base/test/dev_info_tmp_gen.py", "hash": "16c03b5ffe9fa9f065731db422a87070", "title": "Microgrid Device Info Template Generator"}, "1110": {"path": "/microgrid_base/test/dev_info_tmp_gen.py:1-39", "hash": "fba8e87761d59efaaae9bb28b1047c0c", "title": "Dev Info Temporary Generator"}, "1111": {"path": "/microgrid_base/test/dev_info_tmp_gen.py:40-70", "hash": "81590eabdc8258397af7ab21bea01c44", "title": "Microgrid Device Info Template Generator"}, "1112": {"path": "/microgrid_base/test/dev_info_tmp_gen.py:71-91", "hash": "b17fc7143d103dbdad08d6fa5fb19048", "title": "Template Testing and Data Sorting"}, "1113": {"path": "/microgrid_base/test/generate_test_model.py", "hash": "b0645b289a19b55daba377b522298e12", "title": "Microgrid Base Model Generation"}, "1114": {"path": "/microgrid_base/test/mapping_relationship_in_enum_classes.py", "hash": "a76e121adc30ae674342be34a69bd6d5", "title": "Enum Class Mapping Relationship"}, "1115": {"path": "/microgrid_base/test/read_yaml.py", "hash": "4c9d4e0fa6cc07cc052ba6020a04a9c1", "title": "Loading YAML Safely in Microgrid Base Test"}, "1116": {"path": "/microgrid_base/test/run_test.sh", "hash": "10414c2d85124bd84719f5be4b36e6ea", "title": "Automated CPLEX Test Execution with pytest"}, "1117": {"path": "/microgrid_base/test/runtime_override_stepwise.py", "hash": "123a5bd1d7ef2415224c94737abbe8b1", "title": "Stepwise Source Code Testing with Pydantic"}, "1118": {"path": "/microgrid_base/test/runtime_override_stepwise.py:1-32", "hash": "d9c7995688d30072937870d1bdc8397e", "title": "Stepwise Source Code Manipulation for Testing"}, "1119": {"path": "/microgrid_base/test/runtime_override_stepwise.py:33-76", "hash": "30f3c544e346c31277c8b7b7ab8d73d7", "title": "Iterative Keyword Search Function and Path Class"}, "1120": {"path": "/microgrid_base/test/runtime_override_stepwise.py:78-116", "hash": "b21fc178aa686e9e70c92a290038ae04", "title": "SourceCodeExchange Class Definition"}, "1121": {"path": "/microgrid_base/test/runtime_override_stepwise.py:117-154", "hash": "34f7aaa4de8ba827064753a4d922c17f", "title": "Validating 'funcname' Parameter in Python 3.9+"}, "1122": {"path": "/microgrid_base/test/runtime_override_stepwise.py:155-181", "hash": "a563a26dac48550f73e0f2580417889c", "title": "Stepwise Line Addition for Functions"}, "1123": {"path": "/microgrid_base/test/runtime_override_stepwise.py:182-204", "hash": "ed1076b43f7311262d19f28dbaf0ac44", "title": "Stepwise Runtime Override"}, "1124": {"path": "/microgrid_base/test/runtime_override_stepwise.py:205-232", "hash": "0d971191c9aa8a47c413671a9949d79d", "title": "Stepwise Function Overriding"}, "1125": {"path": "/microgrid_base/test/runtime_override_stepwise.py:233-255", "hash": "098098d6e88daa837b4cfd7781bfa5d2", "title": "Stepwise Function Override with Yield Insertion"}, "1126": {"path": "/microgrid_base/test/runtime_override_stepwise.py:257-290", "hash": "0f0acc48c9e32f716c43038e8b889948", "title": "Function Overwrite with Yields"}, "1127": {"path": "/microgrid_base/test/runtime_override_stepwise.py:291-327", "hash": "1c3f5c4483a16ce1d08a82043471880e", "title": "Add Local and Global Inspectors to Instance"}, "1128": {"path": "/microgrid_base/test/runtime_override_stepwise.py:328-366", "hash": "2513e0b38162cba9a49870c65fff04ec", "title": "Decorator and Scope Analysis"}, "1129": {"path": "/microgrid_base/test/runtime_override_stepwise.py:367-396", "hash": "3a1c6d3842911a3d44d90432ad9a26a2", "title": "Override Decorator Function"}, "1130": {"path": "/microgrid_base/test/runtime_override_stepwise.py:397-426", "hash": "4957c17c95d22182f3c186841b57dc2a", "title": "Runtime Override and Stepwise Execution"}, "1131": {"path": "/microgrid_base/test/runtime_override_stepwise.py:427-441", "hash": "00212ebcb213ac924e79c93d7a878103", "title": "Override and Print Helper Function"}, "1132": {"path": "/microgrid_base/test/test_common_fixtures.py", "hash": "926f8ff5d40dd196a773bdca45bb9f09", "title": "Python Fixture for Pytest Demonstration"}, "1133": {"path": "/microgrid_base/test/test_dict_fallback.py", "hash": "1828bcbe36fda493af99ea33fb5944ce", "title": "Defaultdict Testing: Microgrid Base Dict Fallback"}, "1134": {"path": "/microgrid_base/test/test_export.py.j2", "hash": "d2602f4635dbab30c2697fe6ff1e65c5", "title": "Test and Export Microgrid Devices"}, "1135": {"path": "/microgrid_base/test/test_failsafe.py", "hash": "b1b63271662b3bbc273ad3fff57f9700", "title": "Failsafe Methods Testing in Microgrid_Base"}, "1136": {"path": "/microgrid_base/test/test_failsafe.py:1-41", "hash": "40ffd9a2dca2faeb3d8ed030c3f1f7bc", "title": "Failsafe Mechanism Testing Code"}, "1137": {"path": "/microgrid_base/test/test_failsafe.py:42-72", "hash": "38b27f31ae6c928948593c28da6b09a2", "title": "Infeasible Model Saving and Solver Parameters"}, "1138": {"path": "/microgrid_base/test/test_failsafe.py:73-97", "hash": "58185abd00327006f31dcd518e76d6ec", "title": "Failsafe Method Testing in Microgrid_Base"}, "1139": {"path": "/microgrid_base/test/test_getter_setter_dynamic_property.py", "hash": "5feedf7fad9ecf02b338a4353e88d8e8", "title": "Dynamic Property Setter Caveats"}, "1140": {"path": "/microgrid_base/test/test_model.py.j2", "hash": "b9c851917208fa9436f5aaa2aece8f8a", "title": "Optimizing Renewable Power Models"}, "1141": {"path": "/microgrid_base/test/test_model.py.j2:1-32", "hash": "c1908ec725de83110a4a87e29768ba65", "title": "Import and Define Constants for Pyomo Environment"}, "1142": {"path": "/microgrid_base/test/test_model.py.j2:33-60", "hash": "c7f6a891040b9436885226143850e3bb", "title": "Microgrid Testing Framework"}, "1143": {"path": "/microgrid_base/test/test_model.py.j2:61-86", "hash": "fd71b3f3310c6228376723bb9747cf6a", "title": "Automated Test Model Generation and Solving"}, "1144": {"path": "/microgrid_base/test/test_model.py.j2:87-110", "hash": "9121897a33334e6fb98e6ea51e746365", "title": "Testing Microgrid Solver with BinVarMultiplySingle Model"}, "1145": {"path": "/microgrid_base/test/test_model.py.j2:111-137", "hash": "f324c13f3a5ff19e1f24e994c7457888", "title": "Multi-Variable Optimization with CTDF Library"}, "1146": {"path": "/microgrid_base/test/test_model.py.j2:138-166", "hash": "9efba18beeab73b516ed715b0a3dfea4", "title": "Multi-Variable Model Testing"}, "1147": {"path": "/microgrid_base/test/test_model.py.j2:167-195", "hash": "1499850cff550735a25bffce99fafe2d", "title": "Piecewise Function Testing with CTDF and Numpy"}, "1148": {"path": "/microgrid_base/test/test_model.py.j2:196-222", "hash": "a7dccbef502072168f8b0e9a7a87704c", "title": "Microgrid Model Testing with Diesel Generator"}, "1149": {"path": "/microgrid_base/test/test_model.py.j2:223-244", "hash": "d5f0912db0c8877fac966d62df8434ed", "title": "Parameterized Test for Microgrid_Base Model"}, "1150": {"path": "/microgrid_base/test/test_model.py.j2:245-266", "hash": "92132e6a9268414d68a7429b13753bf4", "title": "Microgrid Device Testing: Gas-Fired CHP Unit Verification"}, "1151": {"path": "/microgrid_base/test/test_model.py.j2:267-286", "hash": "69559a3b15a145a79982088fa59a062f", "title": "Microgrid Model Optimization and Validation"}, "1152": {"path": "/microgrid_base/test/test_model.py.j2:287-324", "hash": "13da355b8f9b867708d0eefa12860c07", "title": "Test Electricity Price Model"}, "1153": {"path": "/microgrid_base/test/test_model.py.j2:325-349", "hash": "559ac52e6125f27e2f1f90e08f0e92ae", "title": "Solar Power Model Parameterized Test"}, "1154": {"path": "/microgrid_base/test/test_model.py.j2:350-368", "hash": "1a2f5b1ef4274bba425596389a3e1753", "title": "Wind Power Model Testing: Maximizing Interface Values"}, "1155": {"path": "/microgrid_base/test/test_model.py.j2:369-391", "hash": "d934b8896a6263fa923abf02052b4faf", "title": "Bidirectional Converter Efficiency Testing"}, "1156": {"path": "/microgrid_base/test/test_model.py.j2:392-412", "hash": "63792501f92cf0ce90428acb7fd0277e", "title": "Testing Transformer and Line Outputs"}, "1157": {"path": "/microgrid_base/test/test_model.py.j2:413-433", "hash": "63a5e351c5ff4fc3e0d04fcc725ea210", "title": "Microgrid Model Testing Code"}, "1158": {"path": "/microgrid_base/test/test_model.py.j2:434-448", "hash": "85f844b39ac5b986f509303b1d96919c", "title": "Lithium-ion Battery Constraint Testing Code"}, "1159": {"path": "/microgrid_base/test/test_model.py.j2:448-465", "hash": "a7be2f53bc2e8e18dda915a789006bdb", "title": "Range-constrained battery capacity verification"}, "1160": {"path": "/microgrid_base/test/test_model.py.j2:465-484", "hash": "d64a68d31004e1f39193ec2c5b135884", "title": "Microgrid Model Assertions and Constraints"}, "1161": {"path": "/microgrid_base/test/test_model.py.j2:485-512", "hash": "84a598c005595fcbc3d39fb3f1480e03", "title": "Testing Electric Interface Variables and Constraints"}, "1162": {"path": "/microgrid_base/test/test_model.py.j2:514-518", "hash": "be8022d3e328d198712d25333ce2cc9a", "title": "Model Assertion Checks"}, "1163": {"path": "/microgrid_base/test/test_model_info.py", "hash": "a44678777a92aa657f2d989a508ae221", "title": "Hydra Config Printing Function"}, "1164": {"path": "/microgrid_base/test/test_pwire_select.py", "hash": "52bdcf47eacc6889f78baf66cd293837", "title": "Max Power Wire Selection"}, "1165": {"path": "/microgrid_base/test/test_setting_calculated_value.py", "hash": "e13192081bd27be8c3576c059722e66d", "title": "Calculated Value Update in BaseModel Test"}, "1166": {"path": "/microgrid_base/test/test_use_fixture.py", "hash": "cbc1d0c1891ef4c3d23c96707e822d52", "title": "Testing Fixture Importation with \"my_fixture\""}, "1167": {"path": "/microgrid_base/test_class.py", "hash": "e2b796341f8743450ae985c75d274a42", "title": "Microgrid Network Analysis and Conversion"}, "1168": {"path": "/microgrid_base/test_class.py:1-58", "hash": "b3fc50ab940e3999a82ce7c9a8c54140", "title": "NetworkX Microgrid Graph Analysis"}, "1169": {"path": "/microgrid_base/test_class.py:60-85", "hash": "e0aa60db78f5bcc195531c229cb9a8a1", "title": "Graph Conversion with NetworkX and Pydantic"}, "1170": {"path": "/microgrid_base/test_json_input_format.py", "hash": "052691ae3e860fca0194116260fc16ac", "title": "JSON Input Format Testing"}, "1171": {"path": "/microgrid_base/test_json_input_format.py:1-39", "hash": "65d940bb804740c60d7529b01c3a4ac4", "title": "Parsing JSON for EnergyFlowGraph"}, "1172": {"path": "/microgrid_base/test_json_input_format.py:40-49", "hash": "e1e16ac952a1af5b0b419afa36a4f18e", "title": "JSON-Friendly Microgrid Topology Testing"}, "1173": {"path": "/microgrid_base/test_neverundefined/template.j2", "hash": "564e205b7956bffcf38c85cad3c3bca2", "title": "Macro Initialization and Call Error"}, "1174": {"path": "/microgrid_base/test_neverundefined/test.py", "hash": "ea0bd357554766ff1bfffd2ed0b49ee6", "title": "Render Banner Template"}, "1175": {"path": "/microgrid_base/test_neverundefined/test_strict.py", "hash": "0dc529057600dbf2d9bea073ed6e4902", "title": "Jinja2 Strict Undefined Rendering"}, "1176": {"path": "/microgrid_base/test_replace_logger.py.j2", "hash": "51546e69ac488c7c34a8ef35b4a27418", "title": "Useless Loggers"}, "1177": {"path": "/microgrid_base/test_replace_logger_no_template.py", "hash": "c8e11eaed8ceddeaa3df622d73b4f995", "title": "Unused Variables and Duplicate Logs"}, "1178": {"path": "/microgrid_base/test_topo_check.py", "hash": "fa896daa71a138ca2cc272c95a8fa278", "title": "Microgrid Simulation and Constraint Checking"}, "1179": {"path": "/microgrid_base/test_topo_check.py:1-48", "hash": "231c17d8172923554e84989e802db74c", "title": "Python: Print Data with Banner and Algorithm Setup"}, "1180": {"path": "/microgrid_base/test_topo_check.py:49-100", "hash": "b61411d08ff8c2014045f83035b7dcd8", "title": "Microgrid Topology Creation and Device Parameters"}, "1181": {"path": "/microgrid_base/test_topo_check.py:101-151", "hash": "9bddfbcda39d7b05ded9fcf157e38a8c", "title": "Microgrid Topology Checker"}, "1182": {"path": "/microgrid_base/test_topo_check.py:152-195", "hash": "d9e6ad01cf1553127776b8429bcb4154", "title": "Microgrid Device and Component Parameters"}, "1183": {"path": "/microgrid_base/test_topo_check.py:196-241", "hash": "8835f510b4bbd0b17f0f15ff4c56d7e4", "title": "Microgrid System Topology Definition"}, "1184": {"path": "/microgrid_base/test_topo_check.py:243-285", "hash": "af5416e5934d897b1fb54da9b84d34ab", "title": "Topology Consistency Check"}, "1185": {"path": "/microgrid_base/test_topo_check.py:287-321", "hash": "1e35f5180cd5b195cc40558abe8125de", "title": "Test Topo Check: Dictionary Load and Model Modification"}, "1186": {"path": "/microgrid_base/test_topo_check.py:322-352", "hash": "3108bbaa4201a8cace69e28049f21669", "title": "JSON Comparison and Result Logger"}, "1187": {"path": "/microgrid_base/test_topo_check.py:353-363", "hash": "55f1216b5b24d19105e14246b6ad55ff", "title": "Topology Check and Data Logging"}, "1188": {"path": "/microgrid_base/test_wrapper.py", "hash": "068880521e2c96f705e2032c09b77d55", "title": "Celery Worker Resource Constraints Test"}, "1189": {"path": "/microgrid_base/test_wrapper.py:1-45", "hash": "1cd01c7461ef55649cfe19571b73bd76", "title": "Celery Task Error Handling"}, "1190": {"path": "/microgrid_base/test_wrapper.py:46-50", "hash": "dca0daa922a8aa984045bc5ee579332f", "title": "Resource-Constrained Worker Process Initiation"}, "1191": {"path": "/microgrid_base/test_wrapper_celery.py", "hash": "8084f88a8d25303d6dd832be6a0f6fc0", "title": "Monitoring Celery Task Progress"}, "1192": {"path": "/microgrid_base/topo_check.py", "hash": "48ee292e8c978f859b047d9ae71d5aa5", "title": "Microgrid Base Topology Checker"}, "1193": {"path": "/microgrid_base/topo_check_v1.py.j2", "hash": "5acf7a3b5de8531d262ed771ea1e4eb2", "title": "Microgrid Network Validation"}, "1194": {"path": "/microgrid_base/topo_check_v1.py.j2:1-41", "hash": "b10d2b00ce7b25d1734a5f50afde5af9", "title": "Setting Up Microgrid Objects and Iterators"}, "1195": {"path": "/microgrid_base/topo_check_v1.py.j2:43-69", "hash": "9f6b0be06863c18d71e6cfb2bc6cca32", "title": "Topology Graph Initialization and Node Handling"}, "1196": {"path": "/microgrid_base/topo_check_v1.py.j2:71-95", "hash": "bcb86921bdf76633feebb85390a97d34", "title": "Network Device and Adder Functions"}, "1197": {"path": "/microgrid_base/topo_check_v1.py.j2:96-119", "hash": "9ed1b67e71e60877abf7fa8bd36d56a3", "title": "Network Topology Anchor-Mother Line Checker"}, "1198": {"path": "/microgrid_base/topo_check_v1.py.j2:120-143", "hash": "3bbcbe2f0ffb9f2db23ca1e40f1635cb", "title": "Microgrid Network Consistency Check"}, "1199": {"path": "/microgrid_base/topo_check_v1.py.j2:144-158", "hash": "4d30a75442232f64a8bf7ad419fbddaa", "title": "Node Subtype Validation and Connection Check"}, "1200": {"path": "/microgrid_base/topo_check_v1.py.j2:158-174", "hash": "2abce0150548edd08e8fbcb47875f7da", "title": "Neighbor Check and Verification"}, "1201": {"path": "/microgrid_base/topo_check_v1.py.j2:175-192", "hash": "59b70df97e9593a3e3e8abd3337aa7b4", "title": "Microgrid Node Topology Checker"}, "1202": {"path": "/microgrid_base/topo_check_v1.py.j2:193-212", "hash": "fda025afebb9fb6bc59503a1e7e69ac8", "title": "Bus ID Processing and Connection Check"}, "1203": {"path": "/microgrid_base/topo_check_v1.py.j2:213-236", "hash": "e8e61e82d53725c809257c5d10add082", "title": "Motherline Connection Validation"}, "1204": {"path": "/microgrid_base/topo_check_v1.py.j2:237-273", "hash": "c6f2196fe5734eb8f204b7445b1673a4", "title": "Topology Graph Classes and Creation"}, "1205": {"path": "/microgrid_base/topo_check_v1.py.j2:274-293", "hash": "c6ffd6a191f6539278b81f6e417e0962", "title": "Adding Port Connection Node to Topology"}, "1206": {"path": "/microgrid_base/topo_check_v1.py.j2:294-317", "hash": "eb0a67cb3d2405827725d5ee1f7437a4", "title": "Microgrid Topology Checker V1"}, "1207": {"path": "/microgrid_base/topo_check_v2.py.j2", "hash": "26995b8c0d719303457f640cb4d7d7bf", "title": "Microgrid Network Analysis Code"}, "1208": {"path": "/microgrid_base/topo_check_v2.py.j2:1-49", "hash": "66f3ccf0963f95ef209be824b31c25a2", "title": "Topology Check for Microgrids"}, "1209": {"path": "/microgrid_base/topo_check_v2.py.j2:51-76", "hash": "a9d44a2d837cb056073153294a9fd255", "title": "Microgrid Topology Parsing and Update Functions"}, "1210": {"path": "/microgrid_base/topo_check_v2.py.j2:78-105", "hash": "46df30be1201719f861d16a9a5ab7b59", "title": "Topology Graph Class in Microgrid Base"}, "1211": {"path": "/microgrid_base/topo_check_v2.py.j2:106-130", "hash": "66b6425c80df79b1f0e62a639c315002", "title": "Microgrid Topology Checking Functions"}, "1212": {"path": "/microgrid_base/topo_check_v2.py.j2:131-154", "hash": "d3f97199a7367d2c0aa2da406b47ee1d", "title": "Checking and Creating Adders in Topology"}, "1213": {"path": "/microgrid_base/topo_check_v2.py.j2:156-188", "hash": "4adef3c7ef6277b14aae21731c2e1d65", "title": "Microgrid Network Analysis Class"}, "1214": {"path": "/microgrid_base/topo_check_v2.py.j2:190-217", "hash": "47f9caf90ca5fd253a125aa566c6ee7b", "title": "Node Type and Subtype Checking"}, "1215": {"path": "/microgrid_base/topo_check_v2.py.j2:218-235", "hash": "c0e7051798ac18e14abbe9bb5494c334", "title": "Network Node Topology Checker"}, "1216": {"path": "/microgrid_base/topo_check_v2.py.j2:236-260", "hash": "41cf1a39e0d8be0f1804c7aa6ab412b0", "title": "Validating Network Node Connectivity"}, "1217": {"path": "/microgrid_base/topo_check_v2.py.j2:261-285", "hash": "cb809b65baaaccbe89f6f58e8ef23512", "title": "Unknown Node Exception Handling"}, "1218": {"path": "/microgrid_base/topo_check_v2.py.j2:286-314", "hash": "b0ddec2f8343d86b6ff24a24e6c483a6", "title": "Subgraph Consistency Check"}, "1219": {"path": "/microgrid_base/topo_check_v2.py.j2:315-354", "hash": "d16dc2f2cfafe881c8d74a47bf105d7f", "title": "Topology Class and Node Extensions"}, "1220": {"path": "/microgrid_base/topo_check_v2.py.j2:355-382", "hash": "9d563e4f0e0b2ba254fc6d58013b607e", "title": "Defining Anchor and Connection Nodes in Microgrid Topology"}, "1221": {"path": "/microgrid_base/topo_check_v2.py.j2:384-411", "hash": "b8e94f21db8609e69ab6e23b3a2f4ba1", "title": "Device Instantiation with Topology Graph"}, "1222": {"path": "/microgrid_base/type_def.py", "hash": "0930bb15efb732d3bd35a050efdc3c0b", "title": "Type Resolution in Microgrid Base"}, "1223": {"path": "/microgrid_base/type_def.py:1-62", "hash": "cd39755fb20f6d0bd065ed335e533963", "title": "Energy, Water, Refrigerant Types with Error Checks"}, "1224": {"path": "/microgrid_base/type_def.py:63-100", "hash": "4a591efc73ea71f1139d62178fa83e24", "title": "Basic Type Resolution Algorithm"}, "1225": {"path": "/microgrid_base/type_system.md", "hash": "55603005477430e5c8a231f085fabac3", "title": "Microgrid Device Type System"}, "1226": {"path": "/microgrid_base/type_system.md:1-53", "hash": "97bf3ab8628535403acb0da308d13acb", "title": "Microgrid Type System Guidelines"}, "1227": {"path": "/microgrid_base/type_system.md:55-63", "hash": "1f195bb8bbea16d9b88b53c7511cc296", "title": "Topology Device Mapping and Connection Relationships"}, "1228": {"path": "/microgrid_base/type_system.py", "hash": "a83120f04daa51f36816d14480f15c43", "title": "Microgrid Type System Management"}, "1229": {"path": "/microgrid_base/type_system.py:1-58", "hash": "a07c9e7279808832496bfb8895de6667", "title": "Type System Management in Microgrid Python Code"}, "1230": {"path": "/microgrid_base/type_system.py:61-105", "hash": "3f6446a5345b76a2a5db3befd29588d8", "title": "Triplet Connection Mapping and Matrix Generation"}, "1231": {"path": "/microgrid_base/type_system.py:106-141", "hash": "d5e62e3d6aec7c9b61a965492098165c", "title": "Microgrid Type System: Supertype Management"}, "1232": {"path": "/microgrid_base/type_system.py:142-173", "hash": "66b0b038c70c3b6a90bca8bf7310cf6d", "title": "Duplicate Type Checker"}, "1233": {"path": "/microgrid_base/type_system.py:175-208", "hash": "656a075a47eb19762d53cd50161aab83", "title": "Triplet Transformation in Microgrid Type System"}, "1234": {"path": "/microgrid_base/type_system.py:209-245", "hash": "5b4a57cbd691b18ba9bd711a09c654e8", "title": "Microgrid Type System Update and Logging"}, "1235": {"path": "/microgrid_base/type_system.py:246-285", "hash": "7f1207c2757a3a31b76f5335d8e84904", "title": "CSV Column Adjustment Code"}, "1236": {"path": "/microgrid_base/type_system.py:287-334", "hash": "ebba3429dff646fe8ec1aaa5729b68ae", "title": "Mapping Devices to Port Types"}, "1237": {"path": "/microgrid_base/type_system.py:335-362", "hash": "3c054dd399f38cd58fbd6550191d9cfc", "title": "Populate Device Port Dictionary"}, "1238": {"path": "/microgrid_base/type_system.py:363-386", "hash": "daac41b5a3c5e93bc60164b29440d6dd", "title": "Port Type Mapping and Exception Handling"}, "1239": {"path": "/microgrid_base/type_system.py:387-413", "hash": "6107be1777d2c9c769bdc93d7dc0a0f6", "title": "Port Type Mapping Verification"}, "1240": {"path": "/microgrid_base/type_system.py:414-454", "hash": "7609a66a2a9c90c157c9fb9f4dfe3eda", "title": "Unique Type Identifiers in Microgrid Network"}, "1241": {"path": "/microgrid_base/type_system.py:455-488", "hash": "a15d4b15328531e44b7d0b69d6c78031", "title": "Plotting Graphs with Matplotlib"}, "1242": {"path": "/microgrid_base/type_system.py:490-529", "hash": "21be65246c69947ca1ebf5a2f5a796c8", "title": "Mapping Device Connectivity in Microgrids"}, "1243": {"path": "/microgrid_base/type_system.py:531-532", "hash": "430c1580efb5cbf37db7871267ee3e83", "title": "Device Connectivity Matrix Graph Generator"}, "1244": {"path": "/microgrid_base/type_system_v2.py", "hash": "b91b9971678a04f8e894704da8158a0d", "title": "Microgrid System Management"}, "1245": {"path": "/microgrid_base/type_system_v2.py:1-47", "hash": "0815c6460de330c5312af14a3985c358", "title": "IES Topology System Visualizer & JSON Generator"}, "1246": {"path": "/microgrid_base/type_system_v2.py:48-81", "hash": "5e767525e9f653c2c718e0c28779c1c6", "title": "Type System Validation and Naming"}, "1247": {"path": "/microgrid_base/type_system_v2.py:83-124", "hash": "402ac30d5cc9f680158ae39ba176ab88", "title": "Prefix/Suffix Checker Classes"}, "1248": {"path": "/microgrid_base/type_system_v2.py:125-190", "hash": "d9c15176f45cc8a579a60a799ecb266e", "title": "Microgrid Type System: Dictionary Connections"}, "1249": {"path": "/microgrid_base/type_system_v2.py:192-231", "hash": "bb04be1e43458034782b1570efcf720c", "title": "Triplet Combinations with Supertype"}, "1250": {"path": "/microgrid_base/type_system_v2.py:232-262", "hash": "7b45dc2f25ed1b7e9688cc424130cc5a", "title": "Handling Duplicates and Type Prefixes"}, "1251": {"path": "/microgrid_base/type_system_v2.py:263-295", "hash": "7a36dc18fa520fe84a3512900a610a3c", "title": "Microgrid Triplet Config Management"}, "1252": {"path": "/microgrid_base/type_system_v2.py:296-328", "hash": "b291b3108f129b5c549a61c0addfb03b", "title": "Wire Type Connectivity and Dictionary Management"}, "1253": {"path": "/microgrid_base/type_system_v2.py:330-357", "hash": "15db10ecafac048879fb3f398e0b7837", "title": "Wire Handling in Type System Update"}, "1254": {"path": "/microgrid_base/type_system_v2.py:358-399", "hash": "7216e46100cc4a08a6da77d14804f0ad", "title": "JSON to CSV Adjustment Algorithm"}, "1255": {"path": "/microgrid_base/type_system_v2.py:400-444", "hash": "9d39bc63b442d70add529209e2a5b16c", "title": "Combining Device Port Types in Microgrid Base"}, "1256": {"path": "/microgrid_base/type_system_v2.py:445-478", "hash": "ed67347a44d8982197bbf278ff6bb73b", "title": "Update Device Port Type Mapping"}, "1257": {"path": "/microgrid_base/type_system_v2.py:479-502", "hash": "77ecf2fd0bb82d9c7739f64deb90619e", "title": "Check and Update Device Dictionary"}, "1258": {"path": "/microgrid_base/type_system_v2.py:503-535", "hash": "1b6d642996fb8af0933cdccd537463df", "title": "Multi-Step Type System Processing"}, "1259": {"path": "/microgrid_base/type_system_v2.py:536-569", "hash": "34de51e4d31960baf8368bc4639cb48c", "title": "Microgrid Type System Verification"}, "1260": {"path": "/microgrid_base/type_system_v2.py:570-608", "hash": "ee746440c2a625225d154da5e7f50c6a", "title": "Graph Manipulation for Network Connectivity"}, "1261": {"path": "/microgrid_base/type_system_v2.py:608-645", "hash": "07f6cdda215d73851503af56aa58ab41", "title": "Plotting NetworkX Graphs with Custom Options"}, "1262": {"path": "/microgrid_base/type_system_v2.py:646-673", "hash": "1bef63947eec20ec259ade4d7bf28a76", "title": "Generate Device Connectivity Matrix and Plot Graph"}, "1263": {"path": "/microgrid_base/type_utils.py.j2", "hash": "2ae1cda8bf47c368edd53c012af21436", "title": "Microgrid System Prolog Environment Verification"}, "1264": {"path": "/microgrid_base/type_utils.py.j2:1-31", "hash": "ec34119ec7bb4974bc23d545919a86cc", "title": "Topology Rule Checker and Port Naming Function"}, "1265": {"path": "/microgrid_base/type_utils.py.j2:32-64", "hash": "47a025d98d4ab68cc6ea3fbfb32a60e5", "title": "Microgrid Base: Lookup Tables and Data Storage"}, "1266": {"path": "/microgrid_base/type_utils.py.j2:66-91", "hash": "7f406a487a4193d0c339331b995bd096", "title": "Initializing Device and Port Dictionaries"}, "1267": {"path": "/microgrid_base/type_utils.py.j2:92-113", "hash": "88086dd3bdad6ab40faf11fb0c7813e6", "title": "Port Management in Microgrid System"}, "1268": {"path": "/microgrid_base/type_utils.py.j2:113-133", "hash": "82f53ad358a85a64dde23a6fe7d2ce79", "title": "Port Verifier Dictionary Creation"}, "1269": {"path": "/microgrid_base/type_utils.py.j2:134-162", "hash": "254dc49d601ab92ba93f4ed8ddea277e", "title": "Port Lookup Table Generation"}, "1270": {"path": "/microgrid_base/type_utils.py.j2:163-185", "hash": "87992b9950955396852bc849eca0c39e", "title": "Dynamic Prolog Verification Functions"}, "1271": {"path": "/microgrid_base/type_utils.py.j2:187-219", "hash": "82e01cb3b179dca7b80dad788c5a277c", "title": "Prolog Query Utilities"}, "1272": {"path": "/microgrid_base/type_utils.py.j2:220-237", "hash": "6b3e9d08b0ce0750d8c50d6c0b8aace2", "title": "Prolog Environment Setup in Type Utils"}, "1273": {"path": "/microgrid_base/type_utils.py.j2:238-272", "hash": "6a954d8eba1b584eb40454b391e775db", "title": "Generate Energy Combinations"}, "1274": {"path": "/microgrid_base/type_utils.py.j2:273-292", "hash": "2392ac58b942eb1375c65db5f7055a76", "title": "Generating Microgrid Port-Adder Combinations"}, "1275": {"path": "/microgrid_base/type_utils.py.j2:293-318", "hash": "2d8f6fbcf195251f3e1df9e76eb608b3", "title": "Energy Adder State Combinations"}, "1276": {"path": "/microgrid_base/type_utils.py.j2:320-342", "hash": "237e37d304e071004db5ce568f94426c", "title": "Python Query Result Function"}, "1277": {"path": "/microgrid_base/type_utils.py.j2:343-360", "hash": "be0b93333c206ebe0d40a484df75b221", "title": "Energy Status Dictionary Generation"}, "1278": {"path": "/microgrid_base/type_utils.py.j2:362-390", "hash": "f57323081acbd1cf62522acdaade61f1", "title": "Adder Status Querier Functions"}, "1279": {"path": "/microgrid_base/type_utils.py.j2:392-428", "hash": "0213bb335c1bd5da68dff86855c8b299", "title": "Verify Topology Status in Prolog"}, "1280": {"path": "/microgrid_base/type_utils.py.j2:429-449", "hash": "bd5d844e1d1948c001f62a90f27b1084", "title": "Flattening Port Statuses"}, "1281": {"path": "/microgrid_base/type_utils.py.j2:450-465", "hash": "e1780b4d64256be6d60b79d5ab125119", "title": "Cache-Checking Conjugate Verifiers"}, "1282": {"path": "/microgrid_base/type_utils.py.j2:465-481", "hash": "c493f7f14d4f071caa54219343f5a921", "title": "Conjugate Port Verification in Topo Status Frame"}, "1283": {"path": "/microgrid_base/type_utils.py.j2:482-502", "hash": "043f0c743bb43cb6d8b44cb328d92795", "title": "Port Verification Loop Algorithm"}, "1284": {"path": "/microgrid_base/type_utils.py.j2:503-527", "hash": "acb22328f9c0cfa4d28cf315caf53294", "title": "Port and Topology Validation Utility"}, "1285": {"path": "/microgrid_base/type_utils.py.j2:528-554", "hash": "87981cd261926fc54e9cfa876441497d", "title": "Isomorphic Topology Checker"}, "1286": {"path": "/microgrid_base/type_utils.py.j2:555-575", "hash": "58e288376a758a1decf4d4621d261f4b", "title": "Microgrid Base Check Functionality"}, "1287": {"path": "/microgrid_base/type_utils.py.j2:575-592", "hash": "b83679072f98a45ec743de02d16b222e", "title": "Prolog Script Execution and Weak Type Check"}, "1288": {"path": "/microgrid_base/typical_day_calc.py", "hash": "5632d99edb95c539857fbc676a6fac51", "title": "Typical Day Calculator"}, "1289": {"path": "/microgrid_base/typical_day_calc.py:1-41", "hash": "fff9375f283aaf1c609a293dabe76c43", "title": "Seasonal Holiday Day Calculator"}, "1290": {"path": "/microgrid_base/typical_day_calc.py:42-43", "hash": "44371033d6539c624c824635ca3952c2", "title": "Checking Overlap and Completeness of Weekday and Holiday Sets"}, "1291": {"path": "/microgrid_base/unit_utils.py", "hash": "a89ba6fa6473020dfc7441aec576252a", "title": "Unit Conversion Utility"}, "1292": {"path": "/microgrid_base/unit_utils.py:1-38", "hash": "12cf7498a8810ea737e932ed3355cbf1", "title": "Unit Conversion Tool"}, "1293": {"path": "/microgrid_base/unit_utils.py:39-77", "hash": "e46715b80cf8658203bd440c675effec", "title": "Standard Unit Conversion"}, "1294": {"path": "/microgrid_base/unit_utils.py:78-125", "hash": "3faea0fae780482484e9edbf19c758e4", "title": "Unit Conversion Functions"}, "1295": {"path": "/microgrid_base/unit_utils.py:126-156", "hash": "aab4643ec2806d4cd07e97be5a08c53c", "title": "Unit Compatibility Checker"}, "1296": {"path": "/microgrid_base/unit_utils.py:157-199", "hash": "d4e5045347043e9e88aafc66cd7f7a79", "title": "Unit Parsing and Conversion Functions"}, "1297": {"path": "/microgrid_base/unit_utils.py:200-201", "hash": "3033944feba8b110409f721de56fdbb9", "title": "Unit Conversion to String"}, "1298": {"path": "/microgrid_base/violation_utils.py", "hash": "b0b6316408afdd2514806cf38c4a5294", "title": "Bound Checker for Microgrid Systems"}, "1299": {"path": "/microgrid_base/violation_utils.py:1-41", "hash": "1aa92769aff77485eca349ffe66d9e81", "title": "Bound Violation Detection Functions"}, "1300": {"path": "/microgrid_base/violation_utils.py:42-75", "hash": "9c0fb1016ef8a406910547717d42f690", "title": "Utility Functions for Bounds and Validity Checking"}, "1301": {"path": "/microgrid_base/violation_utils.py:76-112", "hash": "2add3312528ac007a3923fe852c14439", "title": "Variable Bound and Type Violation Checker"}, "1302": {"path": "/microgrid_base/violation_utils.py:113-154", "hash": "67712cd65aaad98fd232f576303422fd", "title": "Microgrid Variable and Constraint Classes"}, "1303": {"path": "/microgrid_base/violation_utils.py:155-186", "hash": "d237e9a2635adf2cf7dd2188143eb0da", "title": "Check Variable Bounds and Type"}, "1304": {"path": "/microgrid_base/violation_utils.py:189-225", "hash": "f0bd224813b34026133e3714147415a5", "title": "Get Variable Info List from Dictionary"}, "1305": {"path": "/microgrid_base/violation_utils.py:226-262", "hash": "0a3f292760302e316cc6df2a19d4c2a5", "title": "Variable Decomposition and Information Retrieval"}, "1306": {"path": "/microgrid_base/violation_utils.py:263-297", "hash": "d2223dd3cb6daf129b7b209650ca1c9a", "title": "Microgrid Constraint Decomposition Code"}, "1307": {"path": "/microgrid_base/violation_utils.py:298-329", "hash": "ad4ba42909fb16583671371c6d930e2c", "title": "Piecewise Function Violation Checker"}, "1308": {"path": "/microgrid_base/violation_utils.py:330-362", "hash": "60ef2a5b70f7d0e60d2cb479f3fefbb0", "title": "Violation Utils: ViolationInfo and MagicList Classes"}, "1309": {"path": "/microgrid_base/violation_utils.py:363-397", "hash": "ddd409fab09c84af71005044fe9f83e7", "title": "ModelScanner: Constraint Scanning for ConcreteModels"}, "1310": {"path": "/microgrid_base/violation_utils.py:398-422", "hash": "b4910e14f31eb7462a616f33e84cc753", "title": "Constraints Violation Calculation"}, "1311": {"path": "/microgrid_base/violation_utils.py:423-446", "hash": "389bfb84f0eb4bf9a3e1942a8b5c6247", "title": "Clearing Model Variables and Piecewise Information"}, "1312": {"path": "/microgrid_base/violation_utils.py:447-481", "hash": "91337422fb71c104da51e698138338d6", "title": "Microgrid Violation Utilities"}, "1313": {"path": "/microgrid_base/violation_utils.py:482-513", "hash": "aa2e6275ce5c020908c46e3b8fff002c", "title": "Advanced Logical Expression Model Scanning"}, "1314": {"path": "/microgrid_base/violation_utils.py:515-544", "hash": "27ead1f1d5e89b14fbb011084c89ba64", "title": "Piecewise Function Extraction and Analysis"}, "1315": {"path": "/mini_data_log_utils.py", "hash": "1207d1525a23ffb61b90380504525b20", "title": "Solve Integrated Energy System Models"}, "1316": {"path": "/mini_data_log_utils.py:1-40", "hash": "aa38d50a116eb3b1d3a1c1c4537ffe3c", "title": "Integrated Energy System Solver"}, "1317": {"path": "/mini_data_log_utils.py:42-61", "hash": "54ae3d1e781f837631806dfdc4a04d3d", "title": "Universal List Plotter"}, "1318": {"path": "/mini_data_log_utils.py:62-91", "hash": "7c4a4602e3c41388d0edf2fb4bd113ae", "title": "Quadratic Constraint Checker"}, "1319": {"path": "/mini_data_log_utils.py:93-93", "hash": "3794145ad376a1070fd63ab1678506e0", "title": "Solve and Log Simulations"}, "1320": {"path": "/mini_heat_system.py", "hash": "faf27ecd2e19092a49fdea4f495cf1d9", "title": "Mini Heat System Simulation"}, "1321": {"path": "/mini_heat_system.py:1-44", "hash": "02e44af5a54210ce3ae25acfd5c2e65d", "title": "Minimum Heat System Simulation Setup"}, "1322": {"path": "/mini_heat_system.py:45-88", "hash": "b2d76e84eee8029a482bfc87e05d1ccf", "title": "Device Objects Initialization and Constraints"}, "1323": {"path": "/mini_heat_system.py:91-132", "hash": "f73d119d6ebdf2786a7ea34338fe52f8", "title": "Energy System Components Definition"}, "1324": {"path": "/mini_heat_system.py:133-165", "hash": "a1726616999f7aee8360740c35e27928", "title": "Municipal Hot Water System Registration"}, "1325": {"path": "/mini_heat_system.py:166-204", "hash": "9602e9e92f026ac113da40f95bf2dc4a", "title": "Mini-Heat System Simulation Code"}, "1326": {"path": "/mini_heat_system.py:205-236", "hash": "3ebffc05d8f3c78b424bc9c1c9b95f21", "title": "Energy Flow Node Creator"}, "1327": {"path": "/mini_heat_system.py:237-271", "hash": "b3de9ab9056e100cfd303e58676c87ce", "title": "Efficient Node-Based Heat Distribution System"}, "1328": {"path": "/mini_ies_test.py", "hash": "4326eb7cd950f163a2a015a60404a162", "title": "Microgrid Simulation Setup and Comparison"}, "1329": {"path": "/mini_ies_test.py:1-46", "hash": "3b90007241b0411c1abbd012c645f469", "title": "Set up CPLEX Environment for Integrated Energy System Modeling"}, "1330": {"path": "/mini_ies_test.py:48-91", "hash": "48b8d052ceaffda976653ed0ecfd1bab", "title": "Microgrid Simulation Initialization"}, "1331": {"path": "/mini_ies_test.py:92-115", "hash": "f36c68e240111f764d53708b456de88c", "title": "EnergyStorageSystem Configuration"}, "1332": {"path": "/mini_ies_test.py:116-152", "hash": "8baca366ac88d686469301a76f948b24", "title": "Energy System Node Creation with Interlaced Connections"}, "1333": {"path": "/mini_ies_test.py:154-194", "hash": "5ff6a22e2dcd1a8d7ba4a43a6e46dd33", "title": "Creating Variables and Visualizing System Topology"}, "1334": {"path": "/mini_ies_test.py:195-203", "hash": "4b92f0980a7549d473b7361283485db5", "title": "Solar vs Grid Power Comparison Code Snippet"}, "1335": {"path": "/mini_ies_topology.py", "hash": "d596ec99a5c4d8310e6a008b2b7be502", "title": "Minimal IES Topology Visualization"}, "1336": {"path": "/mini_refrigeration_system.py", "hash": "27430cd06e8e969cc3f586d3e7a230a0", "title": "Mini Refrigeration System Simulation"}, "1337": {"path": "/mini_refrigeration_system.py:1-44", "hash": "cb91e8155f462f273e2e429f4219bc31", "title": "LiBr Refrigeration System Initialization"}, "1338": {"path": "/mini_refrigeration_system.py:45-87", "hash": "821b3e03a306a424cf17ea91290ce108", "title": "Mini Refrigeration System Constraints Registration"}, "1339": {"path": "/mini_refrigeration_system.py:88-134", "hash": "4d20371c8e3d07d6717cb3cbbba3eb2b", "title": "Efficient Cold & Hot Water System Creation"}, "1340": {"path": "/mini_refrigeration_system.py:135-149", "hash": "4b702d3bd0b572a4eb0d4c7974d6a334", "title": "Building Mini-Refrigeration System with NodeFactory"}, "1341": {"path": "/network_visualize_packup.cmd", "hash": "7c4d7accad37ccf1b54cb7b22e689c8e", "title": "Compress Python Files with 7z Command"}, "1342": {"path": "/neural_network_demo.py", "hash": "78ba802850e90ec51783b2616f140f5f", "title": "Neural Network Model with Hardtanh Activation"}, "1343": {"path": "/neural_network_linearize_nonlinear_function_test.py", "hash": "ce124bfdb5b7ed5fbc48eaa7671e2d1d", "title": "Linear Neural Network Training and Testing"}, "1344": {"path": "/neural_network_linearize_nonlinear_function_test.py:1-39", "hash": "7e1eb2bcedcacfcc49a1be6ee630cfe9", "title": "Training Neural Network: Linear to Nonlinear Function"}, "1345": {"path": "/neural_network_linearize_nonlinear_function_test.py:40-66", "hash": "00edb4fdafd0faf076c4946388357fde", "title": "Training Neural Network with Linear Layer"}, "1346": {"path": "/neural_network_loading_convert_to_numpy_matrix.py", "hash": "b42ea2f86c618fa9f34749875d77440d", "title": "Neural Network Conversion and Verification"}, "1347": {"path": "/neural_network_loading_convert_to_numpy_matrix.py:1-41", "hash": "25a823b9a26af4196caed75c4a381937", "title": "Neural Network Load, Convert to Numpy, Apply Activation"}, "1348": {"path": "/neural_network_loading_convert_to_numpy_matrix.py:42-49", "hash": "febe50bd130b81bfb100b18e47af1fb6", "title": "Hard Tanh Layer Activation"}, "1349": {"path": "/output_pdf/convert_utf8.py", "hash": "a3e2bfadbee53bb82fbdba33757aba98", "title": "UTF-16 to UTF-8 Converter"}, "1350": {"path": "/output_pdf/docx_concat/concat_index_with_article.py", "hash": "6008bd4295847e3752ae41fe99573fef", "title": "Docx File Concatenation and Hyperlink Issues"}, "1351": {"path": "/output_pdf/docx_reference_convert/test_convert.sh", "hash": "4d7bd141372685fcfa7da9ca2b81dc84", "title": "DOCX Reference Conversion with Pandoc"}, "1352": {"path": "/output_pdf/export_docx.ps1", "hash": "a575cda63fb7280cc25e072926f223ca", "title": "Automate DOCX Conversion with PowerShell Script"}, "1353": {"path": "/output_pdf/export_pdf.ps1", "hash": "d064193c5890d134db00e5c4af183f48", "title": "Pandoc PATH Markdown to PDF Script"}, "1354": {"path": "/output_pdf/generate_html.ps1", "hash": "5d7ed4b72c06378a6d136be386ee6331", "title": "Generate HTML Docs with pdoc"}, "1355": {"path": "/output_pdf/generate_html.sh", "hash": "7162bba150d6f51e3cedf3fc5f935f0d", "title": "Convert Markdown to HTML with Extensions"}, "1356": {"path": "/output_pdf/html/process_output_html.py", "hash": "ddb97a8b744191ced88a3e54eec21778", "title": "BeautifulSoup-based HTML Parsing and Modification"}, "1357": {"path": "/output_pdf/html/process_output_html.py:1-25", "hash": "1b659609465150bfddacf13667b4a7b4", "title": "BeautifulSoup HTML Parsing and Modification"}, "1358": {"path": "/output_pdf/html/process_output_html.py:26-32", "hash": "ee469d751416b966548d8306b94ab45d", "title": "Manipulate HTML Structure"}, "1359": {"path": "/output_pdf/html_to_pdf.sh", "hash": "39a37bc5fead4824b872a6ccdeb461b6", "title": "HTML to PDF with Playwright"}, "1360": {"path": "/output_pdf/original_html_to_docx.sh", "hash": "65cd9edb69b79a4022a12b4ce3bd798d", "title": "Convert HTML to DOCX using Pandoc"}, "1361": {"path": "/output_pdf/pdf_to_docx.sh", "hash": "496f39775af9c18b59f153b0ce58744a", "title": "Troubleshooting PDF to DOCX Conversion"}, "1362": {"path": "/packup.sh", "hash": "f2e7dd366632e0b8eb7b5a6bc741049a", "title": "Create and Pack Up Archive"}, "1363": {"path": "/parse_device_parameters_excel.py", "hash": "23f8342a922b8d7053253df0f7f95cba", "title": "Parse Excel Font Colors with Openpyxl"}, "1364": {"path": "/parse_device_parameters_excel.py:1-31", "hash": "3f72a9d89115084c24ed9fbc82f326de", "title": "Loading and Analyzing Openpyxl Workbook"}, "1365": {"path": "/parse_device_parameters_excel.py:32-58", "hash": "a9263186c91f0139fbe02ddba4ca83bc", "title": "Font Color Extraction from Specified Values"}, "1366": {"path": "/parse_device_parameters_excel.py:59-81", "hash": "de3ee63befa121fa574adae2c562fa13", "title": "Check and Update Excel Cell Dictionary"}, "1367": {"path": "/parse_device_parameters_excel_v2.py", "hash": "ac6bfa26cfa12661a83a4f7e5fd5f7f8", "title": "Excel to JSON: Device Parameter Parser v2"}, "1368": {"path": "/parse_device_parameters_excel_v2.py:1-33", "hash": "3397f43cfba7bdd4f6045851c3dee7b5", "title": "Load and Parse Excel Sheet with openpyxl"}, "1369": {"path": "/parse_device_parameters_excel_v2.py:34-71", "hash": "96176dea61ffa663430343fbb85dd188", "title": "Parse Excel Device Params to JSON"}, "1370": {"path": "/parse_device_parameters_excel_v2.py:72-90", "hash": "ea562cebd86391a6a8950ee8b9f951d5", "title": "Parse Excel Device Params to JSON"}, "1371": {"path": "/pendulum.jl", "hash": "b41f331ecd49862ecb09f25806c9d2a3", "title": "Pendulum Model: Solving ODE with External Torque"}, "1372": {"path": "/pendulum.jl:1-32", "hash": "72b880d806bd9e0a35c14ffb414c0f45", "title": "Pendulum Simulation Using DifferentialEquations"}, "1373": {"path": "/pendulum.jl:34-39", "hash": "b2b2f5ea048f4523535bffbafc0f615d", "title": "Angular Deflections and Velocities of Pendulum System"}, "1374": {"path": "/pendulum.py", "hash": "255b8fed3de9bcd4a51e354d4658f14a", "title": "Pendulum Motion Simulation in Python"}, "1375": {"path": "/pendulum_finite_differentiate.py", "hash": "4fb256d64d5eb9b7a04f4f8030ea4d0c", "title": "Pendulum Simulation via Finite Differences"}, "1376": {"path": "/pendulum_finite_differentiate.py:1-32", "hash": "42c53745ab061af29c6b0e08e01a8941", "title": "Finite Difference Pendulum Simulation"}, "1377": {"path": "/pendulum_finite_differentiate.py:33-33", "hash": "1af71821dbaaa2c4ee8303cfce9cd85a", "title": "Displaying Pendulum Figures with Matplotlib"}, "1378": {"path": "/piecewise_approximation_test.py", "hash": "44ae135abc0c4c7f42597f3b87888384", "title": "Piecewise Approximation Test"}, "1379": {"path": "/piecewise_approximation_test.py:1-43", "hash": "6c1854d46d65433cdaa10ef5e460a18f", "title": "Piecewise Approximation with Linear Interpolation"}, "1380": {"path": "/piecewise_approximation_test.py:44-74", "hash": "2a0fdd78d71f7a195a1a6640b108320f", "title": "Piecewise Approximation Test"}, "1381": {"path": "/pint_convert_units.py", "hash": "99db71a2097ad284d78741b276071d65", "title": "Pint-Based Unit Converter"}, "1382": {"path": "/pint_convert_units.py:1-31", "hash": "41f2f0bef139efbc9cea74858f4c0c05", "title": "Pint-based Unit Conversion and Compatibility"}, "1383": {"path": "/pint_convert_units.py:32-47", "hash": "b8cd4b5d49ef257dfb54c9a29230f83d", "title": "Unit Conversion and Printing"}, "1384": {"path": "/pint_merge_units.py", "hash": "f09759193975332dea03a23563fd34f4", "title": "Merging Pint Units: Compatibility and Testing"}, "1385": {"path": "/pint_merge_units.py:1-52", "hash": "3e7e0f3b9c3f3d739cb8c44d120f93b7", "title": "Custom Pint Unit Definitions"}, "1386": {"path": "/pint_merge_units.py:54-64", "hash": "fe1abb6d3121d727f3866c9006b99b54", "title": "Pint Unit Conversion Testing"}, "1387": {"path": "/plot_arr.py", "hash": "f2d26d77fe28db41cafb728266202670", "title": "Array Plot with Time/Power Axes and Legend"}, "1388": {"path": "/plot_arr.py:1-40", "hash": "365a2b9769f5f8c924bb274a350092ac", "title": "IGESPlot: Plotting Non-Zero Arrays"}, "1389": {"path": "/plot_arr.py:41-54", "hash": "66671b1f02b7b43c76418bf3b05a5028", "title": "Plotting Power Data with Labels and Legends"}, "1390": {"path": "/pydantic_validator_test.py", "hash": "bcd15f385875c1b5ef34252658e9e269", "title": "Pydantic: Robust Data Validation in Python"}, "1391": {"path": "/pyomo_define_array_list.py", "hash": "39196760f2053cc8baf33ba7afc45484", "title": "Pyomo Array List: Define, Bounds, Constraints"}, "1392": {"path": "/pyomo_define_array_list.py:1-35", "hash": "17f085996d3e427c104aaa500e02985a", "title": "Pyomo: Define Arrays, Variables, and Objectives"}, "1393": {"path": "/pyomo_define_array_list.py:36-44", "hash": "496127bab2fe542c4806cc6b3d8bb520", "title": "Pyomo Objective Function with CPLEX Solver"}, "1394": {"path": "/pyomo_shot_test.py", "hash": "1a12e09d12f993bb146b76960d699e4c", "title": "Pyomo Import and Constraint Issue"}, "1395": {"path": "/pyomo_test_solve_nonlinear_cplex.py", "hash": "bbc899554ca2e2684c840bd46f34ee14", "title": "Pyomo Nonlinear Optimization Model Solving"}, "1396": {"path": "/pyomo_test_solve_nonlinear_cplex.py:1-36", "hash": "65091adcb6ae6a245ddf75e3dc58ff5e", "title": "Nonlinear Model with Pyomo and CPLEX"}, "1397": {"path": "/pyomo_test_solve_nonlinear_cplex.py:38-54", "hash": "e59dd3d51660700d35f28c548e46fb40", "title": "Pyomo Test: Solve Nonlinear with CPLEX"}, "1398": {"path": "/pyomo_triangulate_multivariate_linearization.py", "hash": "5dc52275d32136639df4dee5344841b4", "title": "Multi-Variable Linearization via Delaunay Triangulation"}, "1399": {"path": "/questions.md", "hash": "0b4b43d21a5609a0381bb16ec7fbc22e", "title": "Comprehensive Financial Evaluation for CloudPSS Project"}, "1400": {"path": "/questions.md:1-19", "hash": "d5c2ec44597dbcf0847e02522ea2ccf5", "title": "Nonlinear Modeling for Pipeline Drops with Pyomo"}, "1401": {"path": "/questions.md:21-99", "hash": "0de11c3ec7992790f5bd1f6a1c4b4faf", "title": "CloudPSS Financial Evaluation Table"}, "1402": {"path": "/questions.md:100-167", "hash": "aef89f9a444f57c5eacc81daec05f168", "title": "Comprehensive Accounting Code List"}, "1403": {"path": "/questions.md:168-231", "hash": "986a2c70aac6ba8a485f970489140103", "title": "Financial Project Table"}, "1404": {"path": "/questions.md:232-243", "hash": "18179a6f442e79da45ab47b1fa631367", "title": "Business Income and Tax Table"}, "1405": {"path": "/questions_packup.cmd", "hash": "cae6a4d9b1fd71a42cd0c4ae22798aa4", "title": "Questions Packup: Compress & Replace"}, "1406": {"path": "/regex_extract_bracket.py", "hash": "456614f417dc9c16250d8401323ecac9", "title": "Regex Extract Brackets"}, "1407": {"path": "/reset_codepage.reg", "hash": "ea7fb3011ce1818b334b58010c15d28b", "title": "Command Prompt Customization Registry"}, "1408": {"path": "/result_processlib.py", "hash": "631323f1b691de59bea9d2beb2c8e545", "title": "Value Class Handles Docplex Inputs"}, "1409": {"path": "/runhide.vbs", "hash": "79e954639dced5d72f0fd22604739a04", "title": "Hidden Window Executor"}, "1410": {"path": "/runhide.vbs:1-31", "hash": "a837ac3fcb523e8364c40c630b1d9d09", "title": "Run Hide Command"}, "1411": {"path": "/runhide.vbs:32-37", "hash": "2ed785b355da2a606068cc0076c4c5b5", "title": "Author Credit and Link Display"}, "1412": {"path": "/schedule_update.cmd", "hash": "fb5efee0f828eee463978050913bb362", "title": "Schedule IES Modeling Task"}, "1413": {"path": "/scheduled_commit.cmd", "hash": "ee816dd9251ade5f08c7b4cf25c2e2dc", "title": "Scripted Automated Logging"}, "1414": {"path": "/script.sh", "hash": "78e215b6a3789ad41068dcafb2e3fc38", "title": "Script Fetches Heat Component Data"}, "1415": {"path": "/script.sh:1-7", "hash": "c368883052ffa1c6afc19989bda7a443", "title": "GET Request to Fetch Heat Component"}, "1416": {"path": "/script.sh:8-14", "hash": "3a54ec98e3cc5c663dff6751c169b6e7", "title": "Set HTTP Headers and Append to File"}, "1417": {"path": "/serve_pydoc.ps1", "hash": "7aea0c57ab3da4195cdf65df3c09cc4b", "title": "Serve Python API Docs with pdoc3"}, "1418": {"path": "/setup_gptcommit.cmd", "hash": "b9105f7363b0aff6bf37d5996350dc06", "title": "Setup GPTCommit Configuration"}, "1419": {"path": "/setup_gptcommit.sh", "hash": "6d7991e14201d3f4fcb18729d0f01447", "title": "Automate GPTcommit Setup"}, "1420": {"path": "/subversion_sync.cmd", "hash": "d2ce0eea6539d1302786d777f5cb4134", "title": "Subversion Sync & Commit"}, "1421": {"path": "/symlinks/create_symlink.cmd", "hash": "efcee808e6434683e13edad700909ada", "title": "Create \"dwg_blueprint\" Symlink"}, "1422": {"path": "/system_topology_utils.py", "hash": "ebe1ed5f54bc94884be6fe1cadba5406", "title": "JSON Directed Graph Generator for Energy Systems"}, "1423": {"path": "/system_topology_utils.py:1-31", "hash": "540c326727d4da5a819f9d8ce97a67f7", "title": "Create Energy System Graph with Devices and I/O Nodes"}, "1424": {"path": "/system_topology_utils.py:32-63", "hash": "55b754d0506c8775a95ca0590aee4cf6", "title": "System Topology Graph Creation"}, "1425": {"path": "/system_topology_utils.py:64-67", "hash": "5dd2f77daf78b520b264118580f46a69", "title": "Save Figure with System Name"}, "1426": {"path": "/taylor_series_expansion_approximation_nonlinear_function_piecewise.py", "hash": "a6f3c30b73574a47f16a9f824c364a95", "title": "Taylor Series Expansion for Sin(x)"}, "1427": {"path": "/taylor_series_expansion_approximation_nonlinear_function_piecewise.py:1-44", "hash": "dae47bcc03fffa7404ade76065c319a6", "title": "Piecewise Approximation of Nonlinear Functions with Taylor Series Expansion"}, "1428": {"path": "/taylor_series_expansion_approximation_nonlinear_function_piecewise.py:45-88", "hash": "6581eb8adcfb5eb1a1748bcc68f0bdb8", "title": "Piecewise Function Approximation for Nonlinear Functions"}, "1429": {"path": "/taylor_series_expansion_approximation_nonlinear_function_piecewise.py:89-116", "hash": "3196e33d1fe6868097dac94497bb21b2", "title": "Taylor Series Expansion for Sin(x) Approximation"}, "1430": {"path": "/test_add_lower_and_upper_bounds.py", "hash": "b95e195400cd7f165690c3bb60780e3b", "title": "Testing EnergySystem Bounds and Conflicts"}, "1431": {"path": "/test_class_create.py", "hash": "a121277030f0279e212c0206d616560b", "title": "Class Define with Data and Value Attributes"}, "1432": {"path": "/test_client.py", "hash": "87bb6f4e42ea72997032d442e47828db", "title": "API Client with Python"}, "1433": {"path": "/test_cpexample.cmd", "hash": "1d749f72662d1aa89b9f67486463e1d1", "title": "Setup and Run Scripts with PATH Variables"}, "1434": {"path": "/test_cpexample.cmd:1-3", "hash": "2ecc43f983e9ba00b0eb47930d0ea376", "title": "Set Environment Variables for Software Compatibility"}, "1435": {"path": "/test_cpexample.cmd:3-13", "hash": "8bffb3130b507505914ea361b3f6e6da", "title": "Set PATH, Execute PS Script & Log Output"}, "1436": {"path": "/test_cpexample.ps1", "hash": "0b627d9085df13a7af7edaa930cef2d8", "title": "Redirects Python Script Output"}, "1437": {"path": "/test_decorate_class_method.py", "hash": "bf40d0e7fc32ed3064c64ad90660db12", "title": "Decorating Class Methods: test_decorate_class_method.py"}, "1438": {"path": "/test_linearization_max_zeros.py", "hash": "ceb93587cb7f265736e38b244294823e", "title": "Maximizing Zeroes in Linear Models"}, "1439": {"path": "/test_linearization_max_zeros.py:1-26", "hash": "ebc418f609a727073b636b3c4e70f5b7", "title": "Max Zeros via Binary Variables"}, "1440": {"path": "/test_linearization_max_zeros.py:27-64", "hash": "a6cd71bebd55af921165fbcb51bf22fd", "title": "Maximizing Zeros in Linear Model with Constraints"}, "1441": {"path": "/test_linearization_max_zeros.py:65-75", "hash": "991968f3251d9d95f8e5199d13c5cdd1", "title": "Minimizing Summation Absolute Value"}, "1442": {"path": "/test_loading_light_intensity_data.py", "hash": "ebe2965c8ea3a4b48827bd3af6c5db24", "title": "Fixing Faulty Radiation Data Loop"}, "1443": {"path": "/test_plot.jl", "hash": "0a933dc41ace671989994928a4beddb1", "title": "Unused Plot with Formatted Output"}, "1444": {"path": "/test_server.py", "hash": "65e42281924b820727f8455471daee2a", "title": "Asynchronous API Endpoints & Web App"}, "1445": {"path": "/test_server.py:1-41", "hash": "3bea9b9ed07646c0bd79ea07c35b44ac", "title": "FastAPI Time Limit Mock Calculations"}, "1446": {"path": "/test_server.py:42-91", "hash": "7d3a9ae483144b110303b59be84e6bc9", "title": "Threaded Task Lock and Execution"}, "1447": {"path": "/test_server.py:92-122", "hash": "cadfcb2b6455dd89efa33d3bccbe5039", "title": "Asynchronous Task API Endpoints"}, "1448": {"path": "/test_server.py:123-131", "hash": "a5a57bc6b917bb1f04b6869f30a36d18", "title": "Check Unique ID, Run App or Return Error"}, "1449": {"path": "/test_server_client_configs.py", "hash": "d7d4ca3e3d90507b64cc8f7b6e9bf0bf", "title": "Server URL Base Setup and Endpoints"}, "1450": {"path": "/test_timedelta.py", "hash": "66a5c42fefbef50a66efb04d0ac89cf7", "title": "Timedelta Date Difference"}, "1451": {"path": "/test_undefined.py", "hash": "c19fcb2b6e3bb608c24ce47ddc7b13e8", "title": "Variable Assignment in Code Snippet"}, "1452": {"path": "/topology_conversion.py", "hash": "072549a58d681da668b6b80f059f0ecc", "title": "Topology Conversion and Serialization"}, "1453": {"path": "/validity_check.py", "hash": "026c2f42061291fc11d6a131f1d3d6c9", "title": "Function Iteration and Class Initialization"}}}