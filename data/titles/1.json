{
    "/microgrid_base/config.py": "IES Environment Configuration",
    "/microgrid_base/config_dataclasses.py": "IES Algorithm Docker Configs",
    "/microgrid_base/config_dataclasses.py:1-30": "IES Algorithm Config Class: IESEnv",
    "/microgrid_base/config_dataclasses.py:118-149": "Docker Launcher Config Class",
    "/microgrid_base/config_dataclasses.py:150-157": "Docker Image Update Config",
    "/microgrid_base/config_dataclasses.py:31-60": "Configuring Server Behavior: Boolean Fields",
    "/microgrid_base/config_dataclasses.py:61-89": "Microgrid Config Options",
    "/microgrid_base/config_dataclasses.py:90-117": "Microgrid System Config Options",
    "/microgrid_base/conflict_utils.py": "Conflict Refiner for Microgrids",
    "/microgrid_base/conflict_utils.py:1-31": "Killing CPLEX with Python Function",
    "/microgrid_base/conflict_utils.py:128-153": "Command Line Options for Conflict Analysis Tool",
    "/microgrid_base/conflict_utils.py:32-63": "Check Conflict Function",
    "/microgrid_base/conflict_utils.py:64-95": "Conflict Refiner Function",
    "/microgrid_base/conflict_utils.py:96-127": "Conflict Detection and Refinement with CPLEX",
    "/microgrid_base/constants.py": "Microgrid Optimizer CLI Commands",
    "/microgrid_base/constants.py:1-44": "Microgrid Constants and Options",
    "/microgrid_base/constants.py:114-128": "Optimization Algorithm Options",
    "/microgrid_base/constants.py:129-145": "Microgrid Heuristics and Options",
    "/microgrid_base/constants.py:147-166": "Customizable CBC Solver Controls",
    "/microgrid_base/constants.py:167-183": "CLI Commands for Optimization Solver",
    "/microgrid_base/constants.py:45-63": "Solver Parameters: Control Efficiency and Accuracy",
    "/microgrid_base/constants.py:64-75": "Branch and Cut Solver Constants",
    "/microgrid_base/constants.py:76-94": "Optimization Solver Parameters",
    "/microgrid_base/constants.py:95-113": "Branch and Cut Parameters",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/README.md": "Cplex Abnormal Exit Debugging",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py": "Alternative Solver Integration",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:1-44": "Retrieving Model Solution with Python",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:121-157": "Cplex Model with Warm Start and Constraints",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:159-185": "Solver Options: Customizing IPOPT Settings",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:186-218": "New Solution Solver Handler",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:219-248": "Alternative Solver Debugging",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:249-281": "Alternative Solver with Bound Constraints",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:282-317": "Solver Diagnostic Print Function",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:318-357": "Decomposing Expression Function",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:358-394": "Alternative Solver Debugging: Code Analysis",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:395-416": "Decompose, Calculate, and Sort Variables",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:417-426": "Linear Expression Check",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:45-81": "Model Solution Monitor",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/alternative_solver.py:83-120": "Initializing Model and Variables",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/arithmatic_prolog.pro": "Optimizing Constraint Programming with Alternative Approaches",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/arithmatic_prolog.pro:1-37": "Dual Solve Functions with clpr and CLP(FD)",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/arithmatic_prolog.pro:39-39": "Count Probability Predicate",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/associativity_attr_model.py": "Associativity Attribute Modeling in Microgrids",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/associativity_attr_model.py:1-43": "Associativity Attribute Model",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/associativity_attr_model.py:44-50": "Model Component Base Names Printing",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/cbc_persistent.py": "Cplex Cython Class Import",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/chatgpt_typesys_bat_smiple.pro": "Microgrid Device Conditions and Usage Rules",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/chatgpt_typesys_bat_smiple.pro:1-31": "Microgrid Device Rules and Conditions",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/chatgpt_typesys_bat_smiple.pro:32-39": "Check Adder Predicate",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/chatgpt_typesys_examaple.pro": "Port-Based Device Rules and Wind Conditions",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py": "Validating Microgrid Constraints and Variables",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:1-37": "Detecting Invalid Variables and Constraints in Pyomo",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:114-150": "LRU Cache Decorator for Variable Checking",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:151-190": "Validating Variables and Constraints in CPLEX Microgrid",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:193-226": "Retrieve Violation and Variable Info",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:227-262": "Custom Dictionary for None Values",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:263-298": "Variable Information Extractor Functions",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:299-333": "Variable and Constraint Decomposition",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:334-363": "PiecewiseInfo Class: Tolerant Piecewise Base Info Extension",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:364-403": "Microgrid Constraint Checker",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:38-79": "Validating Variable Bounds and Constraints",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:404-430": "Deactivate Model Constraints with Bounds and Tolerance",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:431-455": "Debugging Constraint and Variable Abnormalities",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:456-479": "Checking Piecewise Function Input",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:480-502": "Model Scanner for Constraints, Variables & Piecewise Functions",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_invalid_var_and_constraints.py:80-113": "Bound and Type Violation Checker",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model.py": "Identifying Problematic Variables in CPLEX Models",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model.py:1-40": "Unbounded LP Model Solver",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model.py:105-144": "Decompose Expression Function",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model.py:145-179": "Decompose, Sort, Display Variables",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model.py:180-201": "Sorting Variable-Value Pairs in Python Code",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model.py:202-210": "Checking Non-linear Objective Expressions",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model.py:41-71": "Bounded vs Unbounded Objective Function Comparison",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model.py:72-104": "Identifying Unbounded Models in CPLEX Solver",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/check_unbounded_model_import_external.py": "Unbounded Model Checking",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/conjugate_load_combinations_reduce.py": "Conjugate Load Combinations Generator",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/coptampl_test.py": "Pyomo Model Solving with COptAMPL",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/cplex_persistent.py": "Persistent CPLEX Model Solver and Status Check",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/dill_pickle_model.py": "Dill-Pickle Model Serialization",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_conflict_refiner.py": "CPLEX Conflict Refiner",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_conflict_refiner.py:1-39": "Kill CPLEX Process after Duration",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_conflict_refiner.py:101-133": "Conflict Refiner in Microgrid Model",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_conflict_refiner.py:134-162": "Cplex Conflict Refiner",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_conflict_refiner.py:163-173": "Debugging CPLEX Model Solutions",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_conflict_refiner.py:40-72": "CPLEX Conflict Refiner Interruptor",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_conflict_refiner.py:73-100": "Detecting Conflicts with Docplex's ConflictRefiner",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_feasopt.cmd": "Real-Time Dash Execution: Debugging Microgrid Base",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_feasopt.py": "Feasopt-driven Docplex Optimization",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_feasopt.py:1-40": "Initializing Feasopt for Abnormal Exit Conditions",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_feasopt.py:109-122": "Debugging Code Snippet for Constraints Optimization",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_feasopt.py:41-79": "Grouping and Merging Groups in Cplex Algorithm",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/docplex_feasopt.py:80-108": "Constraint Grouping for Docplex Optimization",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/get_feasopt_sol.cmd": "Feasopt Solver Script",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/get_iis_cplex.cmd": "Cplex Conflict Analysis",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/highspy_solve.py": "Highspy MPS Solver Python Script",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/init.sh": "Script Moves Temporary Files for Analysis",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/ipopt_persistent.py": "Importing IPOPT Library for Optimization",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/load_feasopt_sol.py": "Feasopt Sol Extractor",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/logical_constraint_demo.py": "Optimizing Microgrid Units with Pyomo",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/logical_constraint_demo.py:1-30": "Pyomo Model with Concrete Integer Variables",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/logical_constraint_demo.py:31-48": "Logical Constraint Solver Demo",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/lp_to_mps.py": "Pyomo/CPLEX: Converting LP to MPS for Analysis",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/mps_analyze.cmd": "Debugging MPS Analysis with lp-analyzer",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/or_tools_cp_sat.py": "Creating and Solving CP Models with OR-Tools",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/or_tools_load_custom_model.py": "Or-Tools Model Loading and Solving with CPLEX",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/or_tools_solver.py": "OR-Tools Solver for Worker-Task Assignments",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/or_tools_solver.py:1-39": "OR-Tools SAT Solver for Worker-Task Assignment",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/or_tools_solver.py:41-60": "OR-Tools Solver for Linear Optimization",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/override_method_by_copy.py": "Copy and Override for Effective Demonstration",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/parse_scip_solution.py": "XML Parsing and Printing Script",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/print_all_transformation_documentation.py": "Print Transformation Docs in Pyomo",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro": "Microgrid Power Management Code",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro.j2": "Microgrid Template for Energy Simulation",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro.j2:1-36": "Microgrid Simulation Rule Templating",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro.j2:37-72": "Energy Functions and Ports Handling",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro.j2:74-93": "Microgrid Adder Port Status Functions",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro:2-55": "Microgrid Device and Port Type Definitions",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro:56-83": "Adder Port Status Check",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.pro:83-83": "Applying Predicate to Lists",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.py": "Prolog Generator for Energy Systems",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.py:1-28": "Prolog Code Generator",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_gen.py:29-46": "Prolog Dynamic Verification Code for Energy System",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py": "Dynamic Verification of Microgrid Status with Prolog",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:1-38": "Error Manager Class for Exception Handling",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:134-157": "Prolog Query Function for Topology Status",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:158-191": "Prolog-Based Network Status Query",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:192-210": "Dynamic Verification Prolog Typesys Iteration",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:211-248": "Topology Status Printing Function",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:249-265": "Conjugate Port Verification",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:266-286": "Conjugate Port Verification",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:288-310": "Dynamic Topology Verification",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:311-340": "Adder Energy Check",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:341-376": "Dynamic Prolog Verification for Abnormal Exit Conditions",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:377-394": "Conjugate Port Verifier Check",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:39-79": "Exception Handler Class and Context Manager",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/prolog_typesys_dynamic_verification.py:80-131": "Utility Functions for Prolog and Error Handling",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/python_mip_conflict.py": "Optimizing MIP Solutions with Filters",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/read_lp_and_solve_copt.cmd": "MPS File Processing with CPLEX",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/resolve_task_dependency.py": "Dependency-Resolved Task Sequence",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/resolve_task_dependency.py:1-29": "Task Dependency Resolver",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/resolve_task_dependency.py:30-61": "Resolving Task Dependencies and Sequence Determination",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/resolve_task_dependency.py:62-78": "Circular Dependency Verification",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/rewrite_prolog_as_python.py": "Energy Port Combinations: Python Visualization",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/rewrite_prolog_as_python.py:1-31": "Energy-Port Combinations Generator",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/rewrite_prolog_as_python.py:34-59": "Microgrid Energy Combination Evaluator",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/rewrite_prolog_as_python.py:60-92": "Generating All Microgrid States with Energy Types and Ports",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/rewrite_prolog_as_python.py:93-108": "Dictionary Mapping for Adder Ports",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/run_docplex.cmd": "Run Docplex Script with Control-C Signal Handling",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/sample_prolog.pro": "Microgrid Components and Prolog Functions",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/sample_prolog.pro:129-155": "Microgrid Port and Adder Status Functions",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/sample_prolog.pro:156-175": "Validating Microgrid Topology with Predicates",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/sample_prolog.pro:2-55": "Microgrid Component Definitions",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/sample_prolog.pro:56-128": "Microgrid Device Modeling",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/scip_get_relaxed_sol.cmd": "SCIP: Relaxed Solution Extraction",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/scip_persistent.py": "SCIP Model Framework for Integer Programming",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/scip_persistent.py:1-6": "SCIP Model Creation and Attributes",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/scip_persistent.py:22-23": "Debugging Variables: x, y Values Printing",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/scip_persistent.py:6-21": "Optimizing Model with Debugging Features",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/scip_persistent.py:6-6": "Decomposition and Reoptimization Algorithms in SciPy",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_as_simplex.py": "CPLEX MILP Solver and Relaxation Comparison",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_as_simplex.py:1-39": "Solving MILP as LP using CPLEX",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_as_simplex.py:108-117": "Printing Results and Solutions",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_as_simplex.py:40-65": "Temporary Variable Delegation in Modeling",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_as_simplex.py:66-107": "Cplex Model Solving and Comparison",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_miniature_ies_system.py": "CPLEX-based IES System Solving",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_miniature_ies_system.py:1-25": "Debugging CPLEX Abnormal Exits in Miniature IES Systems",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/solve_miniature_ies_system.py:27-57": "Efficient State Filtering for Microgrids",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/task_queue.py": "Forking Pickler Task Queue with Retries",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/task_queue.py:1-38": "Windows-Compatible Task Queue with ForkingPickler",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/task_queue.py:39-61": "RedisHuey Tasks with Retry and Timeout",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/task_queue_test.py": "Task Queue Test",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/task_queue_worker.cmd": "Huey Consumer Task Processing",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/test_arithmatic_prolog.py": "Prolog Arithmetic Query Tool",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/test_iterative_query.pro": "Dog: Pet, Animal, Cute",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/test_iterative_query_prolog.py": "Asynchronous Prolog Query Execution",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/test_method_registry.py": "Managing Methods with Decorators",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/test_method_registry.py:2-38": "MethodRegistry: Signature-Based Registry for Python Objects",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/test_method_registry.py:39-62": "Decorator Registry Parser",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/test_method_registry.py:63-85": "Method Registry Testing",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/test_prolog.pro": "Prolog Device Type Definitions",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/test_prolog.pro:1-47": "Transpose Operations and Device Definitions in Prolog",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/test_prolog.pro:49-75": "Adder Port Status Checker",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/test_prolog.pro:76-84": "Adder Port Status Functions",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/test_prolog_advanced.pro": "Dynamic Facts in Prolog Dictionaries",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/test_stepwise.py": "Pyomo-CPLEX Disjunctive Variable Debugging",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/test_stepwise.py:1-33": "Stepwise Disjunctive Constraints in Pyomo",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/test_stepwise.py:35-63": "Disjunctive Model Transformation and Solving with CPLEX",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/test_stepwise.py:64-67": "Debugging CPLEX Abnormal Exit Condition",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/transform_tests.py": "CPLEX-Linear Transformation Failed",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/translate_model_var_name_unicode.py": "Translation and Error Handling in CPLEX Model",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/translate_model_var_name_unicode.py:1-37": "Translate Model Variable Names",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/translate_model_var_name_unicode.py:121-146": "Translate Model Var Names for CPLEX",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/translate_model_var_name_unicode.py:147-150": "Translate Model Variable Names",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/translate_model_var_name_unicode.py:38-61": "Translating Text with Flashtext Library",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/translate_model_var_name_unicode.py:62-95": "Testing ConcreteModel Feasibility with CPLEX",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/translate_model_var_name_unicode.py:96-120": "CPLEX Model Debugging with Unicode Variables",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/visualize_decomposition_pygcgopt.py": "Decomposition Visualization with PyGCKOpt",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/visualize_decomposition_pygcgopt.py:1-29": "CMDRP Model Building with PyGCKOpt",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/visualize_decomposition_pygcgopt.py:30-67": "CPLEX Model for Assignment and Location Selection",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/visualize_decomposition_pygcgopt.py:68-88": "Visualizing Decompositions in CPLEX PyGams",
    "/microgrid_base/cplex_abnormal_exit_condition_debug/word_counter.py": "Efficient Keyword Counter",
    "/microgrid_base/cplex_test.sh": "Setup CPLEX Path for Test Script",
    "/microgrid_base/csv_utils.py": "CSV Utils: Ensuring Uniformity for Pandas DataFrame",
    "/microgrid_base/debug_utils.py": "Debug Utilities for Microgrid Base",
    "/microgrid_base/debug_utils.py:1-34": "Debugging, Logging, and Optimization Utilities",
    "/microgrid_base/debug_utils.py:109-148": "SolverReturnStatus and Word Counter Definition",
    "/microgrid_base/debug_utils.py:149-182": "Conflict Resolution Function",
    "/microgrid_base/debug_utils.py:183-212": "Translation Table Generation",
    "/microgrid_base/debug_utils.py:213-240": "Exported Model Conversion",
    "/microgrid_base/debug_utils.py:241-271": "Translation Table-Based Text Processing Functions",
    "/microgrid_base/debug_utils.py:272-301": "File Translation and Solving Function",
    "/microgrid_base/debug_utils.py:303-339": "Decompose Expression Function",
    "/microgrid_base/debug_utils.py:340-377": "Microgrid Debug Utility Functions",
    "/microgrid_base/debug_utils.py:35-76": "Microgrid Solver Checker",
    "/microgrid_base/debug_utils.py:378-407": "Debugging Microgrid Utilities",
    "/microgrid_base/debug_utils.py:408-442": "Sorting Variable Names and Incomplete Function",
    "/microgrid_base/debug_utils.py:443-476": "Conflict Variable Count Analyzer",
    "/microgrid_base/debug_utils.py:477-515": "Debugging Utility: Variable Count, Sort and Store",
    "/microgrid_base/debug_utils.py:516-544": "Submodel-Based Function Analysis Tool",
    "/microgrid_base/debug_utils.py:545-572": "Microgrid Calculation Display\nTitle",
    "/microgrid_base/debug_utils.py:573-605": "Temporary Solver Option Modifier",
    "/microgrid_base/debug_utils.py:606-635": "Context Manager for Bound Variables",
    "/microgrid_base/debug_utils.py:638-661": "Decompose and Analyze Model Solver",
    "/microgrid_base/debug_utils.py:662-696": "Checking Infeasibility and Unboundedness",
    "/microgrid_base/debug_utils.py:698-720": "Optimization Solver Settings",
    "/microgrid_base/debug_utils.py:721-751": "Microgrid Solver Options Customization",
    "/microgrid_base/debug_utils.py:752-772": "Initializing Null Model for Microgrid Debugging",
    "/microgrid_base/debug_utils.py:77-108": "Boundary Checker Function",
    "/microgrid_base/debug_utils.py:774-800": "Debug Utils: Deactivate, Solve, and Analyze Objective Expression",
    "/microgrid_base/debug_utils.py:801-829": "Decompose, Bound, Solve Model",
    "/microgrid_base/det_failsafe_reload.sh": "Deterministic Failsafe Mode Initialization",
    "/microgrid_base/det_synth_mock_reload.sh": "Deterministic Synth Mock Reload Script",
    "/microgrid_base/device_whitelist.py": "Microgrid Device Whitelist",
    "/microgrid_base/diesel_topo_check.py": "Diesel Generator Microgrid Design",
    "/microgrid_base/diesel_topo_check.py:1-51": "Data Processing for Diesel Topo Check",
    "/microgrid_base/diesel_topo_check.py:166-204": "Diesel Topology Check and EFG Generation",
    "/microgrid_base/diesel_topo_check.py:52-97": "Optimal Diesel Generator Placement for Microgrids",
    "/microgrid_base/diesel_topo_check.py:98-165": "Diesel Generator Parameters and Load Object Creation",
    "/microgrid_base/docker_launch.py": "Docker Management Tool",
    "/microgrid_base/docker_launch.py:1-40": "Docker Image Build Tool",
    "/microgrid_base/docker_launch.py:113-148": "Docker Container Terminator",
    "/microgrid_base/docker_launch.py:149-186": "Docker Container Termination with Configurable Pruning",
    "/microgrid_base/docker_launch.py:187-211": "Docker Image Builder for Microgrid Base",
    "/microgrid_base/docker_launch.py:212-232": "Automatic Docker Image Building with Conditional Suffix Arguments",
    "/microgrid_base/docker_launch.py:233-261": "Microgrid Docker Image Config & Storage",
    "/microgrid_base/docker_launch.py:262-286": "Ensure Final and Image Tags",
    "/microgrid_base/docker_launch.py:287-317": "Docker Image Loader and Scheduler",
    "/microgrid_base/docker_launch.py:318-346": "Efficient Docker Server Launcher",
    "/microgrid_base/docker_launch.py:347-379": "Set Log Path, Create Directory, Kill Containers",
    "/microgrid_base/docker_launch.py:382-405": "Retrieve Latest Image and Version Info",
    "/microgrid_base/docker_launch.py:406-436": "Docker Image Tagging Functionality",
    "/microgrid_base/docker_launch.py:41-77": "Docker Image Details and Build Time",
    "/microgrid_base/docker_launch.py:437-469": "Docker Image Builder and Tagging Function",
    "/microgrid_base/docker_launch.py:470-494": "Recursive Docker Image Updates",
    "/microgrid_base/docker_launch.py:496-526": "Automating Docker Image Updates and Tagging",
    "/microgrid_base/docker_launch.py:527-551": "Docker Container Launcher",
    "/microgrid_base/docker_launch.py:552-572": "Docker Container Settings Configuration",
    "/microgrid_base/docker_launch.py:573-597": "Docker Container Management System",
    "/microgrid_base/docker_launch.py:78-112": "Check Latest Docker Image Build Time",
    "/microgrid_base/download_openapi_json.sh": "Download OpenAPI JSON Script",
    "/microgrid_base/dsl_parser/Makefile": "Test Environment Setup in Makefile",
    "/microgrid_base/dsl_parser/README.md": "Microgrid DSL Parser: Unit Conversion and Execution Stacks",
    "/microgrid_base/dsl_parser/ast_utils.py": "Recursive Model Flattening Function",
    "/microgrid_base/dsl_parser/erglang_test/mytest.er": "Random Number Generation in Python",
    "/microgrid_base/dsl_parser/erglang_test/sample_external_func.d.er": "Sample External Erlang Function",
    "/microgrid_base/dsl_parser/erglang_test/sample_external_func.py": "Lambda Function for Addition",
    "/microgrid_base/dsl_parser/functional_base.py.j2": "IES/LES Statement Parser",
    "/microgrid_base/dsl_parser/functional_base.py.j2:1-36": "Functional Base Executor",
    "/microgrid_base/dsl_parser/functional_base.py.j2:38-44": "Iterating TLES, Populating LES",
    "/microgrid_base/dsl_parser/generate_code.py": "Generate Base Code from Template",
    "/microgrid_base/dsl_parser/grammar.tx": "Microgrid DSL Parser Grammar",
    "/microgrid_base/dsl_parser/grammar.tx:1-18": "Microgrid DSL Grammar Parsing",
    "/microgrid_base/dsl_parser/grammar.tx:19-45": "Microgrid Grammar Parser Definition",
    "/microgrid_base/dsl_parser/grammar.tx:46-46": "ConstantList_Pair: Tuple of Constant Lists",
    "/microgrid_base/dsl_parser/lex_yacc.py": "LexMeta: Lexer Parser Consistency",
    "/microgrid_base/dsl_parser/lex_yacc.py:1-23": "LexMeta Metaclass for Token Parsing",
    "/microgrid_base/dsl_parser/lex_yacc.py:26-44": "Custom Lexer and Parser Implementation",
    "/microgrid_base/dsl_parser/mylang.ies": "Microgrid Simulation Language: MyLang Features",
    "/microgrid_base/dsl_parser/mylang.ies:1-30": "Variable Types and Constants in Microgrid Model",
    "/microgrid_base/dsl_parser/mylang.ies:31-52": "Microgrid Simulation Language Definition",
    "/microgrid_base/dsl_parser/mylang.ies:52-59": "Binary Variable Operations and Linearization in MyLang",
    "/microgrid_base/dsl_parser/mylang.ies:59-64": "Non-Strict Symbol Initialization and Assertion",
    "/microgrid_base/dsl_parser/pyomo_reduce_inequalities.py": "Pyomo-CPLEX Model Solver",
    "/microgrid_base/dsl_parser/pyomo_reduce_inequalities.py:1-30": "Reducing Inequalities with Pyomo",
    "/microgrid_base/dsl_parser/pyomo_reduce_inequalities.py:31-57": "Pyomo-Reduce Inequalities: Solving with CPLEX",
    "/microgrid_base/dsl_parser/pyomo_reduce_inequalities.py:58-63": "Checks Solver Exit Conditions",
    "/microgrid_base/dsl_parser/sample.ies": "Chinese Model: \"abcd\" with Constants and List",
    "/microgrid_base/dsl_parser/suppress_strict_inequalities.py": "Suppressing Strict Inequalities in Pyomo",
    "/microgrid_base/dsl_parser/test/test_dsl.py": "DSL Parser Test Framework",
    "/microgrid_base/dsl_parser/test/test_dsl.py:1-36": "DSL-JSON Parser Test Suite",
    "/microgrid_base/dsl_parser/test/test_dsl.py:38-75": "Testing DSL Parser with TextX",
    "/microgrid_base/dsl_parser/textx_syntax.py": "TextX Syntax Parser",
    "/microgrid_base/dsl_parser/yacc_init.py": "Yacc-Based DSL Parser Initiation",
    "/microgrid_base/dsl_parser/your_model_name.lp": "Pyomo Microgrid Optimization Model",
    "/microgrid_base/dsl_parser/柴油.ies": "Fuel Model: Diesel Parameters",
    "/microgrid_base/enum_class_as_literal_type.py": "Enforcing Constants with Enum, Literal, Pydantic",
    "/microgrid_base/enumerate_possible_states.py": "Generating All Microgrid States",
    "/microgrid_base/enumerate_possible_states.py:1-33": "All Combinations of Microgrid States",
    "/microgrid_base/enumerate_possible_states.py:34-60": "Enumerating Possible Microgrid States",
    "/microgrid_base/enumerate_possible_states.py:61-67": "Generating All Possible Microgrid States"
}